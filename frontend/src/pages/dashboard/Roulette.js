import React, { Component } from "react";
import { useTranslation, Translation } from 'react-i18next';
import { toastr } from "react-redux-toastr";
import {
  Container,
  Row,
  Col,
  Input,
  ButtonGroup,
  Button,
  Card,
  CardBody,
  Progress,
  Modal,
  ModalHeader,
  ModalBody,
  Carousel,
  CarouselItem,
  CarouselControl
} from "reactstrap";
import {
  XSquare,
  Bold,
  ZoomIn,
  Upload,
  PlusSquare,
  RotateCcw,
  ArrowLeftCircle,
  Square,
  CheckSquare,
  PlayCircle,
  StopCircle,
  XCircle
} from "react-feather";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import { faUserClock, faClock, faHotel, faLock, faFilter } from "@fortawesome/free-solid-svg-icons";
import { Bar } from "react-chartjs-2";
import $ from 'jquery';
import StarRatingComponent from "react-star-rating-component";
import board_0 from "../../assets/img/Wheel-BG(degree-0).png";
import board_90 from "../../assets/img/Wheel-BG(degree-90).png";
import board_180 from "../../assets/img/Wheel-BG(degree-180).png";
import board_270 from "../../assets/img/Wheel-BG(degree-270).png";
import rotate_board_0 from "../../assets/img/Wheel-Angle(degree-0).png";
import rotate_board_90 from "../../assets/img/Wheel-Angle(degree-90).png";
import rotate_board_180 from "../../assets/img/Wheel-Angle(degree-180).png";
import rotate_board_270 from "../../assets/img/Wheel-Angle(degree-270).png";
import Wheel_1to12 from "../../assets/img/Wheel-1to12(degree-0).png";
import Wheel_13to24 from "../../assets/img/Wheel-13to24(degree-0).png";
import Wheel_25to36 from "../../assets/img/Wheel-25to36(degree-0).png";
import Wheel_1to18 from "../../assets/img/Wheel-1to18(degree-0).png";
import Wheel_19to36 from "../../assets/img/Wheel-19to36(degree-0).png";
import Wheel_Red from "../../assets/img/Wheel-Red(degree-0).png";
import Wheel_Blk from "../../assets/img/Wheel-Blk(degree-0).png";
import Wheel_Even from "../../assets/img/Wheel-Even(degree-0).png";
import Wheel_Odd from "../../assets/img/Wheel-Odd(degree-0).png";
import Wheel_Top from "../../assets/img/Wheel-Top(degree-0).png";
import Wheel_Mid from "../../assets/img/Wheel-Mid(degree-0).png";
import Wheel_Bottom from "../../assets/img/Wheel-Bottom(degree-0).png";
import Wheel_Zone1 from "../../assets/img/Wheel-Zone1(degree-0).png";
import Wheel_Zone1to2 from "../../assets/img/Wheel-Zone1+2(degree-0).png";
import Wheel_Zone1to3 from "../../assets/img/Wheel-Zone1+3(degree-0).png";
import Wheel_Zone2 from "../../assets/img/Wheel-Zone2(degree-0).png";
import Wheel_Zone2to3 from "../../assets/img/Wheel-Zone2+3(degree-0).png";
import Wheel_Zone3 from "../../assets/img/Wheel-Zone3(degree-0).png";
import Wheel_Zone3to4 from "../../assets/img/Wheel-Zone3+4(degree-0).png";
import Wheel_Zone4 from "../../assets/img/Wheel-Zone4(degree-0).png";
import Wheel_Zone4to1 from "../../assets/img/Wheel-Zone4+1(degree-0).png";
import Wheel_Zone4to2 from "../../assets/img/Wheel-Zone4+2(degree-0).png";
import Aboard_0 from "../../assets/img/AWheel-BG(degree-0).png";
import Aboard_90 from "../../assets/img/AWheel-BG(degree-90).png";
import Aboard_180 from "../../assets/img/AWheel-BG(degree-180).png";
import Aboard_270 from "../../assets/img/AWheel-BG(degree-270).png";
import Arotate_board_0 from "../../assets/img/AWheel-Angle(degree-0).png";
import Arotate_board_90 from "../../assets/img/AWheel-Angle(degree-90).png";
import Arotate_board_180 from "../../assets/img/AWheel-Angle(degree-180).png";
import Arotate_board_270 from "../../assets/img/AWheel-Angle(degree-270).png";
import AWheel_1to12 from "../../assets/img/AWheel-1to12(degree-0).png";
import AWheel_13to24 from "../../assets/img/AWheel-13to24(degree-0).png";
import AWheel_25to36 from "../../assets/img/AWheel-25to36(degree-0).png";
import AWheel_1to18 from "../../assets/img/AWheel-1to18(degree-0).png";
import AWheel_19to36 from "../../assets/img/AWheel-19to36(degree-0).png";
import AWheel_Red from "../../assets/img/AWheel-Red(degree-0).png";
import AWheel_Blk from "../../assets/img/AWheel-Blk(degree-0).png";
import AWheel_Even from "../../assets/img/AWheel-Even(degree-0).png";
import AWheel_Odd from "../../assets/img/AWheel-Odd(degree-0).png";
import AWheel_Top from "../../assets/img/AWheel-Top(degree-0).png";
import AWheel_Mid from "../../assets/img/AWheel-Mid(degree-0).png";
import AWheel_Bottom from "../../assets/img/AWheel-Bottom(degree-0).png";
import AWheel_Zone1 from "../../assets/img/AWheel-Zone1(degree-0).png";
import AWheel_Zone1to2 from "../../assets/img/AWheel-Zone1+2(degree-0).png";
import AWheel_Zone1to3 from "../../assets/img/AWheel-Zone1+3(degree-0).png";
import AWheel_Zone2 from "../../assets/img/AWheel-Zone2(degree-0).png";
import AWheel_Zone2to3 from "../../assets/img/AWheel-Zone2+3(degree-0).png";
import AWheel_Zone3 from "../../assets/img/AWheel-Zone3(degree-0).png";
import AWheel_Zone3to4 from "../../assets/img/AWheel-Zone3+4(degree-0).png";
import AWheel_Zone4 from "../../assets/img/AWheel-Zone4(degree-0).png";
import AWheel_Zone4to1 from "../../assets/img/AWheel-Zone4+1(degree-0).png";
import AWheel_Zone4to2 from "../../assets/img/AWheel-Zone4+2(degree-0).png";
import AAll0 from "../../assets/img/AWheel-all-0(degree-0).png";
import AAll1 from "../../assets/img/AWheel-all-1(degree-0).png";
import AAll2 from "../../assets/img/AWheel-all-2(degree-0).png";
import AAll3 from "../../assets/img/AWheel-all-3(degree-0).png";
import AAll4 from "../../assets/img/AWheel-all-4(degree-0).png";
import AAll5 from "../../assets/img/AWheel-all-5(degree-0).png";
import AAll6 from "../../assets/img/AWheel-all-6(degree-0).png";
import AAll7 from "../../assets/img/AWheel-all-7(degree-0).png";
import AAll8 from "../../assets/img/AWheel-all-8(degree-0).png";
import AAll9 from "../../assets/img/AWheel-all-9(degree-0).png";
import * as PageService from "../../action/page";
import * as UserService from '../../action/user';
import * as PaymentService from '../../action/payment';
import config from '../../config';

const APIUrl = config.server.APIUrl;

const options1 = {
  animation: false,
  maintainAspectRatio: false,
  tooltips: {
    enabled: false,
    position: 'nearest',
    intersect: false
  },
  legend: {
    display: false,
  },
  scales: {
    yAxes: [
      {
        gridLines: {
          display: false,
          drawBorder: false,
        },
        stacked: false,
        ticks: {
          display: false,
          min: 0,
          max: 4500
        },
      }
    ],
    xAxes: [
      {
        barPercentage: 0.9,
        categoryPercentage: 0.5,
        stacked: false,
        gridLines: {
          color: "transparent"
        },
      }
    ]
  }
};

const options3 = {
  animation: false,
  maintainAspectRatio: false,
  tooltips: {
    enabled: false,
    position: 'nearest',
    intersect: false
  },
  legend: {
    display: false,
  },
  scales: {
    yAxes: [
      {
        gridLines: {
          display: false,
          drawBorder: false,
        },
        stacked: false,
        ticks: {
          display: false,
          min: 0,
          max: 2750
        },
      }
    ],
    xAxes: [
      {
        barPercentage: 0.9,
        categoryPercentage: 0.5,
        stacked: false,
        gridLines: {
          color: "transparent"
        },
      }
    ]
  }
};

const options4 = {
  animation: false,
  maintainAspectRatio: false,
  tooltips: {
    enabled: false,
    position: 'nearest',
    intersect: false
  },
  legend: {
    display: false,
  },
  scales: {
    yAxes: [
      {
        gridLines: {
          display: false,
          drawBorder: false,
        },
        stacked: false,
        ticks: {
          display: false,
          min: 0,
          max: 3000
        },
      }
    ],
    xAxes: [
      {
        barPercentage: 0.9,
        categoryPercentage: 0.5,
        stacked: false,
        gridLines: {
          color: "transparent"
        },
      }
    ]
  }
};

const options5 = {
  animation: false,
  maintainAspectRatio: false,
  tooltips: {
    enabled: false,
    position: 'nearest',
    intersect: false
  },
  legend: {
    display: false,
  },
  scales: {
    yAxes: [
      {
        gridLines: {
          display: false,
          drawBorder: false,
        },
        stacked: false,
        ticks: {
          display: false,
          min: 0,
          max: 1500
        },
      }
    ],
    xAxes: [
      {
        barPercentage: 0.9,
        categoryPercentage: 0.5,
        stacked: false,
        gridLines: {
          color: "transparent"
        },
      }
    ]
  }
};

const items1 = [
  {
    id: 1,
  },
  {
    id: 2,
  },
  {
    id: 3,
  },
  {
    id: 4,
  },
  {
    id: 5,
  },
  {
    id: 6,
  }
];

const items2 = [
  {
    id: 1,
  },
  {
    id: 2,
  },
  {
    id: 3,
  },
  {
    id: 4,
  },
  {
    id: 5,
  }
];

const items3 = [
  {
    id: 1,
  },
  {
    id: 2,
  },
  {
    id: 3,
  },
  {
    id: 4,
  },
  {
    id: 5,
  }
];

const items4 = [
  {
    id: 1,
  },
  {
    id: 2,
  },
];

const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];

const btn_position = [0, 23, 6, 35, 4, 19, 10, 31, 16, 27, 18, 14, 33, 12, 25, 2, 21, 8, 29, 3, 24, 5, 28, 17, 20, 7, 36, 11, 32, 30, 15, 26, 1, 22, 9, 34, 13];

const angle_array = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R'];

const arrow = [
  [4, 0], [-20, -8], [-20, 8]
];

const degree_0_start_end = [1.5, 3.444, 3.5];
const degree_0_point = [
  [166, 28, 0], 
  [59, 240, 23], [269, 96, 6], [122, 31, 35], [244, 63, 4], [133, 281, 19], 
  [280, 182, 10], [52, 78, 31], [198, 275, 16], [27, 161, 27], [155, 282, 18], 
  [237, 254, 14], [83, 48, 33], [265, 222, 12], [36, 203, 25], [210, 40, 2], 
  [92, 266, 21], [282, 138, 8], [32, 118, 29], [228, 50, 3], [46, 222, 24], 
  [258, 80, 5], [28, 138, 28], [178, 280, 17], [112, 276, 20], [276, 116, 7], 
  [144, 28, 36], [274, 202, 11], [66, 62, 32], [40, 98, 30], [218, 266, 15], 
  [30, 182, 26], [188, 32, 1], [75, 255, 22], [284, 160, 9], [102, 38, 34], 
  [252, 240, 13]
];
const degree_90_start_end = [1, 2.944, 3];
const degree_90_point = [
  [28, 144, 0], 
  [240, 252, 23], [98, 40, 6], [30, 187, 35], [64, 65, 4], [281, 178, 19], 
  [184, 31, 10], [78, 256, 31], [276, 112, 16], [159, 283, 27], [284, 156, 18], 
  [256, 74, 14], [48, 227, 33], [224, 48, 12], [202, 274, 25], [39, 102, 2], 
  [266, 218, 21], [140, 28, 8], [116, 276, 29], [50, 82, 3], [222, 264, 24], 
  [80, 50, 5], [138, 282, 28], [282, 132, 17], [276, 198, 20], [118, 32, 7], 
  [28, 166, 36], [204, 38, 11], [62, 244, 32], [96, 268, 30], [266, 92, 15], 
  [180, 280, 26], [32, 120, 1], [256, 236, 22], [162, 28, 9], [38, 208, 34], 
  [242, 60, 13]
];
const degree_180_start_end = [0.5, 2.444, 2.5];
const degree_180_point = [
  [144, 282, 0], 
  [252, 72, 23], [41, 212, 6], [186, 279, 35], [67, 245, 4], [179, 30, 19], 
  [31, 126, 10], [258, 232, 31], [115, 34, 16], [283, 150, 27], [156, 26, 18], 
  [76, 54, 14], [228, 260, 33], [48, 86, 12], [274, 108, 25], [100, 270, 2], 
  [218, 44, 21], [28, 170, 8], [278, 194, 29], [84, 260, 3], [266, 88, 24], 
  [52, 232, 5], [282, 172, 28], [134, 28, 17], [198, 36, 20], [34, 192, 7], 
  [166, 283, 36], [38, 106, 11], [244, 246, 32], [270, 212, 30], [92, 44, 15], 
  [282, 128, 26], [124, 278, 1], [238, 56, 22], [28, 148, 9], [208, 272, 34], 
  [62, 68, 13]
];
const degree_270_start_end = [0, 1.944, 2];
const degree_270_point = [
  [282, 164, 0], 
  [70, 58, 23], [212, 268, 6], [278, 122, 35], [248, 242, 4], [28, 134, 19], 
  [129, 280, 10], [232, 52, 31], [35, 198, 16], [148, 28, 27], [28, 156, 18], 
  [56, 236, 14], [262, 82, 33], [88, 264, 12], [108, 36, 25], [274, 206, 2], 
  [44, 92, 21], [172, 280, 8], [192, 32, 29], [262, 226, 3], [88, 46, 24], 
  [232, 256, 5], [172, 28, 28], [29, 177, 17], [34, 112, 20], [194, 276, 7], 
  [282, 142, 36], [108, 274, 11], [248, 66, 32], [212, 40, 30], [44, 218, 15], 
  [128, 30, 26], [280, 186, 1], [54, 74, 22], [150, 282, 9], [272, 100, 34], 
  [72, 252, 13]
];

class Default extends Component
{
  range_group = [5, 45];
  last_axis = [0, 0];
  line_zoom_axis = [0, 0];
  rotate_zoom_axis = [0, 0];
  btn_row_temp = [];
  max_index = 0;
  filter_status = false;
  isCheckedAllData = false;
  isRotate = false;
  pCtx = null;
  lCtx = null;
  rCtx1 = null;
  rCtx2 = null;
  wheel_filter = false;
  rectIndex = 0;
  constructor(props) {
    super(props);
    this.canvasRef = React.createRef();
    this.state = {
      page_status: false,
      running: false,
      is_setTime: false,
      bar_status: false,
      undo_status: false,
      width_status: false,
      cSelected_status: false,
      isPieModalOpen: false,
      isLineModalOpen: false,
      isRotateModalOpen: false,
      isTableModal: false,
      isBlockBtnModalOpen: false,
      isPageRowModalOpen: false,
      isDealerAvatar: false,
      isSubscription: false,
      isFilter: false,
      isCheckedAllData: false,
      isSetFilter: false,
      isArrow: false,
      isPlay: false,
      isRB: false,
      isEO: false,
      isThreeG: false,
      isTwoG: false,
      isZone: false,
      isAngle: false,
      isTMB: false,
      isWRed: false,
      isWBlk: false,
      isWEven: false,
      isWOdd: false,
      isWTop: false,
      isWMid: false,
      isWBot: false,
      isW1to12: false,
      isW13to24: false,
      isW25to36: false,
      isW1to18: false,
      isW19to36: false,
      isWZone1: false,
      isWZone1to2: false,
      isWZone1to3: false,
      isWZone2: false,
      isWZone2to3: false,
      isWZone3: false,
      isWZone3to4: false,
      isWZone4: false,
      isWZone4to1: false,
      isWZone4to2: false,
      isWFilter: false,
      filterNumber: 1,
      rotate: 0,
      casino_name: '',
      dealer_name: '',
      dealer_avatar: null,
      last_position: 0,
      rating: 0,
      range_1: 5,
      range_2: 45,
      range_3: 1000,
      minutes: 25,
      seconds: 0,
      cSelected: [],
      temp: {},
      page_row: [],
      btn_row: [],
      btn_row_data: [],
      pie_row: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      pie_row_data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      zone_group: [0, 0, 0, 0],
      zone_group_data: [0, 0, 0, 0],
      data1: {
        labels: ["RED", "BLK"],
        datasets: [
          {
            displays: ["red", "black"],
            backgroundColor: ["#f44455", "#000"],
            borderColor: ["#f44455", "#000"],
            hoverBackgroundColor: ["#f44455", "#000"],
            hoverBorderColor: ["#f44455", "#000"],
            data: [0, 0]
          }
        ]
      },
      bar_data1: [0, 0],
      data2: {
        labels: ["EVEN", "ODD"],
        datasets: [
          {
            displays: ["even", "odd"],
            backgroundColor: ["#47bac1", "#E8EAED"],
            borderColor: ["#47bac1", "#E8EAED"],
            hoverBackgroundColor: ["#47bac1", "#E8EAED"],
            hoverBorderColor: ["#47bac1", "#E8EAED"],
            data: [0, 0]
          }
        ]
      },
      bar_data2: [0, 0],
      data3: {
        labels: ["1-18", "19-36"],
        datasets: [
          {
            displays: ["1-18", "19-36"],
            backgroundColor: ["#5fc27e", "#5b7dff"],
            borderColor: ["#5fc27e", "#5b7dff"],
            hoverBackgroundColor: ["#5fc27e", "#5b7dff"],
            hoverBorderColor: ["#5fc27e", "#5b7dff"],
            data: [0, 0]
          }
        ]
      },
      bar_data3: [0, 0],
      data4: {
        labels: ["1-12", "13-24", "25-36"],
        datasets: [
          {
            displays: ["1-12", "13-24", "25-36"],
            backgroundColor: ["#495057", "#a180da", "#fcc100"],
            borderColor: ["#495057", "#a180da", "#fcc100"],
            hoverBackgroundColor: ["#495057", "#a180da", "#fcc100"],
            hoverBorderColor: ["#495057", "#a180da", "#fcc100"],
            data: [0, 0, 0]
          }
        ]
      },
      bar_data4: [0, 0, 0],
      data5: {
        labels: ["Zone1", "Zone2", "Zone3", "Zone4"],
        datasets: [
          {
            displays: ["Zone1", "Zone2", "Zone3", "Zone4"],
            backgroundColor: ["#495057", "#a180da", "#fcc100", "#3086ff"],
            borderColor: ["#495057", "#a180da", "#fcc100", "#3086ff"],
            hoverBackgroundColor: ["#495057", "#a180da", "#fcc100", "#3086ff"],
            hoverBorderColor: ["#495057", "#a180da", "#fcc100", "#3086ff"],
            data: [0, 0, 0, 0]
          }
        ]
      },
      bar_data5: [0, 0, 0, 0],
      data6: {
        labels: ["0", "32", "15", "19", "4", "21", "2", "25", "17", "34", "6", "27", "13", "36", "11", "30", "8", "23", "10", "5", "24", "16", "33", "1", "20", "14", "31", "9", "22", "18", "29", "7", "28", "12", "35", "3", "26"],
        datasets: [
          {
            displays: ["0", "32", "15", "19", "4", "21", "2", "25", "17", "34", "6", "27", "13", "36", "11", "30", "8", "23", "10", "5", "24", "16", "33", "1", "20", "14", "31", "9", "22", "18", "29", "7", "28", "12", "35", "3", "26"],
            backgroundColor: ["#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057"],
            borderColor: ["#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057"],
            hoverBackgroundColor: ["#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057"],
            hoverBorderColor: ["#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057"],
            data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
          }
        ]
      },
      bar_data6: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      data7: {
        labels: ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R"],
        datasets: [
          {
            displays: ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R"],
            backgroundColor: ["#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100"],
            borderColor: ["#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100"],
            hoverBackgroundColor: ["#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100"],
            hoverBorderColor: ["#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100"],
            data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
          }
        ]
      },
      bar_data7: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      data8: {
        labels: ["Top", "Middle", "Bottom"],
        datasets: [
          {
            displays: ["Top", "Middle", "Bottom"],
            backgroundColor: ["#495057", "#a180da", "#fcc100"],
            borderColor: ["#495057", "#a180da", "#fcc100"],
            hoverBackgroundColor: ["#495057", "#a180da", "#fcc100"],
            hoverBorderColor: ["#495057", "#a180da", "#fcc100"],
            data: [0, 0, 0]
          }
        ]
      },
      bar_data8: [0, 0, 0],
      angle_row: [],
      activeIndex1: 0,
      activeIndex2: 0,
      activeIndex3: 0,
      activeIndex4: 0,
      top: 0,
      window_width: 0,
      current_date: '',
      title: "Update",
      message: "Hello!",
      type: "success",
      timeOut: 3000,
      showCloseButton: false,
      progressBar: true,
      position: "top-right",
      pages: {},
      status: false,
      show_notification: true,
      bar_message: '',
      enable_bar_click: false,
      on_click_go_to: '',
      open_in_a_new_tab: false,
      show_button: false,
      button_text: '',
      button_color: '#000000',
      button_text_color: '#FFFFFF',
      show_discount_code: false,
      discount_code: '',
      text_color: '#FFFFFF',
      coupon_code_color: '#FFFFFF',
      background_left_color: '#000000',
      background_right_color: '#FFFFFF',
      show_shadow: false,
      notification_style: {backgroundImage: 'linear-gradient(to right, , )'},
      message_style: {color: ''},
      discount_btn_style: {border: '1px #FFFFFF dashed', backgroundColor: 'transparent', color: ''},
      button_style: {backgroundColor: '', color: '', borderColor: ''},
      close_style: {color: '', cursor: 'pointer'},
      notification_time: ''
    };
    
    this.startCountDown = this.startCountDown.bind(this);
    this.tick = this.tick.bind(this);
  }

  componentWillUnmount() {
    clearInterval(this.intervalHandle);
    clearInterval(this.player);
    clearInterval(this.getRectsInterval);
    window.removeEventListener('scroll', this.handleScroll);
    window.removeEventListener('resize', this.resize);
  }

  componentWillMount() {
    window.addEventListener('scroll', this.handleScroll);
    window.addEventListener('resize', this.resize);
    
    let range_group = window.localStorage.getItem('range_group');
    range_group = JSON.parse(range_group);
    if (range_group) {
      this.setState({
        range_1: parseInt(range_group[0], 10),
        range_2: parseInt(range_group[1], 10)
      })
      this.range_group[0] = parseInt(range_group[0], 10);
      this.range_group[1] = parseInt(range_group[1], 10);
    }
  }

  async componentDidMount() {

    let page_row = window.localStorage.getItem('page_row');
    page_row = JSON.parse(page_row);
    let self = this;
    if (page_row) {
      for (let index = 0; index < page_row.length; index++) {
        if (page_row[index]['active'] === 1) {
          let send_data = {};
          send_data['page_id'] = page_row[index]['id'];
          PageService.get_page(send_data).then(function(res) {
            if (res.data.success) {
              // console.log('success');
              let rating = parseInt(res.data.historyinfo.rating, 10);
              let times = JSON.parse(res.data.historyinfo.times);
              let minutes = times[0];
              let seconds = times[1];
              let range1 = parseInt(self.state.range_1, 10);
              let range2 = parseInt(self.state.range_2, 10);
              let btn_row = JSON.parse(res.data.historyinfo.btn_row);
              let btn_row_data = JSON.parse(res.data.historyinfo.btn_row);
              let pie_row_data = JSON.parse(res.data.historyinfo.pie_row);
              let zone_group_data = JSON.parse(res.data.historyinfo.zone_group);
              let bar_data1 = JSON.parse(res.data.historyinfo.bar_data1);
              let bar_data2 = JSON.parse(res.data.historyinfo.bar_data2);
              let bar_data3 = JSON.parse(res.data.historyinfo.bar_data3);
              let bar_data4 = JSON.parse(res.data.historyinfo.bar_data4);
              let bar_data5 = JSON.parse(res.data.historyinfo.bar_data5);
              let bar_data6 = JSON.parse(res.data.historyinfo.bar_data6);
              let bar_data7 = JSON.parse(res.data.historyinfo.bar_data7);
              let bar_data8 = JSON.parse(res.data.historyinfo.bar_data8);
              let pie_row = self.state.pie_row;
              let zone_group = self.state.zone_group;
              let data1 = self.state.data1;
              let data2 = self.state.data2;
              let data3 = self.state.data3;
              let data4 = self.state.data4;
              let data5 = self.state.data5;
              let data6 = self.state.data6;
              let data7 = self.state.data7;
              let data8 = self.state.data8;
              let angle_row = [];
              self.setState({
                running: false,
                is_setTime: false,
                isFilter: page_row[index]['filter_status'],
                filterNumber: page_row[index]['filter_num'],
                rating: rating,
                minutes: minutes,
                seconds: seconds,
                page_row: page_row,
                cSelected: [],
                cSelected_status: false,
                undo_status: false,
                page_status: true,
              })
              if (page_row[index]['filter_status']) {
                btn_row_data = [];
                bar_data1 = [0, 0];
                bar_data2 = [0, 0];
                bar_data3 = [0, 0];
                bar_data4 = [0, 0, 0];
                bar_data5 = [0, 0, 0, 0];
                bar_data6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                bar_data7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                bar_data8 = [0, 0, 0];
                pie_row_data = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                zone_group_data = [0, 0, 0, 0];
                if (btn_row.length) {
                  let filter_length = parseInt(page_row[index]['filter_num'], 10) < btn_row.length ? parseInt(page_row[index]['filter_num'], 10) : btn_row.length;
                  for (var index2 = 0; index2 < filter_length; index2++) {
                    // zone 1
                    if (btn_row[index2] === 0) {
                      pie_row_data[0] += 5;
                      if (pie_row_data[0] > 119) {
                        pie_row_data[0] = 119;
                      }
                      zone_group_data[0] += 1;
                      bar_data5[0] += 1;
                      bar_data6[0] += 1;
                    }

                    if (btn_row[index2] === 32) {
                      pie_row_data[32] += 5;
                      if (pie_row_data[32] > 119) {
                        pie_row_data[32] = 119;
                      }
                      bar_data1[0] += 1;
                      bar_data2[0] += 1;
                      bar_data3[1] += 1;
                      bar_data4[2] += 1;
                      bar_data5[0] += 1;
                      bar_data6[1] += 1;
                      bar_data8[1] += 1;
                      zone_group_data[0] += 1;
                    }

                    if (btn_row[index2] === 15) {
                      pie_row_data[15] += 5;
                      if (pie_row_data[15] > 119) {
                        pie_row_data[15] = 119;
                      }
                      bar_data1[1] += 1;
                      bar_data2[1] += 1;
                      bar_data3[0] += 1;
                      bar_data4[1] += 1;
                      bar_data5[0] += 1;
                      bar_data6[2] += 1;
                      bar_data8[0] += 1;
                      zone_group_data[0] += 1;
                    }

                    if (btn_row[index2] === 19) {
                      pie_row_data[19] += 5;
                      if (pie_row_data[19] > 119) {
                        pie_row_data[19] = 119;
                      }
                      bar_data1[0] += 1;
                      bar_data2[1] += 1;
                      bar_data3[1] += 1;
                      bar_data4[1] += 1;
                      bar_data5[0] += 1;
                      bar_data6[3] += 1;
                      bar_data8[2] += 1;
                      zone_group_data[0] += 1;
                    }

                    if (btn_row[index2] === 4) {
                      pie_row_data[4] += 5;
                      if (pie_row_data[4] > 119) {
                        pie_row_data[4] = 119;
                      }
                      bar_data1[1] += 1;
                      bar_data2[0] += 1;
                      bar_data3[0] += 1;
                      bar_data4[0] += 1;
                      bar_data5[0] += 1;
                      bar_data6[4] += 1;
                      bar_data8[2] += 1;
                      zone_group_data[0] += 1;
                    }

                    if (btn_row[index2] === 21) {
                      pie_row_data[21] += 5;
                      if (pie_row_data[21] > 119) {
                        pie_row_data[21] = 119;
                      }
                      bar_data1[0] += 1;
                      bar_data2[1] += 1;
                      bar_data3[1] += 1;
                      bar_data4[1] += 1;
                      bar_data5[0] += 1;
                      bar_data6[5] += 1;
                      bar_data8[0] += 1;
                      zone_group_data[0] += 1;
                    }

                    if (btn_row[index2] === 2) {
                      pie_row_data[2] += 5;
                      if (pie_row_data[2] > 119) {
                        pie_row_data[2] = 119;
                      }
                      bar_data1[1] += 1;
                      bar_data2[0] += 1;
                      bar_data3[0] += 1;
                      bar_data4[0] += 1;
                      bar_data5[0] += 1;
                      bar_data6[6] += 1;
                      bar_data8[1] += 1;
                      zone_group_data[0] += 1;
                    }

                    if (btn_row[index2] === 25) {
                      pie_row_data[25] += 5;
                      if (pie_row_data[25] > 119) {
                        pie_row_data[25] = 119;
                      }
                      bar_data1[0] += 1;
                      bar_data2[1] += 1;
                      bar_data3[1] += 1;
                      bar_data4[2] += 1;
                      bar_data5[0] += 1;
                      bar_data7[6] += 1;
                      bar_data8[2] += 1;
                      zone_group_data[0] += 1;
                    }

                    if (btn_row[index2] === 17) {
                      pie_row_data[17] += 5;
                      if (pie_row_data[17] > 119) {
                        pie_row_data[17] = 119;
                      }
                      bar_data1[1] += 1;
                      bar_data2[1] += 1;
                      bar_data3[0] += 1;
                      bar_data4[1] += 1;
                      bar_data5[0] += 1;
                      bar_data6[8] += 1;
                      bar_data8[1] += 1;
                      zone_group_data[0] += 1;
                    }
                      
                    // zone 2
                    if (btn_row[index2] === 34) {
                      pie_row_data[34] += 5;
                      if (pie_row_data[34] > 119) {
                        pie_row_data[34] = 119;
                      }
                      bar_data1[0] += 1;
                      bar_data2[0] += 1;
                      bar_data3[1] += 1;
                      bar_data4[2] += 1;
                      bar_data5[1] += 1;
                      bar_data6[9] += 1;
                      bar_data8[2] += 1;
                      zone_group_data[1] += 1;
                    }

                    if (btn_row[index2] === 6) {
                      pie_row_data[6] += 5;
                      if (pie_row_data[6] > 119) {
                        pie_row_data[6] = 119;
                      }
                      bar_data1[1] += 1;
                      bar_data2[0] += 1;
                      bar_data3[0] += 1;
                      bar_data4[0] += 1;
                      bar_data5[1] += 1;
                      bar_data6[10] += 1;
                      bar_data8[0] += 1;
                      zone_group_data[1] += 1;
                    }

                    if (btn_row[index2] === 27) {
                      pie_row_data[27] += 5;
                      if (pie_row_data[27] > 119) {
                        pie_row_data[27] = 119;
                      }
                      bar_data1[0] += 1;
                      bar_data2[1] += 1;
                      bar_data3[1] += 1;
                      bar_data4[2] += 1;
                      bar_data5[1] += 1;
                      bar_data6[11] += 1;
                      bar_data8[0] += 1;
                      zone_group_data[1] += 1;
                    }

                    if (btn_row[index2] === 13) {
                      pie_row_data[13] += 5;
                      if (pie_row_data[13] > 119) {
                        pie_row_data[13] = 119;
                      }
                      bar_data1[1] += 1;
                      bar_data2[1] += 1;
                      bar_data3[0] += 1;
                      bar_data4[1] += 1;
                      bar_data5[1] += 1;
                      bar_data6[12] += 1;
                      bar_data8[2] += 1;
                      zone_group_data[1] += 1;
                    }

                    if (btn_row[index2] === 36) {
                      pie_row_data[36] += 5;
                      if (pie_row_data[36] > 119) {
                        pie_row_data[36] = 119;
                      }
                      bar_data1[0] += 1;
                      bar_data2[0] += 1;
                      bar_data3[1] += 1;
                      bar_data4[2] += 1;
                      bar_data5[1] += 1;
                      bar_data6[13] += 1;
                      bar_data8[0] += 1;
                      zone_group_data[1] += 1;
                    }

                    if (btn_row[index2] === 11) {
                      pie_row_data[11] += 5;
                      if (pie_row_data[11] > 119) {
                        pie_row_data[11] = 119;
                      }
                      bar_data1[1] += 1;
                      bar_data2[1] += 1;
                      bar_data3[0] += 1;
                      bar_data4[0] += 1;
                      bar_data5[1] += 1;
                      bar_data6[14] += 1;
                      bar_data8[1] += 1;
                      zone_group_data[1] += 1;
                    }

                    if (btn_row[index2] === 30) {
                      pie_row_data[30] += 5;
                      if (pie_row_data[30] > 119) {
                        pie_row_data[30] = 119;
                      }
                      bar_data1[0] += 1;
                      bar_data2[0] += 1;
                      bar_data3[1] += 1;
                      bar_data4[2] += 1;
                      bar_data5[1] += 1;
                      bar_data6[15] += 1;
                      bar_data8[0] += 1;
                      zone_group_data[1] += 1;
                    }

                    if (btn_row[index2] === 8) {
                      pie_row_data[8] += 5;
                      if (pie_row_data[8] > 119) {
                        pie_row_data[8] = 119;
                      }
                      bar_data1[1] += 1;
                      bar_data2[0] += 1;
                      bar_data3[0] += 1;
                      bar_data4[0] += 1;
                      bar_data5[1] += 1;
                      bar_data6[16] += 1;
                      bar_data8[1] += 1;
                      zone_group_data[1] += 1;
                    }

                    if (btn_row[index2] === 23) {
                      pie_row_data[23] += 5;
                      if (pie_row_data[23] > 119) {
                        pie_row_data[23] = 119;
                      }
                      bar_data1[0] += 1;
                      bar_data2[1] += 1;
                      bar_data3[1] += 1;
                      bar_data4[1] += 1;
                      bar_data5[1] += 1;
                      bar_data6[17] += 1;
                      bar_data8[1] += 1;
                      zone_group_data[1] += 1;
                    }

                    if (btn_row[index2] === 10) {
                      pie_row_data[10] += 5;
                      if (pie_row_data[10] > 119) {
                        pie_row_data[10] = 119;
                      }
                      bar_data1[1] += 1;
                      bar_data2[0] += 1;
                      bar_data3[0] += 1;
                      bar_data4[0] += 1;
                      bar_data5[1] += 1;
                      bar_data6[18] += 1;
                      bar_data8[2] += 1;
                      zone_group_data[1] += 1;
                    }

                    // zone 3
                    if (btn_row[index2] === 5) {
                      pie_row_data[5] += 5;
                      if (pie_row_data[5] > 119) {
                        pie_row_data[5] = 119;
                      }
                      bar_data1[0] += 1;
                      bar_data2[1] += 1;
                      bar_data3[0] += 1;
                      bar_data4[0] += 1;
                      bar_data5[2] += 1;
                      bar_data6[19] += 1;
                      bar_data8[1] += 1;
                      zone_group_data[2] += 1;
                    }

                    if (btn_row[index2] === 24) {
                      pie_row_data[24] += 5;
                      if (pie_row_data[24] > 119) {
                        pie_row_data[24] = 119;
                      }
                      bar_data1[1] += 1;
                      bar_data2[0] += 1;
                      bar_data3[1] += 1;
                      bar_data4[1] += 1;
                      bar_data5[2] += 1;
                      bar_data6[20] += 1;
                      bar_data8[0] += 1;
                      zone_group_data[2] += 1;
                    }

                    if (btn_row[index2] === 16) {
                      pie_row_data[16] += 5;
                      if (pie_row_data[16] > 119) {
                        pie_row_data[16] = 119;
                      }
                      bar_data1[0] += 1;
                      bar_data2[0] += 1;
                      bar_data3[0] += 1;
                      bar_data4[1] += 1;
                      bar_data5[2] += 1;
                      bar_data6[21] += 1;
                      bar_data8[2] += 1;
                      zone_group_data[2] += 1;
                    }

                    if (btn_row[index2] === 33) {
                      pie_row_data[33] += 5;
                      if (pie_row_data[33] > 119) {
                        pie_row_data[33] = 119;
                      }
                      bar_data1[1] += 1;
                      bar_data2[1] += 1;
                      bar_data3[1] += 1;
                      bar_data4[2] += 1;
                      bar_data5[2] += 1;
                      bar_data6[22] += 1;
                      bar_data8[0] += 1;
                      zone_group_data[2] += 1;
                    }

                    if (btn_row[index2] === 1) {
                      pie_row_data[1] += 5;
                      if (pie_row_data[1] > 119) {
                        pie_row_data[1] = 119;
                      }
                      bar_data1[0] += 1;
                      bar_data2[1] += 1;
                      bar_data3[0] += 1;
                      bar_data4[0] += 1;
                      bar_data5[2] += 1;
                      bar_data6[23] += 1;
                      bar_data8[2] += 1;
                      zone_group_data[2] += 1;
                    }

                    if (btn_row[index2] === 20) {
                      pie_row_data[20] += 5;
                      if (pie_row_data[20] > 119) {
                        pie_row_data[20] = 119;
                      }
                      bar_data1[1] += 1;
                      bar_data2[0] += 1;
                      bar_data3[1] += 1;
                      bar_data4[1] += 1;
                      bar_data5[2] += 1;
                      bar_data6[24] += 1;
                      bar_data8[1] += 1;
                      zone_group_data[2] += 1;
                    }

                    if (btn_row[index2] === 14) {
                      pie_row_data[14] += 5;
                      if (pie_row_data[14] > 119) {
                        pie_row_data[14] = 119;
                      }
                      bar_data1[0] += 1;
                      bar_data2[0] += 1;
                      bar_data3[0] += 1;
                      bar_data4[1] += 1;
                      bar_data5[2] += 1;
                      bar_data6[25] += 1;
                      bar_data8[1] += 1;
                      zone_group_data[2] += 1;
                    }

                    if (btn_row[index2] === 31) {
                      pie_row_data[31] += 5;
                      if (pie_row_data[31] > 119) {
                        pie_row_data[31] = 119;
                      }
                      bar_data1[1] += 1;
                      bar_data2[1] += 1;
                      bar_data3[1] += 1;
                      bar_data4[2] += 1;
                      bar_data5[2] += 1;
                      bar_data6[26] += 1;
                      bar_data8[2] += 1;
                      zone_group_data[2] += 1;
                    }

                    if (btn_row[index2] === 9) {
                      pie_row_data[9] += 5;
                      if (pie_row_data[9] > 119) {
                        pie_row_data[9] = 119;
                      }
                      bar_data1[0] += 1;
                      bar_data2[1] += 1;
                      bar_data3[0] += 1;
                      bar_data4[0] += 1;
                      bar_data5[2] += 1;
                      bar_data6[27] += 1;
                      bar_data8[0] += 1;
                      zone_group_data[2] += 1;
                    }

                    // zone 4
                    if (btn_row[index2] === 22) {
                      pie_row_data[22] += 5;
                      if (pie_row_data[22] > 119) {
                        pie_row_data[22] = 119;
                      }
                      bar_data1[1] += 1;
                      bar_data2[0] += 1;
                      bar_data3[1] += 1;
                      bar_data4[1] += 1;
                      bar_data5[3] += 1;
                      bar_data6[28] += 1;
                      bar_data8[2] += 1;
                      zone_group_data[3] += 1;
                    }

                    if (btn_row[index2] === 18) {
                      pie_row_data[18] += 5;
                      if (pie_row_data[18] > 119) {
                        pie_row_data[18] = 119;
                      }
                      bar_data1[0] += 1;
                      bar_data2[0] += 1;
                      bar_data3[0] += 1;
                      bar_data4[1] += 1;
                      bar_data5[3] += 1;
                      bar_data6[29] += 1;
                      zone_group_data[3] += 1;
                    }

                    if (btn_row[index2] === 29) {
                      pie_row_data[29] += 5;
                      if (pie_row_data[29] > 119) {
                        pie_row_data[29] = 119;
                      }
                      bar_data1[1] += 1;
                      bar_data2[1] += 1;
                      bar_data3[1] += 1;
                      bar_data4[2] += 1;
                      bar_data5[3] += 1;
                      bar_data6[30] += 1;
                      bar_data8[1] += 1;
                      zone_group_data[3] += 1;
                    }

                    if (btn_row[index2] === 7) {
                      pie_row_data[7] += 5;
                      if (pie_row_data[7] > 119) {
                        pie_row_data[7] = 119;
                      }
                      bar_data1[0] += 1;
                      bar_data2[1] += 1;
                      bar_data3[0] += 1;
                      bar_data4[0] += 1;
                      bar_data5[3] += 1;
                      bar_data6[31] += 1;
                      bar_data8[2] += 1;
                      zone_group_data[3] += 1;
                    }

                    if (btn_row[index2] === 28) {
                      pie_row_data[28] += 5;
                      if (pie_row_data[28] > 119) {
                        pie_row_data[28] = 119;
                      }
                      bar_data1[1] += 1;
                      bar_data2[0] += 1;
                      bar_data3[1] += 1;
                      bar_data4[2] += 1;
                      bar_data5[3] += 1;
                      bar_data6[32] += 1;
                      zone_group_data[3] += 1;
                    }

                    if (btn_row[index2] === 12) {
                      pie_row_data[12] += 5;
                      if (pie_row_data[12] > 119) {
                        pie_row_data[12] = 119;
                      }
                      bar_data1[0] += 1;
                      bar_data2[0] += 1;
                      bar_data3[0] += 1;
                      bar_data4[0] += 1;
                      bar_data5[3] += 1;
                      bar_data6[33] += 1;
                      bar_data8[0] += 1;
                      zone_group_data[3] += 1;
                    }

                    if (btn_row[index2] === 35) {
                      pie_row_data[35] += 5;
                      if (pie_row_data[35] > 119) {
                        pie_row_data[35] = 119;
                      }
                      bar_data1[1] += 1;
                      bar_data2[1] += 1;
                      bar_data3[1] += 1;
                      bar_data4[2] += 1;
                      bar_data5[3] += 1;
                      bar_data6[34] += 1;
                      bar_data8[1] += 1;
                      zone_group_data[3] += 1;
                    }

                    if (btn_row[index2] === 3) {
                      pie_row_data[3] += 5;
                      if (pie_row_data[3] > 119) {
                        pie_row_data[3] = 119;
                      }
                      bar_data1[0] += 1;
                      bar_data2[1] += 1;
                      bar_data3[0] += 1;
                      bar_data4[0] += 1;
                      bar_data5[3] += 1;
                      bar_data6[35] += 1;
                      bar_data8[0] += 1;
                      zone_group_data[3] += 1;
                    }

                    if (btn_row[index2] === 26) {
                      pie_row_data[26] += 5;
                      if (pie_row_data[26] > 119) {
                        pie_row_data[26] = 119;
                      }
                      bar_data1[1] += 1;
                      bar_data2[0] += 1;
                      bar_data3[1] += 1;
                      bar_data4[2] += 1;
                      bar_data5[3] += 1;
                      bar_data6[36] += 1;
                      bar_data8[1] += 1;
                      zone_group_data[3] += 1;
                    }
                  }
                  let last_num = filter_length - 1;
                  let last_position = parseInt(page_row[index]['filter_num'], 10) < btn_row.length ? btn_row[filter_length] : 0;
                  for (let btn_index = last_num; btn_index >= 0; btn_index--) {
                    btn_row_data.splice(0, 0, btn_row[btn_index]);
                    if (btn_position[last_position] === btn_position[btn_row[btn_index]]) {
                      bar_data7[0] += 1;
                    } else {
                      let btn_index1 = Math.abs(btn_position[btn_row[btn_index]] - btn_position[last_position]) - 1;
                      if (btn_index1 >= 18) {
                        btn_index1 = Math.abs(btn_index1 - 35);
                      }
                      bar_data7[btn_index1] += 1;
                    }
                    last_position = btn_row[btn_index];
                  }
                }
              }
              if (btn_row.length) {
                let last_num = btn_row.length - 1;
                let last_position = 0;
                for (let btn_index = last_num; btn_index >= 0; btn_index--) {
                  if (btn_position[last_position] === btn_position[btn_row[btn_index]]) {
                    angle_row.splice(0, 0, angle_array[0]);
                  } else {
                    let btn_index1 = Math.abs(btn_position[btn_row[btn_index]] - btn_position[last_position]) - 1;
                    if (btn_index1 >= 18) {
                      btn_index1 = Math.abs(btn_index1 - 35);
                    }
                    angle_row.splice(0, 0, angle_array[btn_index1]);
                  }
                  last_position = btn_row[btn_index];
                }
              }
              for (var pie_index = 0; pie_index < pie_row_data.length; pie_index++) {
                pie_row[pie_index] = pie_row_data[pie_index] * range1;
                if (pie_row[pie_index] > 119) {
                  pie_row[pie_index] = 119;
                }
              }
              for (var zone_group_data_index = 0; zone_group_data_index < zone_group_data.length; zone_group_data_index++) {
                zone_group[zone_group_data_index] = zone_group_data[zone_group_data_index] * range2;
              }
              for (var data1_index = 0; data1_index < bar_data1.length; data1_index++) {
                data1.datasets[0].data[data1_index] = bar_data1[data1_index] * range2;
              }
              for (var data2_index = 0; data2_index < bar_data2.length; data2_index++) {
                data2.datasets[0].data[data2_index] = bar_data2[data2_index] * range2;
              }
              for (var data3_index = 0; data3_index < bar_data3.length; data3_index++) {
                data3.datasets[0].data[data3_index] = bar_data3[data3_index] * range2;
              }
              for (var data4_index = 0; data4_index < bar_data4.length; data4_index++) {
                data4.datasets[0].data[data4_index] = bar_data4[data4_index] * range2;
              }
              for (var data5_index = 0; data5_index < bar_data5.length; data5_index++) {
                data5.datasets[0].data[data5_index] = bar_data5[data5_index] * range2;
              }
              for (var data6_index = 0; data6_index < bar_data6.length; data6_index++) {
                data6.datasets[0].data[data6_index] = bar_data6[data6_index] * range2;
              }
              for (var data7_index = 0; data7_index < bar_data7.length; data7_index++) {
                data7.datasets[0].data[data7_index] = bar_data7[data7_index] * range2;
              }
              for (var data8_index = 0; data8_index < bar_data8.length; data8_index++) {
                data8.datasets[0].data[data8_index] = bar_data8[data8_index] * range2;
              }
              self.setState({
                btn_row: btn_row_data,
                btn_row_data: btn_row,
                pie_row: pie_row,
                pie_row_data: pie_row_data,
                zone_group: zone_group,
                zone_group_data: zone_group_data,
                data1: data1,
                bar_data1: bar_data1,
                data2: data2,
                bar_data2: bar_data2,
                data3: data3,
                bar_data3: bar_data3,
                data4: data4,
                bar_data4: bar_data4,
                data5: data5,
                bar_data5: bar_data5,
                data6: data6,
                bar_data6: bar_data6,
                data7: data7,
                bar_data7: bar_data7,
                data8: data8,
                bar_data8: bar_data8,
                angle_row: angle_row,
                bar_status: true
              })
              if (btn_row_data.length) {
                self.setState({
                  last_position: btn_row_data[0]
                })
              } else {
                self.setState({
                  last_position: 0
                })
              }
              if (res.data.historyinfo.dealer_avatar) {
                self.setState({
                  isDealerAvatar: true,
                  dealer_avatar: APIUrl + res.data.historyinfo.dealer_avatar
                })
              } else {
                self.setState({
                  isDealerAvatar: false,
                  dealer_avatar: null
                })
              }
              self.updatePieCanvas();
              self.updateRotateCanvas();
              self.updateLineCanvas();
              
            } else {
              console.log('fail');
            }
          })
        }
      }
    }

    let userinfo = window.localStorage.getItem('userinfo');
    userinfo = JSON.parse(userinfo);
    let send_data = {};
    send_data['user_id'] = userinfo['id'];
    send_data['dev'] = 0;
    PageService.get_histories(send_data).then(function(res) {
      if (res.data.success) {
        // console.log('success');

        let historyinfo = res.data.historyinfo;
        let page_group = {};
        
        if (historyinfo.length) {
          for (var historyinfo_index = 0; historyinfo_index < historyinfo.length; historyinfo_index++) {
            let created_at = new Date(res.data.historyinfo[historyinfo_index].created_at);
            created_at = created_at.getFullYear() + '-' + ('0' + (created_at.getMonth() + 1)).slice(-2) + '-' + created_at.getDate();
            let updated_at = new Date(res.data.historyinfo[historyinfo_index].updated_at);
            updated_at = months[updated_at.getMonth()] + ' '  + updated_at.getDate() + ' ' + updated_at.getFullYear() + ' '  + updated_at.getHours() + ':' + updated_at.getMinutes() + ':' + updated_at.getSeconds();

            let stack = {};
            stack['id'] = res.data.historyinfo[historyinfo_index]['id'];
            stack['casino_name'] = res.data.historyinfo[historyinfo_index]['casino_name'];
            stack['dealer_name'] = res.data.historyinfo[historyinfo_index]['dealer_name'];
            stack['rating'] = res.data.historyinfo[historyinfo_index]['rating'];
            stack['dealer_avatar'] = res.data.historyinfo[historyinfo_index]['dealer_avatar'];
            stack['created_at'] = created_at;
            stack['updated_at'] = updated_at;

            if (!page_group[created_at]) {
              page_group[created_at] = [];
            }
            page_group[created_at].push(stack);
          }
          self.setState({
            pages: page_group,
            status: true
          })
        }
      } else {
        console.log('fail');
      }
    })
    
    this.getExpiredDate();
    this.pieCanvas();
    this.lineCanvas();
    this.rotateCanvas();
    this.getCurrentDate();

    
    window.addEventListener('scroll', this.handleScroll);
    window.addEventListener('resize', this.resize);
    this.handleScroll();

    this.getRectsInterval = setInterval(() => {
      let documentRect = document.body.getBoundingClientRect();
      let width = documentRect.width;
      let top = document.getElementById('keyboard').getBoundingClientRect().top;
      top = top - documentRect.top;
      this.setState({
        window_width: width,
        top: top,
        type: ''
      })

      let pie_group_width = document.getElementById('pie_group').clientWidth;
      if(pie_group_width < 1020) {
        this.setState({
          width_status: true,
          type: ''
        })
      } else {
        this.setState({
          width_status: false,
          type: ''
        })
      }
      this.rectIndex++;
      if (this.rectIndex > 10)
        clearInterval(this.getRectsInterval);
    }, 10);

    try {
      const res = await UserService.get_settings({context: 'Notification'});
      if (res.data.settings.data) {
        let data = JSON.parse(res.data.settings.data);
        let updated_at = new Date(res.data.settings.updated_at);
        let notification_time = window.localStorage.getItem('notification_time');
        if (notification_time) {
          if (parseInt(notification_time, 10) - updated_at.getTime() == 0) {
            this.setState({
              show_notification: false
            })
          }
        }
        this.setState({
          bar_message: data.bar_message,
          enable_bar_click: data.enable_bar_click,
          on_click_go_to: data.on_click_go_to,
          open_in_a_new_tab: data.open_in_a_new_tab,
          show_button: data.show_button,
          button_text: data.button_text,
          button_color: data.button_color,
          button_text_color: data.button_text_color,
          show_discount_code: data.show_discount_code,
          discount_code: data.discount_code,
          text_color: data.text_color,
          coupon_code_color: data.coupon_code_color,
          background_left_color: data.background_left_color,
          background_right_color: data.background_right_color,
          show_shadow: data.show_shadow,
          notification_time: updated_at.getTime()
        })
        if (!data.show_shadow) {
          this.setState({
            notification_style: {backgroundImage: 'linear-gradient(to right, ' + data.background_left_color + ', ' + data.background_left_color +')'},
            message_style: {color: data.text_color},
            discount_btn_style: {border: '1px #FFF dashed', backgroundColor: 'transparent', color: data.text_color},
            button_style: {backgroundColor: data.button_color, borderColor: data.button_color, color: data.button_text_color},
            close_style: {color: data.coupon_code_color, cursor: 'pointer'}
          })
        } else {
          this.setState({
            notification_style: {backgroundImage: 'linear-gradient(to right, ' + data.background_left_color + ', ' + data.background_right_color +')'},
            message_style: {color: data.text_color},
            discount_btn_style: {border: '1px #FFF dashed', backgroundColor: 'transparent', color: data.text_color},
            button_style: {backgroundColor: data.button_color, borderColor: data.button_color, color: data.button_text_color},
            close_style: {color: data.coupon_code_color, cursor: 'pointer'}
          })
        }
      } else {
        this.setState({
          show_notification: false
        })
        if (!this.state.show_shadow) {
          this.setState({
            notification_style: {backgroundImage: 'linear-gradient(to right, ' + this.state.background_left_color + ', ' + this.state.background_left_color +')'},
            message_style: {color: this.state.text_color},
            discount_btn_style: {border: '1px #FFF dashed', backgroundColor: 'transparent', color: this.state.text_color},
            button_style: {backgroundColor: this.state.button_color, borderColor: this.state.button_color, color: this.state.button_text_color},
            close_style: {color: this.state.coupon_code_color, cursor: 'pointer'}
          })
        } else {
          this.setState({
            notification_style: {backgroundImage: 'linear-gradient(to right, ' + this.state.background_left_color + ', ' + this.state.background_right_color +')'},
            message_style: {color: this.state.text_color},
            discount_btn_style: {border: '1px #FFF dashed', backgroundColor: 'transparent', color: this.state.text_color},
            button_style: {backgroundColor: this.state.button_color, borderColor: this.state.button_color, color: this.state.button_text_color},
            close_style: {color: this.state.coupon_code_color, cursor: 'pointer'}
          })
        }
      }
    } catch(error) {
      this.setState({
        type: "error",
        message: error
      });
    }
  }

  componentDidUpdate() {
    if (this.state.bar_status) {
      this.setState({
        bar_status: false
      })
    }

    if (this.state.isPieModalOpen) {
      window.setTimeout(() => {
        this.pie_canvas_zoom();
      }, 500);
    }

    if (this.state.isLineModalOpen) {
      window.setTimeout(() => {
        this.line_canvas_zoom();
      }, 500);
    }

    if (this.state.isRotateModalOpen) {
      window.setTimeout(() => {
        this.rotate_canvas_zoom();
      }, 500);
    }

    if (this.state.type === 'error') {
      this.showToastr();
    }

    if (this.filter_status) {
      this.filter_status = false;
      if (this.state.isFilter) {
        this.updateByFilter();
      }
    }
    
    if (this.isCheckedAllData) {
      this.isCheckedAllData = false;
      this.updateBar();
    }

    if (this.isRotate) {
      this.isRotate = false;
      this.updatePieCanvas();
      this.updateRotateCanvas();
      this.updateLineCanvas();
    }

    if (this.wheel_filter) {
      this.wheel_filter = false;
      this.updateLineCanvas();
    }

    this.updatePieCanvas();
    this.updateRotateCanvas();
    this.updateLineCanvas();
  }

  showToastr = () => {
    const options = {
      timeOut: parseInt(this.state.timeOut),
      showCloseButton: this.state.showCloseButton,
      progressBar: this.state.progressBar,
      position: this.state.position
    };

    const toastrInstance =
      this.state.type === "error"
        ? toastr.error
        : toastr.success;

    toastrInstance(
      this.state.title,
      this.state.message,
      options
    );
  }

  reset_state = () => {
    this.setState({
      running: false,
      is_setTime: false,
      isDealerAvatar: false,
      isFilter: false,
      isCheckedAllData: false,
      isArrow: false,
      isPlay: false,
      isRB: false,
      isEO: false,
      isThreeG: false,
      isTwoG: false,
      isZone: false,
      isAngle: false,
      isTMB: false,
      isWRed: false,
      isWBlk: false,
      isWEven: false,
      isWOdd: false,
      isWTop: false,
      isWMid: false,
      isWBot: false,
      isW1to12: false,
      isW13to24: false,
      isW25to36: false,
      isW1to18: false,
      isW19to36: false,
      isWZone1: false,
      isWZone2: false,
      isWZone3: false,
      isWZone4: false,
      filterNumber: 1,
      rotate: 0,
      casino_name: '',
      dealer_name: '',
      dealer_avatar: '',
      last_position: 0,
      rating: 0,
      minutes: 25,
      seconds: 0,
      btn_row: [],
      btn_row_data: [],
      pie_row: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      pie_row_data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      zone_group: [0, 0, 0, 0],
      zone_group_data: [0, 0, 0, 0],
      data1: {
        labels: [
          "RED",
          "BLK"
        ],
        datasets: [
          {
            displays: ["red", "black"],
            backgroundColor: ["#f44455", "#000"],
            borderColor: ["#f44455", "#000"],
            hoverBackgroundColor: ["#f44455", "#000"],
            hoverBorderColor: ["#f44455", "#000"],
            data: [0, 0]
          }
        ]
      },
      bar_data1: [0, 0],
      data2: {
        labels: [
          "EVEN",
          "ODD",
        ],
        datasets: [
          {
            displays: ["even", "odd"],
            backgroundColor: ["#47bac1", "#E8EAED"],
            borderColor: ["#47bac1", "#E8EAED"],
            hoverBackgroundColor: ["#47bac1", "#E8EAED"],
            hoverBorderColor: ["#47bac1", "#E8EAED"],
            data: [0, 0]
          }
        ]
      },
      bar_data2: [0, 0],
      data3: {
        labels: [
          "1-18",
          "19-36",
        ],
        datasets: [
          {
            displays: ["1-18", "19-36"],
            backgroundColor: ["#5fc27e", "#5b7dff"],
            borderColor: ["#5fc27e", "#5b7dff"],
            hoverBackgroundColor: ["#5fc27e", "#5b7dff"],
            hoverBorderColor: ["#5fc27e", "#5b7dff"],
            data: [0, 0]
          }
        ]
      },
      bar_data3: [0, 0],
      data4: {
        labels: [
          "1-12",
          "13-24",
          "25-36"
        ],
        datasets: [
          {
            displays: ["1-12", "13-24", "25-36"],
            backgroundColor: ["#495057", "#a180da", "#fcc100"],
            borderColor: ["#495057", "#a180da", "#fcc100"],
            hoverBackgroundColor: ["#495057", "#a180da", "#fcc100"],
            hoverBorderColor: ["#495057", "#a180da", "#fcc100"],
            data: [0, 0, 0]
          }
        ]
      },
      bar_data4: [0, 0, 0],
      data5: {
        labels: [
          "Zone1",
          "Zone2",
          "Zone3",
          "Zone4"
        ],
        datasets: [
          {
            displays: ["Zone1", "Zone2", "Zone3", "Zone4"],
            backgroundColor: ["#495057", "#a180da", "#fcc100", "#3086ff"],
            borderColor: ["#495057", "#a180da", "#fcc100", "#3086ff"],
            hoverBackgroundColor: ["#495057", "#a180da", "#fcc100", "#3086ff"],
            hoverBorderColor: ["#495057", "#a180da", "#fcc100", "#3086ff"],
            data: [0, 0, 0, 0]
          }
        ]
      },
      bar_data5: [0, 0, 0, 0],
      data6: {
        labels: ["0", "32", "15", "19", "4", "21", "2", "25", "17", "34", "6", "27", "13", "36", "11", "30", "8", "23", "10", "5", "24", "16", "33", "1", "20", "14", "31", "9", "22", "18", "29", "7", "28", "12", "35", "3", "26"],
        datasets: [
          {
            displays: ["0", "32", "15", "19", "4", "21", "2", "25", "17", "34", "6", "27", "13", "36", "11", "30", "8", "23", "10", "5", "24", "16", "33", "1", "20", "14", "31", "9", "22", "18", "29", "7", "28", "12", "35", "3", "26"],
            backgroundColor: ["#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057"],
            borderColor: ["#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057"],
            hoverBackgroundColor: ["#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057"],
            hoverBorderColor: ["#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057"],
            data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
          }
        ]
      },
      bar_data6: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      data7: {
        labels: ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R"],
        datasets: [
          {
            displays: ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R"],
            backgroundColor: ["#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100"],
            borderColor: ["#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100"],
            hoverBackgroundColor: ["#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100"],
            hoverBorderColor: ["#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100", "#3086ff", "#495057", "#a180da", "#fcc100"],
            data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
          }
        ]
      },
      bar_data7: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      data8: {
        labels: ["Top", "Middle", "Bottom"],
        datasets: [
          {
            displays: ["Top", "Middle", "Bottom"],
            backgroundColor: ["#495057", "#a180da", "#fcc100"],
            borderColor: ["#495057", "#a180da", "#fcc100"],
            hoverBackgroundColor: ["#495057", "#a180da", "#fcc100"],
            hoverBorderColor: ["#495057", "#a180da", "#fcc100"],
            data: [0, 0, 0]
          }
        ]
      },
      bar_data8: [0, 0, 0],
      angle_row: [],
      cSelected: [],
      cSelected_status: false,
      temp: {},
      undo_status: false,
      type: ''
    });
  }

  tick = () => {
    var min = Math.floor(this.secondsRemaining / 60);
    var sec = this.secondsRemaining - (min * 60);
    this.setState({
      minutes: min,
      seconds: sec,
      type: ''
    })

    if(min === 0 & sec === 0) {
      clearInterval(this.intervalHandle);
      this.setState({
        running: false,
        type: ''
      })
    }
    this.secondsRemaining--;
  }

  startCountDown = () => {
    this.setState({
      running: true,
      is_setTime: false,
      type: ''
    });
    let time = parseInt(this.state.minutes, 10);
    this.secondsRemaining = time * 60 + parseInt(this.state.seconds, 10);
    clearInterval(this.intervalHandle);
    this.intervalHandle = setInterval(this.tick.bind(this), 1000);
  }

  stopCountDown = () => {
    clearInterval(this.intervalHandle);
    this.setState({
      running: false,
      type: ''
    });
  }

  resetCountDown = () => {
    clearInterval(this.intervalHandle);
    this.setState({
      minutes: 25,
      seconds: 0,
      running: false,
      is_setTime: false,
      type: ''
    });
  }

  setTime = () => {
    clearInterval(this.intervalHandle);
    this.setState({
      is_setTime: true,
      running: false,
      type: ''
    });
  }

  getCurrentDate = () => {
    var date = new Date();
    var current_date = months[date.getMonth()] + ' '  + date.getDate() + ' ' + date.getFullYear() + ' '  + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds();
    this.setState({
      current_date: current_date,
      type: ''
    })
  }

  getExpiredDate = () => {
    let self = this;
    let userinfo = window.localStorage.getItem('userinfo');
    userinfo = JSON.parse(userinfo);
    let user_id = userinfo['id'];
    UserService.get_profile(user_id).then(async(res)=> {
      if (res.data.success) {
        window.localStorage.setItem('userinfo', JSON.stringify(res.data.userinfo));
        userinfo = res.data.userinfo;
        if (userinfo['subscription'] === 0) {
          self.setState({
            isSubscription: false,
            type: ''
          })
        } else {
          var expired_at = new Date(userinfo['expired_at']);
          var now_date = null;
          try{
            const getTime = await UserService.get_time();
            if (getTime.data.success) {
              now_date = getTime.data.time; // now Server date
              now_date = new Date(now_date)
            }
          }
          catch
          {
            console.log('fail');
            now_date = new Date(); // now Local date
          }
          const diffTime = expired_at - now_date;
          if (diffTime <= 0) {
            let send_data = {};
            if (userinfo['billingAgreementId']) {
              PaymentService.get_state({user_id: user_id, billingAgreementId: userinfo['billingAgreementId']}).then(async(res)=> {
                if (res.data.success) {
                  if (res.data.result.state === 'Active') {
                    expired_at = new Date(res.data.result.agreement_details.next_billing_date);
                    expired_at = new Date(expired_at).getFullYear() + '-'  + (new Date(expired_at).getMonth() + 1) + '-' + new Date(expired_at).getDate() + ' '  + new Date(expired_at).getHours() + ':' + new Date(expired_at).getMinutes() + ':' + new Date(expired_at).getSeconds();
                    send_data['id'] = user_id;
                    send_data['expired_at'] = expired_at;
          
                    UserService.update_profile(send_data).then(function(res) {
                      if (res.data.success) {
                        self.setState({
                          isSubscription: true,
                          type: ''
                        })
                        window.localStorage.setItem('userinfo', JSON.stringify(res.data.userinfo));
                      } else {
                        console.log('fail');
                      }
                    })
                  } else {
                    self.setState({
                      isSubscription: false,
                      type: ''
                    })
                    send_data['id'] = user_id;
                    send_data['subscription'] = 0;
                    UserService.update_profile(send_data).then(function(res) {
                      if (res.data.success) {
                        window.localStorage.setItem('userinfo', JSON.stringify(res.data.userinfo));
                      } else {
                        console.log('fail');
                      }
                    })
                  }
                } else {
                  console.log('fail');
                }
              })
            } else {
              self.setState({
                isSubscription: false,
                type: ''
              })
              send_data['id'] = user_id;
              send_data['subscription'] = 0;
              UserService.update_profile(send_data).then(function(res) {
                if (res.data.success) {
                  window.localStorage.setItem('userinfo', JSON.stringify(res.data.userinfo));
                } else {
                  console.log('fail');
                }
              })
            }
          } else {
            self.setState({
              isSubscription: true,
              type: ''
            })
          }
        }
        if (userinfo['super_user'] > 1) {
          self.setState({
            isSubscription: true,
            type: ''
          })
        }
      } else {
        console.log('fail');
      }
    })
  }

  pieCanvas = () => {
    const canvas = this.refs.pie_canvas;
    let img = null;
    let start_end = [];
    if (this.state.rotate === 0) {
      img = this.refs.board_canvasImg1_0;
      start_end = degree_0_start_end;
    } else if (this.state.rotate === 90) {
      img = this.refs.board_canvasImg1_90;
      start_end = degree_90_start_end;
    } else if (this.state.rotate === 180) {
      img = this.refs.board_canvasImg1_180;
      start_end = degree_180_start_end;
    } else if (this.state.rotate === 270) {
      img = this.refs.board_canvasImg1_270;
      start_end = degree_270_start_end;
    }
    this.pCtx = canvas.getContext('2d');
    var x = 0.054;
    
    img.onload = () => {
      this.pCtx.drawImage(img, 0, 0, 310, 310);

      this.pCtx.lineWidth = 0.3;
      this.pCtx.beginPath();
      this.pCtx.strokeStyle = 'rgb(0, 0, 0)';
      this.pCtx.moveTo(155, 155);
      for (var inline = 1; inline < 37; inline++) {
        this.pCtx.arc(155, 155, 119, Math.PI * (start_end[0] + (inline - 1) * x), Math.PI * (start_end[0] + inline * x));
        this.pCtx.lineTo(155, 155);
      }
      this.pCtx.arc(155, 155, 119, Math.PI * start_end[1], Math.PI * start_end[2]);
      this.pCtx.lineTo(155, 155);
      this.pCtx.stroke();
    }
  }

  lineCanvas = () => {
    const canvas = this.refs.line_canvas;
    let img = null;
    let start_end = [];
    if (this.state.rotate === 0) {
      img = this.refs.board_canvasImg2_0;
      start_end = degree_0_start_end;
    } else if (this.state.rotate === 90) {
      img = this.refs.board_canvasImg2_90;
      start_end = degree_90_start_end;
    } else if (this.state.rotate === 180) {
      img = this.refs.board_canvasImg2_180;
      start_end = degree_180_start_end;
    } else if (this.state.rotate === 270) {
      img = this.refs.board_canvasImg2_270;
      start_end = degree_270_start_end;
    }
    this.lCtx = canvas.getContext('2d');
    var x = 0.054;
    img.onload = () => {
      this.lCtx.drawImage(img, 0, 0, 310, 310);

      this.lCtx.lineWidth = 0.3;
      this.lCtx.beginPath();
      this.lCtx.strokeStyle = 'rgb(0, 0, 0)';
      this.lCtx.moveTo(155, 155);
      for (var inline = 1; inline < 37; inline++) {
        this.lCtx.arc(155, 155, 119, Math.PI * (start_end[0] + (inline - 1) * x), Math.PI * (start_end[0] + inline * x));
        this.lCtx.lineTo(155, 155);
      }
      this.lCtx.arc(155, 155, 119, Math.PI * start_end[1], Math.PI * start_end[2]);
      this.lCtx.lineTo(155, 155);
      this.lCtx.stroke();
    }
  }

  rotateCanvas = () => {
    const canvas1 = this.refs.rotate_canvas1;
    const canvas2 = this.refs.rotate_canvas2;
    let img = null;
    let img1 = null;
    let start_end = [];
    if (this.state.rotate === 0) {
      img = this.refs.board_canvasImg3_0;
      img1 = this.refs.rotate_canvasImg_0;
      start_end = degree_0_start_end;
    } else if (this.state.rotate === 90) {
      img = this.refs.board_canvasImg3_90;
      img1 = this.refs.rotate_canvasImg_90;
      start_end = degree_90_start_end;
    } else if (this.state.rotate === 180) {
      img = this.refs.board_canvasImg3_180;
      img1 = this.refs.rotate_canvasImg_180;
      start_end = degree_180_start_end;
    } else if (this.state.rotate === 270) {
      img = this.refs.board_canvasImg3_270;
      img1 = this.refs.rotate_canvasImg_270;
      start_end = degree_270_start_end;
    }
    this.rCtx1 = canvas1.getContext('2d');
    this.rCtx2 = canvas2.getContext('2d');
    var x = 0.054;

    img.onload = () => {
      this.rCtx1.drawImage(img, 0, 0, 310, 310);

      this.rCtx1.lineWidth = 0.3;
      this.rCtx1.beginPath();
      this.rCtx1.strokeStyle = 'rgb(0, 0, 0)';
      this.rCtx1.moveTo(155, 155);
      for (var inline = 1; inline < 37; inline++) {
        this.rCtx1.arc(155, 155, 119, Math.PI * (start_end[0] + (inline - 1) * x), Math.PI * (start_end[0] + inline * x));
        this.rCtx1.lineTo(155, 155);
      }
      this.rCtx1.arc(155, 155, 119, Math.PI * start_end[1], Math.PI * start_end[2]);
      this.rCtx1.lineTo(155, 155);
      this.rCtx1.stroke();
    }
    img1.onload = () => {
      this.rCtx2.drawImage(img1, 35, 35, 240, 240);
    }
  }

  updatePieCanvas = (id) => {
    const pCanvas = this.refs.pie_canvas;
    let img = null;
    let Wheel_1to12 = this.refs.Wheel_1to12;
    let Wheel_13to24 = this.refs.Wheel_13to24;
    let Wheel_25to36 = this.refs.Wheel_25to36;
    let Wheel_1to18 = this.refs.Wheel_1to18;
    let Wheel_19to36 = this.refs.Wheel_19to36;
    let Wheel_Red = this.refs.Wheel_Red;
    let Wheel_Blk = this.refs.Wheel_Blk;
    let Wheel_Even = this.refs.Wheel_Even;
    let Wheel_Odd = this.refs.Wheel_Odd;
    let Wheel_Top = this.refs.Wheel_Top;
    let Wheel_Mid = this.refs.Wheel_Mid;
    let Wheel_Bottom = this.refs.Wheel_Bottom;
    let Wheel_Zone1 = this.refs.Wheel_Zone1;
    let Wheel_Zone1to2 = this.refs.Wheel_Zone1to2;
    let Wheel_Zone1to3 = this.refs.Wheel_Zone1to3;
    let Wheel_Zone2 = this.refs.Wheel_Zone2;
    let Wheel_Zone2to3 = this.refs.Wheel_Zone2to3;
    let Wheel_Zone3 = this.refs.Wheel_Zone3;
    let Wheel_Zone3to4 = this.refs.Wheel_Zone3to4;
    let Wheel_Zone4 = this.refs.Wheel_Zone4;
    let Wheel_Zone4to1 = this.refs.Wheel_Zone4to1;
    let Wheel_Zone4to2 = this.refs.Wheel_Zone4to2;
    let start_end = [];
    if (this.state.rotate === 0) {
      img = this.refs.board_canvasImg1_0;
      start_end = degree_0_start_end;
    } else if (this.state.rotate === 90) {
      img = this.refs.board_canvasImg1_90;
      start_end = degree_90_start_end;
    } else if (this.state.rotate === 180) {
      img = this.refs.board_canvasImg1_180;
      start_end = degree_180_start_end;
    } else if (this.state.rotate === 270) {
      img = this.refs.board_canvasImg1_270;
      start_end = degree_270_start_end;
    }
    this.pCtx = pCanvas.getContext('2d');

    var x = 0.054;
    let ang = 90;

    if (id === undefined) {
      this.pCtx.clearRect(0, 0, 310, 310);
      this.pCtx.drawImage(img, 0, 0, 310, 310);

      // 0
      this.pCtx.lineWidth = this.state.pie_row[0];
      this.pCtx.beginPath();
      this.pCtx.strokeStyle = 'rgb(242, 178, 87)';
      this.pCtx.arc(155, 155, this.state.pie_row[0] / 2, Math.PI * start_end[0], Math.PI * (start_end[0] + x * 1));
      this.pCtx.stroke();

      // 32
      this.pCtx.lineWidth = this.state.pie_row[32];
      this.pCtx.beginPath();
      this.pCtx.strokeStyle = 'rgb(216, 221, 80)';
      this.pCtx.arc(155, 155, this.state.pie_row[32] / 2, Math.PI * (start_end[0] + x * 1), Math.PI * (start_end[0] + x * 2));
      this.pCtx.stroke();

      // 15
      this.pCtx.lineWidth = this.state.pie_row[15];
      this.pCtx.beginPath();
      this.pCtx.strokeStyle = 'rgb(242, 178, 87)';
      this.pCtx.arc(155, 155, this.state.pie_row[15] / 2, Math.PI * (start_end[0] + x * 2), Math.PI * (start_end[0] + x * 3));
      this.pCtx.stroke();

      // 19
      this.pCtx.lineWidth = this.state.pie_row[19];
      this.pCtx.beginPath();
      this.pCtx.strokeStyle = 'rgb(216, 221, 80)';
      this.pCtx.arc(155, 155, this.state.pie_row[19] / 2, Math.PI * (start_end[0] + x * 3), Math.PI * (start_end[0] + x * 4));
      this.pCtx.stroke();

      // 4
      this.pCtx.lineWidth = this.state.pie_row[4];
      this.pCtx.beginPath();
      this.pCtx.strokeStyle = 'rgb(225, 99, 59)';
      this.pCtx.arc(155, 155, this.state.pie_row[4] / 2, Math.PI * (start_end[0] + x * 4), Math.PI * (start_end[0] + x * 5));
      this.pCtx.stroke();

      // 21
      this.pCtx.lineWidth = this.state.pie_row[21];
      this.pCtx.beginPath();
      this.pCtx.strokeStyle = 'rgb(225, 99, 59)';
      this.pCtx.arc(155, 155, this.state.pie_row[21] / 2, Math.PI * (start_end[0] + x * 5), Math.PI * (start_end[0] + x * 6));
      this.pCtx.stroke();

      // 2
      this.pCtx.lineWidth = this.state.pie_row[2];
      this.pCtx.beginPath();
      this.pCtx.strokeStyle = 'rgb(225, 99, 59)';
      this.pCtx.arc(155, 155, this.state.pie_row[2] / 2, Math.PI * (start_end[0] + x * 6), Math.PI * (start_end[0] + x * 7));
      this.pCtx.stroke();

      // 25
      this.pCtx.lineWidth = this.state.pie_row[25];
      this.pCtx.beginPath();
      this.pCtx.strokeStyle = 'rgb(225, 99, 59)';
      this.pCtx.arc(155, 155, this.state.pie_row[25] / 2, Math.PI * (start_end[0] + x * 7), Math.PI * (start_end[0] + x * 8));
      this.pCtx.stroke();

      // 17
      this.pCtx.lineWidth = this.state.pie_row[17];
      this.pCtx.beginPath();
      this.pCtx.strokeStyle = 'rgb(242, 178, 87)';
      this.pCtx.arc(155, 155, this.state.pie_row[17] / 2, Math.PI * (start_end[0] + x * 8), Math.PI * (start_end[0] + x * 9));
      this.pCtx.stroke();

      // 34
      this.pCtx.lineWidth = this.state.pie_row[34];
      this.pCtx.beginPath();
      this.pCtx.strokeStyle = 'rgb(225, 99, 59)';
      this.pCtx.arc(155, 155, this.state.pie_row[34] / 2, Math.PI * (start_end[0] + x * 9), Math.PI * (start_end[0] + x * 10));
      this.pCtx.stroke();

      // 6
      this.pCtx.lineWidth = this.state.pie_row[6];
      this.pCtx.beginPath();
      this.pCtx.strokeStyle = 'rgb(242, 178, 87)';
      this.pCtx.arc(155, 155, this.state.pie_row[6] / 2, Math.PI * (start_end[0] + x * 10), Math.PI * (start_end[0] + x * 11));
      this.pCtx.stroke();

      // 27
      this.pCtx.lineWidth = this.state.pie_row[27];
      this.pCtx.beginPath();
      this.pCtx.strokeStyle = 'rgb(216, 221, 80)';
      this.pCtx.arc(155, 155, this.state.pie_row[27] / 2, Math.PI * (start_end[0] + x * 11), Math.PI * (start_end[0] + x * 12));
      this.pCtx.stroke();

      // 13
      this.pCtx.lineWidth = this.state.pie_row[13];
      this.pCtx.beginPath();
      this.pCtx.strokeStyle = 'rgb(153, 196, 85)';
      this.pCtx.arc(155, 155, this.state.pie_row[13] / 2, Math.PI * (start_end[0] + x * 12), Math.PI * (start_end[0] + x * 13));
      this.pCtx.stroke();

      // 36
      this.pCtx.lineWidth = this.state.pie_row[36];
      this.pCtx.beginPath();
      this.pCtx.strokeStyle = 'rgb(153, 196, 85)';
      this.pCtx.arc(155, 155, this.state.pie_row[36] / 2, Math.PI * (start_end[0] + x * 13), Math.PI * (start_end[0] + x * 14));
      this.pCtx.stroke();

      // 11
      this.pCtx.lineWidth = this.state.pie_row[11];
      this.pCtx.beginPath();
      this.pCtx.strokeStyle = 'rgb(242, 178, 87)';
      this.pCtx.arc(155, 155, this.state.pie_row[11] / 2, Math.PI * (start_end[0] + x * 14), Math.PI * (start_end[0] + x * 15));
      this.pCtx.stroke();

      // 30
      this.pCtx.lineWidth = this.state.pie_row[30];
      this.pCtx.beginPath();
      this.pCtx.strokeStyle = 'rgb(216, 221, 80)';
      this.pCtx.arc(155, 155, this.state.pie_row[30] / 2, Math.PI * (start_end[0] + x * 15), Math.PI * (start_end[0] + x * 16));
      this.pCtx.stroke();

      // 8
      this.pCtx.lineWidth = this.state.pie_row[8];
      this.pCtx.beginPath();
      this.pCtx.strokeStyle = 'rgb(242, 178, 87)';
      this.pCtx.arc(155, 155, this.state.pie_row[8] / 2, Math.PI * (start_end[0] + x * 16), Math.PI * (start_end[0] + x * 17));
      this.pCtx.stroke();

      // 23
      this.pCtx.lineWidth = this.state.pie_row[23];
      this.pCtx.beginPath();
      this.pCtx.strokeStyle = 'rgb(242, 178, 87)';
      this.pCtx.arc(155, 155, this.state.pie_row[23] / 2, Math.PI * (start_end[0] + x * 17), Math.PI * (start_end[0] + x * 18));
      this.pCtx.stroke();

      // 10
      this.pCtx.lineWidth = this.state.pie_row[10];
      this.pCtx.beginPath();
      this.pCtx.strokeStyle = 'rgb(242, 178, 87)';
      this.pCtx.arc(155, 155, this.state.pie_row[10] / 2, Math.PI * (start_end[0] + x * 18), Math.PI * (start_end[0] + x * 19));
      this.pCtx.stroke();

      // 5
      this.pCtx.lineWidth = this.state.pie_row[5];
      this.pCtx.beginPath();
      this.pCtx.strokeStyle = 'rgb(242, 178, 87)';
      this.pCtx.arc(155, 155, this.state.pie_row[5] / 2, Math.PI * (start_end[0] + x * 19), Math.PI * (start_end[0] + x * 20));
      this.pCtx.stroke();

      // 24
      this.pCtx.lineWidth = this.state.pie_row[24];
      this.pCtx.beginPath();
      this.pCtx.strokeStyle = 'rgb(242, 178, 87)';
      this.pCtx.arc(155, 155, this.state.pie_row[24] / 2, Math.PI * (start_end[0] + x * 20), Math.PI * (start_end[0] + x * 21));
      this.pCtx.stroke();

      // 16
      this.pCtx.lineWidth = this.state.pie_row[16];
      this.pCtx.beginPath();
      this.pCtx.strokeStyle = 'rgb(225, 99, 59)';
      this.pCtx.arc(155, 155, this.state.pie_row[16] / 2, Math.PI * (start_end[0] + x * 21), Math.PI * (start_end[0] + x * 22));
      this.pCtx.stroke();

      // 33
      this.pCtx.lineWidth = this.state.pie_row[33];
      this.pCtx.beginPath();
      this.pCtx.strokeStyle = 'rgb(216, 221, 80)';
      this.pCtx.arc(155, 155, this.state.pie_row[33] / 2, Math.PI * (start_end[0] + x * 22), Math.PI * (start_end[0] + x * 23));
      this.pCtx.stroke();

      // 1
      this.pCtx.lineWidth = this.state.pie_row[1];
      this.pCtx.beginPath();
      this.pCtx.strokeStyle = 'rgb(216, 221, 80)';
      this.pCtx.arc(155, 155, this.state.pie_row[1] / 2, Math.PI * (start_end[0] + x * 23), Math.PI * (start_end[0] + x * 24));
      this.pCtx.stroke();

      // 20
      this.pCtx.lineWidth = this.state.pie_row[20];
      this.pCtx.beginPath();
      this.pCtx.strokeStyle = 'rgb(78, 169, 220)';
      this.pCtx.arc(155, 155, this.state.pie_row[20] / 2, Math.PI * (start_end[0] + x * 24), Math.PI * (start_end[0] + x * 25));
      this.pCtx.stroke();

      // 14
      this.pCtx.lineWidth = this.state.pie_row[14];
      this.pCtx.beginPath();
      this.pCtx.strokeStyle = 'rgb(153, 196, 85)';
      this.pCtx.arc(155, 155, this.state.pie_row[14] / 2, Math.PI * (start_end[0] + x * 25), Math.PI * (start_end[0] + x * 26));
      this.pCtx.stroke();

      // 31
      this.pCtx.lineWidth = this.state.pie_row[31];
      this.pCtx.beginPath();
      this.pCtx.strokeStyle = 'rgb(78, 169, 220)';
      this.pCtx.arc(155, 155, this.state.pie_row[31] / 2, Math.PI * (start_end[0] + x * 26), Math.PI * (start_end[0] + x * 27));
      this.pCtx.stroke();

      // 9
      this.pCtx.lineWidth = this.state.pie_row[9];
      this.pCtx.beginPath();
      this.pCtx.strokeStyle = 'rgb(78, 169, 220)';
      this.pCtx.arc(155, 155, this.state.pie_row[9] / 2, Math.PI * (start_end[0] + x * 27), Math.PI * (start_end[0] + x * 28));
      this.pCtx.stroke();

      // 22
      this.pCtx.lineWidth = this.state.pie_row[22];
      this.pCtx.beginPath();
      this.pCtx.strokeStyle = 'rgb(153, 196, 85)';
      this.pCtx.arc(155, 155, this.state.pie_row[22] / 2, Math.PI * (start_end[0] + x * 28), Math.PI * (start_end[0] + x * 29));
      this.pCtx.stroke();

      // 18
      this.pCtx.lineWidth = this.state.pie_row[18];
      this.pCtx.beginPath();
      this.pCtx.strokeStyle = 'rgb(78, 169, 220)';
      this.pCtx.arc(155, 155, this.state.pie_row[18] / 2, Math.PI * (start_end[0] + x * 29), Math.PI * (start_end[0] + x * 30));
      this.pCtx.stroke();

      // 29
      this.pCtx.lineWidth = this.state.pie_row[29];
      this.pCtx.beginPath();
      this.pCtx.strokeStyle = 'rgb(78, 169, 220)';
      this.pCtx.arc(155, 155, this.state.pie_row[29] / 2, Math.PI * (start_end[0] + x * 30), Math.PI * (start_end[0] + x * 31));
      this.pCtx.stroke();

      // 7
      this.pCtx.lineWidth = this.state.pie_row[7];
      this.pCtx.beginPath();
      this.pCtx.strokeStyle = 'rgb(153, 196, 85)';
      this.pCtx.arc(155, 155, this.state.pie_row[7] / 2, Math.PI * (start_end[0] + x * 31), Math.PI * (start_end[0] + x * 32));
      this.pCtx.stroke();

      // 28
      this.pCtx.lineWidth = this.state.pie_row[28];
      this.pCtx.beginPath();
      this.pCtx.strokeStyle = 'rgb(78, 169, 220)';
      this.pCtx.arc(155, 155, this.state.pie_row[28] / 2, Math.PI * (start_end[0] + x * 32), Math.PI * (start_end[0] + x * 33));
      this.pCtx.stroke();

      // 12
      this.pCtx.lineWidth = this.state.pie_row[12];
      this.pCtx.beginPath();
      this.pCtx.strokeStyle = 'rgb(153, 196, 85)';
      this.pCtx.arc(155, 155, this.state.pie_row[12] / 2, Math.PI * (start_end[0] + x * 33), Math.PI * (start_end[0] + x * 34));
      this.pCtx.stroke();

      // 35
      this.pCtx.lineWidth = this.state.pie_row[35];
      this.pCtx.beginPath();
      this.pCtx.strokeStyle = 'rgb(225, 99, 59)';
      this.pCtx.arc(155, 155, this.state.pie_row[35] / 2, Math.PI * (start_end[0] + x * 34), Math.PI * (start_end[0] + x * 35));
      this.pCtx.stroke();

      // 3
      this.pCtx.lineWidth = this.state.pie_row[3];
      this.pCtx.beginPath();
      this.pCtx.strokeStyle = 'rgb(78, 169, 220)';
      this.pCtx.arc(155, 155, this.state.pie_row[3] / 2, Math.PI * (start_end[0] + x * 35), Math.PI * start_end[1]);
      this.pCtx.stroke();

      // 26
      this.pCtx.lineWidth = this.state.pie_row[26];
      this.pCtx.beginPath();
      this.pCtx.strokeStyle = 'rgb(225, 99, 59)';
      this.pCtx.arc(155, 155, this.state.pie_row[26] / 2, Math.PI * start_end[1], Math.PI * start_end[2]);
      this.pCtx.stroke();

      this.pCtx.lineWidth = 0.3;
      this.pCtx.beginPath();
      this.pCtx.strokeStyle = 'rgb(0, 0, 0)';
      this.pCtx.moveTo(155, 155);
      for (var inline = 1; inline < 37; inline++) {
        this.pCtx.arc(155, 155, 119, Math.PI * (start_end[0] + (inline - 1) * x), Math.PI * (start_end[0] + inline * x));
        this.pCtx.lineTo(155, 155);
      }
      this.pCtx.arc(155, 155, 119, Math.PI * start_end[1], Math.PI * start_end[2]);
      this.pCtx.lineTo(155, 155);
      this.pCtx.stroke();
      
      if (!this.state.isWFilter) {
        if (this.state.isW1to12) {
          if (this.state.rotate === 0) {
            this.pCtx.drawImage(Wheel_1to12, 0, 0, 310, 310);
          } else if (this.state.rotate === 90) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 3));
            this.pCtx.drawImage(Wheel_1to12, -155, -155, 310, 310);
            this.pCtx.restore();
          } else if (this.state.rotate === 180) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 2));
            this.pCtx.drawImage(Wheel_1to12, -155, -155, 310, 310);
            this.pCtx.restore();
          } else if (this.state.rotate === 270) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 1));
            this.pCtx.drawImage(Wheel_1to12, -155, -155, 310, 310);
            this.pCtx.restore();
          }
        }
        if (this.state.isW13to24) {
          if (this.state.rotate === 0) {
            this.pCtx.drawImage(Wheel_13to24, 0, 0, 310, 310);
          } else if (this.state.rotate === 90) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 3));
            this.pCtx.drawImage(Wheel_13to24, -155, -155, 310, 310);
            this.pCtx.restore();
          } else if (this.state.rotate === 180) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 2));
            this.pCtx.drawImage(Wheel_13to24, -155, -155, 310, 310);
            this.pCtx.restore();
          } else if (this.state.rotate === 270) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 1));
            this.pCtx.drawImage(Wheel_13to24, -155, -155, 310, 310);
            this.pCtx.restore();
          }
        }
        if (this.state.isW25to36) {
          if (this.state.rotate === 0) {
            this.pCtx.drawImage(Wheel_25to36, 0, 0, 310, 310);
          } else if (this.state.rotate === 90) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 3));
            this.pCtx.drawImage(Wheel_25to36, -155, -155, 310, 310);
            this.pCtx.restore();
          } else if (this.state.rotate === 180) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 2));
            this.pCtx.drawImage(Wheel_25to36, -155, -155, 310, 310);
            this.pCtx.restore();
          } else if (this.state.rotate === 270) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 1));
            this.pCtx.drawImage(Wheel_25to36, -155, -155, 310, 310);
            this.pCtx.restore();
          }
        }
        if (this.state.isW1to18) {
          if (this.state.rotate === 0) {
            this.pCtx.drawImage(Wheel_1to18, 0, 0, 310, 310);
          } else if (this.state.rotate === 90) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 3));
            this.pCtx.drawImage(Wheel_1to18, -155, -155, 310, 310);
            this.pCtx.restore();
          } else if (this.state.rotate === 180) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 2));
            this.pCtx.drawImage(Wheel_1to18, -155, -155, 310, 310);
            this.pCtx.restore();
          } else if (this.state.rotate === 270) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 1));
            this.pCtx.drawImage(Wheel_1to18, -155, -155, 310, 310);
            this.pCtx.restore();
          }
        }
        if (this.state.isW19to36) {
          if (this.state.rotate === 0) {
            this.pCtx.drawImage(Wheel_19to36, 0, 0, 310, 310);
          } else if (this.state.rotate === 90) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 3));
            this.pCtx.drawImage(Wheel_19to36, -155, -155, 310, 310);
            this.pCtx.restore();
          } else if (this.state.rotate === 180) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 2));
            this.pCtx.drawImage(Wheel_19to36, -155, -155, 310, 310);
            this.pCtx.restore();
          } else if (this.state.rotate === 270) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 1));
            this.pCtx.drawImage(Wheel_19to36, -155, -155, 310, 310);
            this.pCtx.restore();
          }
        }
        if (this.state.isWRed) {
          if (this.state.rotate === 0) {
            this.pCtx.drawImage(Wheel_Red, 0, 0, 310, 310);
          } else if (this.state.rotate === 90) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 3));
            this.pCtx.drawImage(Wheel_Red, -155, -155, 310, 310);
            this.pCtx.restore();
          } else if (this.state.rotate === 180) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 2));
            this.pCtx.drawImage(Wheel_Red, -155, -155, 310, 310);
            this.pCtx.restore();
          } else if (this.state.rotate === 270) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 1));
            this.pCtx.drawImage(Wheel_Red, -155, -155, 310, 310);
            this.pCtx.restore();
          }
        }
        if (this.state.isWBlk) {
          if (this.state.rotate === 0) {
            this.pCtx.drawImage(Wheel_Blk, 0, 0, 310, 310);
          } else if (this.state.rotate === 90) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 3));
            this.pCtx.drawImage(Wheel_Blk, -155, -155, 310, 310);
            this.pCtx.restore();
          } else if (this.state.rotate === 180) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 2));
            this.pCtx.drawImage(Wheel_Blk, -155, -155, 310, 310);
            this.pCtx.restore();
          } else if (this.state.rotate === 270) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 1));
            this.pCtx.drawImage(Wheel_Blk, -155, -155, 310, 310);
            this.pCtx.restore();
          }
        }
        if (this.state.isWEven) {
          if (this.state.rotate === 0) {
            this.pCtx.drawImage(Wheel_Even, 0, 0, 310, 310);
          } else if (this.state.rotate === 90) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 3));
            this.pCtx.drawImage(Wheel_Even, -155, -155, 310, 310);
            this.pCtx.restore();
          } else if (this.state.rotate === 180) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 2));
            this.pCtx.drawImage(Wheel_Even, -155, -155, 310, 310);
            this.pCtx.restore();
          } else if (this.state.rotate === 270) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 1));
            this.pCtx.drawImage(Wheel_Even, -155, -155, 310, 310);
            this.pCtx.restore();
          }
        }
        if (this.state.isWOdd) {
          if (this.state.rotate === 0) {
            this.pCtx.drawImage(Wheel_Odd, 0, 0, 310, 310);
          } else if (this.state.rotate === 90) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 3));
            this.pCtx.drawImage(Wheel_Odd, -155, -155, 310, 310);
            this.pCtx.restore();
          } else if (this.state.rotate === 180) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 2));
            this.pCtx.drawImage(Wheel_Odd, -155, -155, 310, 310);
            this.pCtx.restore();
          } else if (this.state.rotate === 270) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 1));
            this.pCtx.drawImage(Wheel_Odd, -155, -155, 310, 310);
            this.pCtx.restore();
          }
        }
        if (this.state.isWTop) {
          if (this.state.rotate === 0) {
            this.pCtx.drawImage(Wheel_Top, 0, 0, 310, 310);
          } else if (this.state.rotate === 90) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 3));
            this.pCtx.drawImage(Wheel_Top, -155, -155, 310, 310);
            this.pCtx.restore();
          } else if (this.state.rotate === 180) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 2));
            this.pCtx.drawImage(Wheel_Top, -155, -155, 310, 310);
            this.pCtx.restore();
          } else if (this.state.rotate === 270) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 1));
            this.pCtx.drawImage(Wheel_Top, -155, -155, 310, 310);
            this.pCtx.restore();
          }
        }
        if (this.state.isWMid) {
          if (this.state.rotate === 0) {
            this.pCtx.drawImage(Wheel_Mid, 0, 0, 310, 310);
          } else if (this.state.rotate === 90) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 3));
            this.pCtx.drawImage(Wheel_Mid, -155, -155, 310, 310);
            this.pCtx.restore();
          } else if (this.state.rotate === 180) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 2));
            this.pCtx.drawImage(Wheel_Mid, -155, -155, 310, 310);
            this.pCtx.restore();
          } else if (this.state.rotate === 270) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 1));
            this.pCtx.drawImage(Wheel_Mid, -155, -155, 310, 310);
            this.pCtx.restore();
          }
        }
        if (this.state.isWBot) {
          if (this.state.rotate === 0) {
            this.pCtx.drawImage(Wheel_Bottom, 0, 0, 310, 310);
          } else if (this.state.rotate === 90) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 3));
            this.pCtx.drawImage(Wheel_Bottom, -155, -155, 310, 310);
            this.pCtx.restore();
          } else if (this.state.rotate === 180) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 2));
            this.pCtx.drawImage(Wheel_Bottom, -155, -155, 310, 310);
            this.pCtx.restore();
          } else if (this.state.rotate === 270) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 1));
            this.pCtx.drawImage(Wheel_Bottom, -155, -155, 310, 310);
            this.pCtx.restore();
          }
        }
        if (this.state.isWZone1) {
          if (this.state.rotate === 0) {
            this.pCtx.drawImage(Wheel_Zone1, 0, 0, 310, 310);
          } else if (this.state.rotate === 90) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 3));
            this.pCtx.drawImage(Wheel_Zone1, -155, -155, 310, 310);
            this.pCtx.restore();
          } else if (this.state.rotate === 180) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 2));
            this.pCtx.drawImage(Wheel_Zone1, -155, -155, 310, 310);
            this.pCtx.restore();
          } else if (this.state.rotate === 270) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 1));
            this.pCtx.drawImage(Wheel_Zone1, -155, -155, 310, 310);
            this.pCtx.restore();
          }
        }
        if (this.state.isWZone1to2) {
          if (this.state.rotate === 0) {
            this.pCtx.drawImage(Wheel_Zone1to2, 0, 0, 310, 310);
          } else if (this.state.rotate === 90) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 3));
            this.pCtx.drawImage(Wheel_Zone1to2, -155, -155, 310, 310);
            this.pCtx.restore();
          } else if (this.state.rotate === 180) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 2));
            this.pCtx.drawImage(Wheel_Zone1to2, -155, -155, 310, 310);
            this.pCtx.restore();
          } else if (this.state.rotate === 270) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 1));
            this.pCtx.drawImage(Wheel_Zone1to2, -155, -155, 310, 310);
            this.pCtx.restore();
          }
        }
        if (this.state.isWZone1to3) {
          if (this.state.rotate === 0) {
            this.pCtx.drawImage(Wheel_Zone1to3, 0, 0, 310, 310);
          } else if (this.state.rotate === 90) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 3));
            this.pCtx.drawImage(Wheel_Zone1to3, -155, -155, 310, 310);
            this.pCtx.restore();
          } else if (this.state.rotate === 180) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 2));
            this.pCtx.drawImage(Wheel_Zone1to3, -155, -155, 310, 310);
            this.pCtx.restore();
          } else if (this.state.rotate === 270) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 1));
            this.pCtx.drawImage(Wheel_Zone1to3, -155, -155, 310, 310);
            this.pCtx.restore();
          }
        }
        if (this.state.isWZone2) {
          if (this.state.rotate === 0) {
            this.pCtx.drawImage(Wheel_Zone2, 0, 0, 310, 310);
          } else if (this.state.rotate === 90) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 3));
            this.pCtx.drawImage(Wheel_Zone2, -155, -155, 310, 310);
            this.pCtx.restore();
          } else if (this.state.rotate === 180) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 2));
            this.pCtx.drawImage(Wheel_Zone2, -155, -155, 310, 310);
            this.pCtx.restore();
          } else if (this.state.rotate === 270) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 1));
            this.pCtx.drawImage(Wheel_Zone2, -155, -155, 310, 310);
            this.pCtx.restore();
          }
        }
        if (this.state.isWZone2to3) {
          if (this.state.rotate === 0) {
            this.pCtx.drawImage(Wheel_Zone2to3, 0, 0, 310, 310);
          } else if (this.state.rotate === 90) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 3));
            this.pCtx.drawImage(Wheel_Zone2to3, -155, -155, 310, 310);
            this.pCtx.restore();
          } else if (this.state.rotate === 180) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 2));
            this.pCtx.drawImage(Wheel_Zone2to3, -155, -155, 310, 310);
            this.pCtx.restore();
          } else if (this.state.rotate === 270) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 1));
            this.pCtx.drawImage(Wheel_Zone2to3, -155, -155, 310, 310);
            this.pCtx.restore();
          }
        }
        if (this.state.isWZone3) {
          if (this.state.rotate === 0) {
            this.pCtx.drawImage(Wheel_Zone3, 0, 0, 310, 310);
          } else if (this.state.rotate === 90) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 3));
            this.pCtx.drawImage(Wheel_Zone3, -155, -155, 310, 310);
            this.pCtx.restore();
          } else if (this.state.rotate === 180) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 2));
            this.pCtx.drawImage(Wheel_Zone3, -155, -155, 310, 310);
            this.pCtx.restore();
          } else if (this.state.rotate === 270) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 1));
            this.pCtx.drawImage(Wheel_Zone3, -155, -155, 310, 310);
            this.pCtx.restore();
          }
        }
        if (this.state.isWZone3to4) {
          if (this.state.rotate === 0) {
            this.pCtx.drawImage(Wheel_Zone3to4, 0, 0, 310, 310);
          } else if (this.state.rotate === 90) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 3));
            this.pCtx.drawImage(Wheel_Zone3to4, -155, -155, 310, 310);
            this.pCtx.restore();
          } else if (this.state.rotate === 180) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 2));
            this.pCtx.drawImage(Wheel_Zone3to4, -155, -155, 310, 310);
            this.pCtx.restore();
          } else if (this.state.rotate === 270) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 1));
            this.pCtx.drawImage(Wheel_Zone3to4, -155, -155, 310, 310);
            this.pCtx.restore();
          }
        }
        if (this.state.isWZone4) {
          if (this.state.rotate === 0) {
            this.pCtx.drawImage(Wheel_Zone4, 0, 0, 310, 310);
          } else if (this.state.rotate === 90) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 3));
            this.pCtx.drawImage(Wheel_Zone4, -155, -155, 310, 310);
            this.pCtx.restore();
          } else if (this.state.rotate === 180) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 2));
            this.pCtx.drawImage(Wheel_Zone4, -155, -155, 310, 310);
            this.pCtx.restore();
          } else if (this.state.rotate === 270) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 1));
            this.pCtx.drawImage(Wheel_Zone4, -155, -155, 310, 310);
            this.pCtx.restore();
          }
        }
        if (this.state.isWZone4to1) {
          if (this.state.rotate === 0) {
            this.pCtx.drawImage(Wheel_Zone4to1, 0, 0, 310, 310);
          } else if (this.state.rotate === 90) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 3));
            this.pCtx.drawImage(Wheel_Zone4to1, -155, -155, 310, 310);
            this.pCtx.restore();
          } else if (this.state.rotate === 180) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 2));
            this.pCtx.drawImage(Wheel_Zone4to1, -155, -155, 310, 310);
            this.pCtx.restore();
          } else if (this.state.rotate === 270) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 1));
            this.pCtx.drawImage(Wheel_Zone4to1, -155, -155, 310, 310);
            this.pCtx.restore();
          }
        }
        if (this.state.isWZone4to2) {
          if (this.state.rotate === 0) {
            this.pCtx.drawImage(Wheel_Zone4to2, 0, 0, 310, 310);
          } else if (this.state.rotate === 90) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 3));
            this.pCtx.drawImage(Wheel_Zone4to2, -155, -155, 310, 310);
            this.pCtx.restore();
          } else if (this.state.rotate === 180) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 2));
            this.pCtx.drawImage(Wheel_Zone4to2, -155, -155, 310, 310);
            this.pCtx.restore();
          } else if (this.state.rotate === 270) {
            this.pCtx.save();
            this.pCtx.translate(155, 155);
            this.pCtx.rotate(Math.PI / 180 * (ang * 1));
            this.pCtx.drawImage(Wheel_Zone4to2, -155, -155, 310, 310);
            this.pCtx.restore();
          }
        }
      }
    } else {
      let pie_row_data = this.state.pie_row_data;
      let pie_row = this.state.pie_row;
      var range = parseInt(this.state.range_1, 10);
      pie_row_data[id] += 5;
      pie_row[id] = pie_row_data[id] * range;
      if (pie_row[id] > 119) {
        pie_row[id] = 119;
      }
      this.setState({
        pie_row_data: pie_row_data,
        pie_row: pie_row,
        type: ''
      })
      let radius = pie_row[id] / 2;
      this.pCtx.lineWidth = pie_row[id];

      // zone 1
      if (id === 0) {
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(242, 178, 87)';
        this.pCtx.arc(155, 155, radius, Math.PI * (start_end[0] + x * 0), Math.PI * (start_end[0] + x * 1));
        this.pCtx.stroke();

        this.pCtx.lineWidth = 0.3;
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(0, 0, 0)';
        this.pCtx.moveTo(155, 155);
        this.pCtx.arc(155, 155, 119, Math.PI * (start_end[0] + x * 0), Math.PI * (start_end[0] + x * 1));
        this.pCtx.lineTo(155, 155);
        this.pCtx.stroke();
      }

      if (id === 32) {
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(216, 221, 80)';
        this.pCtx.arc(155, 155, radius, Math.PI * (start_end[0] + x * 1), Math.PI * (start_end[0] + x * 2));
        this.pCtx.stroke();

        this.pCtx.lineWidth = 0.3;
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(0, 0, 0)';
        this.pCtx.moveTo(155, 155);
        this.pCtx.arc(155, 155, 119, Math.PI * (start_end[0] + x * 1), Math.PI * (start_end[0] + x * 2));
        this.pCtx.lineTo(155, 155);
        this.pCtx.stroke();
      }

      if (id === 15) {
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(242, 178, 87)';
        this.pCtx.arc(155, 155, radius, Math.PI * (start_end[0] + (x * 2)), Math.PI * (start_end[0] + (x * 3)));
        this.pCtx.stroke();

        this.pCtx.lineWidth = 0.3;
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(0, 0, 0)';
        this.pCtx.moveTo(155, 155);
        this.pCtx.arc(155, 155, 119, Math.PI * (start_end[0] + (x * 2)), Math.PI * (start_end[0] + (x * 3)));
        this.pCtx.lineTo(155, 155);
        this.pCtx.stroke();
      }

      if (id === 19) {
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(216, 221, 80)';
        this.pCtx.arc(155, 155, radius, Math.PI * (start_end[0] + x * 3), Math.PI * (start_end[0] + x * 4));
        this.pCtx.stroke();

        this.pCtx.lineWidth = 0.3;
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(0, 0, 0)';
        this.pCtx.moveTo(155, 155);
        this.pCtx.arc(155, 155, 119, Math.PI * (start_end[0] + x * 3), Math.PI * (start_end[0] + x * 4));
        this.pCtx.lineTo(155, 155);
        this.pCtx.stroke();
      }

      if (id === 4) {
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(225, 99, 59)';
        this.pCtx.arc(155, 155, radius, Math.PI * (start_end[0] + x * 4), Math.PI * (start_end[0] + x * 5));
        this.pCtx.stroke();

        this.pCtx.lineWidth = 0.3;
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(0, 0, 0)';
        this.pCtx.moveTo(155, 155);
        this.pCtx.arc(155, 155, 119, Math.PI * (start_end[0] + x * 4), Math.PI * (start_end[0] + x * 5));
        this.pCtx.lineTo(155, 155);
        this.pCtx.stroke();
      }

      if (id === 21) {
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(225, 99, 59)';
        this.pCtx.arc(155, 155, radius, Math.PI * (start_end[0] + x * 5), Math.PI * (start_end[0] + x * 6));
        this.pCtx.stroke();

        this.pCtx.lineWidth = 0.3;
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(0, 0, 0)';
        this.pCtx.moveTo(155, 155);
        this.pCtx.arc(155, 155, 119, Math.PI * (start_end[0] + x * 5), Math.PI * (start_end[0] + x * 6));
        this.pCtx.lineTo(155, 155);
        this.pCtx.stroke();
      }

      if (id === 2) {
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(225, 99, 59)';
        this.pCtx.arc(155, 155, radius, Math.PI * (start_end[0] + x * 6), Math.PI * (start_end[0] + x * 7));
        this.pCtx.stroke();

        this.pCtx.lineWidth = 0.3;
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(0, 0, 0)';
        this.pCtx.moveTo(155, 155);
        this.pCtx.arc(155, 155, 119, Math.PI * (start_end[0] + x * 6), Math.PI * (start_end[0] + x * 7));
        this.pCtx.lineTo(155, 155);
        this.pCtx.stroke();
      }

      if (id === 25) {
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(225, 99, 59)';
        this.pCtx.arc(155, 155, radius, Math.PI * (start_end[0] + x * 7), Math.PI * (start_end[0] + x * 8));
        this.pCtx.stroke();

        this.pCtx.lineWidth = 0.3;
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(0, 0, 0)';
        this.pCtx.moveTo(155, 155);
        this.pCtx.arc(155, 155, 119, Math.PI * (start_end[0] + x * 7), Math.PI * (start_end[0] + x * 8));
        this.pCtx.lineTo(155, 155);
        this.pCtx.stroke();
      }

      if (id === 17) {
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(242, 178, 87)';
        this.pCtx.arc(155, 155, radius, Math.PI * (start_end[0] + x * 8), Math.PI * (start_end[0] + x * 9));
        this.pCtx.stroke();

        this.pCtx.lineWidth = 0.3;
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(0, 0, 0)';
        this.pCtx.moveTo(155, 155);
        this.pCtx.arc(155, 155, 119, Math.PI * (start_end[0] + x * 8), Math.PI * (start_end[0] + x * 9));
        this.pCtx.lineTo(155, 155);
        this.pCtx.stroke();
      }
        
      // zone 2
      if (id === 34) {
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(225, 99, 59)';
        this.pCtx.arc(155, 155, radius, Math.PI * (start_end[0] + x * 9), Math.PI * (start_end[0] + x * 10));
        this.pCtx.stroke();

        this.pCtx.lineWidth = 0.3;
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(0, 0, 0)';
        this.pCtx.moveTo(155, 155);
        this.pCtx.arc(155, 155, 119, Math.PI * (start_end[0] + x * 9), Math.PI * (start_end[0] + x * 10));
        this.pCtx.lineTo(155, 155);
        this.pCtx.stroke();
      }

      if (id === 6) {
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(242, 178, 87)';
        this.pCtx.arc(155, 155, radius, Math.PI * (start_end[0] + x * 10), Math.PI * (start_end[0] + x * 11));
        this.pCtx.stroke();

        this.pCtx.lineWidth = 0.3;
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(0, 0, 0)';
        this.pCtx.moveTo(155, 155);
        this.pCtx.arc(155, 155, 119, Math.PI * (start_end[0] + x * 10), Math.PI * (start_end[0] + x * 11));
        this.pCtx.lineTo(155, 155);
        this.pCtx.stroke();
      }

      if (id === 27) {
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(216, 221, 80)';
        this.pCtx.arc(155, 155, radius, Math.PI * (start_end[0] + x * 11), Math.PI * (start_end[0] + x * 12));
        this.pCtx.stroke();

        this.pCtx.lineWidth = 0.3;
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(0, 0, 0)';
        this.pCtx.moveTo(155, 155);
        this.pCtx.arc(155, 155, 119, Math.PI * (start_end[0] + x * 11), Math.PI * (start_end[0] + x * 12));
        this.pCtx.lineTo(155, 155);
        this.pCtx.stroke();
      }

      if (id === 13) {
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(153, 196, 85)';
        this.pCtx.arc(155, 155, radius, Math.PI * (start_end[0] + x * 12), Math.PI * (start_end[0] + x * 13));
        this.pCtx.stroke();

        this.pCtx.lineWidth = 0.3;
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(0, 0, 0)';
        this.pCtx.moveTo(155, 155);
        this.pCtx.arc(155, 155, 119, Math.PI * (start_end[0] + x * 12), Math.PI * (start_end[0] + x * 13));
        this.pCtx.lineTo(155, 155);
        this.pCtx.stroke();
      }

      if (id === 36) {
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(153, 196, 85)';
        this.pCtx.arc(155, 155, radius, Math.PI * (start_end[0] + x * 13), Math.PI * (start_end[0] + x * 14));
        this.pCtx.stroke();

        this.pCtx.lineWidth = 0.3;
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(0, 0, 0)';
        this.pCtx.moveTo(155, 155);
        this.pCtx.arc(155, 155, 119, Math.PI * (start_end[0] + x * 13), Math.PI * (start_end[0] + x * 14));
        this.pCtx.lineTo(155, 155);
        this.pCtx.stroke();
      }

      if (id === 11) {
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(242, 178, 87)';
        this.pCtx.arc(155, 155, radius, Math.PI * (start_end[0] + x * 14), Math.PI * (start_end[0] + x * 15));
        this.pCtx.stroke();

        this.pCtx.lineWidth = 0.3;
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(0, 0, 0)';
        this.pCtx.moveTo(155, 155);
        this.pCtx.arc(155, 155, 119, Math.PI * (start_end[0] + x * 14), Math.PI * (start_end[0] + x * 15));
        this.pCtx.lineTo(155, 155);
        this.pCtx.stroke();
      }

      if (id === 30) {
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(216, 221, 80)';
        this.pCtx.arc(155, 155, radius, Math.PI * (start_end[0] + x * 15), Math.PI * (start_end[0] + x * 16));
        this.pCtx.stroke();

        this.pCtx.lineWidth = 0.3;
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(0, 0, 0)';
        this.pCtx.moveTo(155, 155);
        this.pCtx.arc(155, 155, 119, Math.PI * (start_end[0] + x * 15), Math.PI * (start_end[0] + x * 16));
        this.pCtx.lineTo(155, 155);
        this.pCtx.stroke();
      }

      if (id === 8) {
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(242, 178, 87)';
        this.pCtx.arc(155, 155, radius, Math.PI * (start_end[0] + x * 16), Math.PI * (start_end[0] + x * 17));
        this.pCtx.stroke();

        this.pCtx.lineWidth = 0.3;
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(0, 0, 0)';
        this.pCtx.moveTo(155, 155);
        this.pCtx.arc(155, 155, 119, Math.PI * (start_end[0] + x * 16), Math.PI * (start_end[0] + x * 17));
        this.pCtx.lineTo(155, 155);
        this.pCtx.stroke();
      }

      if (id === 23) {
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(242, 178, 87)';
        this.pCtx.arc(155, 155, radius, Math.PI * (start_end[0] + x * 17), Math.PI * (start_end[0] + x * 18));
        this.pCtx.stroke();

        this.pCtx.lineWidth = 0.3;
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(0, 0, 0)';
        this.pCtx.moveTo(155, 155);
        this.pCtx.arc(155, 155, 119, Math.PI * (start_end[0] + x * 17), Math.PI * (start_end[0] + x * 18));
        this.pCtx.lineTo(155, 155);
        this.pCtx.stroke();
      }

      if (id === 10) {
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(242, 178, 87)';
        this.pCtx.arc(155, 155, radius, Math.PI * (start_end[0] + x * 18), Math.PI * (start_end[0] + x * 19));
        this.pCtx.stroke();

        this.pCtx.lineWidth = 0.3;
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(0, 0, 0)';
        this.pCtx.moveTo(155, 155);
        this.pCtx.arc(155, 155, 119, Math.PI * (start_end[0] + x * 18), Math.PI * (start_end[0] + x * 19));
        this.pCtx.lineTo(155, 155);
        this.pCtx.stroke();
      }

      // zone 3
      if (id === 5) {
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(242, 178, 87)';
        this.pCtx.arc(155, 155, radius, Math.PI * (start_end[0] + x * 19), Math.PI * (start_end[0] + x * 20));
        this.pCtx.stroke();

        this.pCtx.lineWidth = 0.3;
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(0, 0, 0)';
        this.pCtx.moveTo(155, 155);
        this.pCtx.arc(155, 155, 119, Math.PI * (start_end[0] + x * 19), Math.PI * (start_end[0] + x * 20));
        this.pCtx.lineTo(155, 155);
        this.pCtx.stroke();
      }

      if (id === 24) {
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(242, 178, 87)';
        this.pCtx.arc(155, 155, radius, Math.PI * (start_end[0] + x * 20), Math.PI * (start_end[0] + x * 21));
        this.pCtx.stroke();

        this.pCtx.lineWidth = 0.3;
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(0, 0, 0)';
        this.pCtx.moveTo(155, 155);
        this.pCtx.arc(155, 155, 119, Math.PI * (start_end[0] + x * 20), Math.PI * (start_end[0] + x * 21));
        this.pCtx.lineTo(155, 155);
        this.pCtx.stroke();
      }

      if (id === 16) {
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(225, 99, 59)';
        this.pCtx.arc(155, 155, radius, Math.PI * (start_end[0] + x * 21), Math.PI * (start_end[0] + x * 22));
        this.pCtx.stroke();

        this.pCtx.lineWidth = 0.3;
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(0, 0, 0)';
        this.pCtx.moveTo(155, 155);
        this.pCtx.arc(155, 155, 119, Math.PI * (start_end[0] + x * 21), Math.PI * (start_end[0] + x * 22));
        this.pCtx.lineTo(155, 155);
        this.pCtx.stroke();
      }

      if (id === 33) {
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(216, 221, 80)';
        this.pCtx.arc(155, 155, radius, Math.PI * (start_end[0] + x * 22), Math.PI * (start_end[0] + x * 23));
        this.pCtx.stroke();

        this.pCtx.lineWidth = 0.3;
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(0, 0, 0)';
        this.pCtx.moveTo(155, 155);
        this.pCtx.arc(155, 155, 119, Math.PI * (start_end[0] + x * 22), Math.PI * (start_end[0] + x * 23));
        this.pCtx.lineTo(155, 155);
        this.pCtx.stroke();
      }

      if (id === 1) {
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(216, 221, 80)';
        this.pCtx.arc(155, 155, radius, Math.PI * (start_end[0] + x * 23), Math.PI * (start_end[0] + x * 24));
        this.pCtx.stroke();

        this.pCtx.lineWidth = 0.3;
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(0, 0, 0)';
        this.pCtx.moveTo(155, 155);
        this.pCtx.arc(155, 155, 119, Math.PI * (start_end[0] + x * 23), Math.PI * (start_end[0] + x * 24));
        this.pCtx.lineTo(155, 155);
        this.pCtx.stroke();
      }

      if (id === 20) {
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(78, 169, 220)';
        this.pCtx.arc(155, 155, radius, Math.PI * (start_end[0] + x * 24), Math.PI * (start_end[0] + x * 25));
        this.pCtx.stroke();

        this.pCtx.lineWidth = 0.3;
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(0, 0, 0)';
        this.pCtx.moveTo(155, 155);
        this.pCtx.arc(155, 155, 119, Math.PI * (start_end[0] + x * 24), Math.PI * (start_end[0] + x * 25));
        this.pCtx.lineTo(155, 155);
        this.pCtx.stroke();
      }

      if (id === 14) {
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(153, 196, 85)';
        this.pCtx.arc(155, 155, radius, Math.PI * (start_end[0] + x * 25), Math.PI * (start_end[0] + x * 26));
        this.pCtx.stroke();

        this.pCtx.lineWidth = 0.3;
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(0, 0, 0)';
        this.pCtx.moveTo(155, 155);
        this.pCtx.arc(155, 155, 119, Math.PI * (start_end[0] + x * 25), Math.PI * (start_end[0] + x * 26));
        this.pCtx.lineTo(155, 155);
        this.pCtx.stroke();
      }

      if (id === 31) {
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(78, 169, 220)';
        this.pCtx.arc(155, 155, radius, Math.PI * (start_end[0] + x * 26), Math.PI * (start_end[0] + x * 27));
        this.pCtx.stroke();

        this.pCtx.lineWidth = 0.3;
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(0, 0, 0)';
        this.pCtx.moveTo(155, 155);
        this.pCtx.arc(155, 155, 119, Math.PI * (start_end[0] + x * 26), Math.PI * (start_end[0] + x * 27));
        this.pCtx.lineTo(155, 155);
        this.pCtx.stroke();
      }

      if (id === 9) {
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(78, 169, 220)';
        this.pCtx.arc(155, 155, radius, Math.PI * (start_end[0] + x * 27), Math.PI * (start_end[0] + x * 28));
        this.pCtx.stroke();

        this.pCtx.lineWidth = 0.3;
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(0, 0, 0)';
        this.pCtx.moveTo(155, 155);
        this.pCtx.arc(155, 155, 119, Math.PI * (start_end[0] + x * 27), Math.PI * (start_end[0] + x * 28));
        this.pCtx.lineTo(155, 155);
        this.pCtx.stroke();
      }

      // zone 4
      if (id === 22) {
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(153, 196, 85)';
        this.pCtx.arc(155, 155, radius, Math.PI * (start_end[0] + x * 28), Math.PI * (start_end[0] + x * 29));
        this.pCtx.stroke();

        this.pCtx.lineWidth = 0.3;
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(0, 0, 0)';
        this.pCtx.moveTo(155, 155);
        this.pCtx.arc(155, 155, 119, Math.PI * (start_end[0] + x * 28), Math.PI * (start_end[0] + x * 29));
        this.pCtx.lineTo(155, 155);
        this.pCtx.stroke();
      }

      if (id === 18) {
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(78, 169, 220)';
        this.pCtx.arc(155, 155, radius, Math.PI * (start_end[0] + x * 29), Math.PI * (start_end[0] + x * 30));
        this.pCtx.stroke();

        this.pCtx.lineWidth = 0.3;
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(0, 0, 0)';
        this.pCtx.moveTo(155, 155);
        this.pCtx.arc(155, 155, 119, Math.PI * (start_end[0] + x * 29), Math.PI * (start_end[0] + x * 30));
        this.pCtx.lineTo(155, 155);
        this.pCtx.stroke();
      }

      if (id === 29) {
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(78, 169, 220)';
        this.pCtx.arc(155, 155, radius, Math.PI * (start_end[0] + x * 30), Math.PI * (start_end[0] + x * 31));
        this.pCtx.stroke();

        this.pCtx.lineWidth = 0.3;
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(0, 0, 0)';
        this.pCtx.moveTo(155, 155);
        this.pCtx.arc(155, 155, 119, Math.PI * (start_end[0] + x * 30), Math.PI * (start_end[0] + x * 31));
        this.pCtx.lineTo(155, 155);
        this.pCtx.stroke();
      }

      if (id === 7) {
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(153, 196, 85)';
        this.pCtx.arc(155, 155, radius, Math.PI * (start_end[0] + x * 31), Math.PI * (start_end[0] + x * 32));
        this.pCtx.stroke();

        this.pCtx.lineWidth = 0.3;
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(0, 0, 0)';
        this.pCtx.moveTo(155, 155);
        this.pCtx.arc(155, 155, 119, Math.PI * (start_end[0] + x * 31), Math.PI * (start_end[0] + x * 32));
        this.pCtx.lineTo(155, 155);
        this.pCtx.stroke();
      }

      if (id === 28) {
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(78, 169, 220)';
        this.pCtx.arc(155, 155, radius, Math.PI * (start_end[0] + x * 32), Math.PI * (start_end[0] + x * 33));
        this.pCtx.stroke();

        this.pCtx.lineWidth = 0.3;
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(0, 0, 0)';
        this.pCtx.moveTo(155, 155);
        this.pCtx.arc(155, 155, 119, Math.PI * (start_end[0] + x * 32), Math.PI * (start_end[0] + x * 33));
        this.pCtx.lineTo(155, 155);
        this.pCtx.stroke();
      }

      if (id === 12) {
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(153, 196, 85)';
        this.pCtx.arc(155, 155, radius, Math.PI * (start_end[0] + x * 33), Math.PI * (start_end[0] + x * 34));
        this.pCtx.stroke();

        this.pCtx.lineWidth = 0.3;
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(0, 0, 0)';
        this.pCtx.moveTo(155, 155);
        this.pCtx.arc(155, 155, 119, Math.PI * (start_end[0] + x * 33), Math.PI * (start_end[0] + x * 34));
        this.pCtx.lineTo(155, 155);
        this.pCtx.stroke();
      }

      if (id === 35) {
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(225, 99, 59)';
        this.pCtx.arc(155, 155, radius, Math.PI * (start_end[0] + x * 34), Math.PI * (start_end[0] + x * 35));
        this.pCtx.stroke();

        this.pCtx.lineWidth = 0.3;
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(0, 0, 0)';
        this.pCtx.moveTo(155, 155);
        this.pCtx.arc(155, 155, 119, Math.PI * (start_end[0] + x * 34), Math.PI * (start_end[0] + x * 35));
        this.pCtx.lineTo(155, 155);
        this.pCtx.stroke();
      }

      if (id === 3) {
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(78, 169, 220)';
        this.pCtx.arc(155, 155, radius, Math.PI * (start_end[0] + x * 35), Math.PI * start_end[1]);
        this.pCtx.stroke();

        this.pCtx.lineWidth = 0.3;
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(0, 0, 0)';
        this.pCtx.moveTo(155, 155);
        this.pCtx.arc(155, 155, 119, Math.PI * (start_end[0] + x * 35), Math.PI * start_end[1]);
        this.pCtx.lineTo(155, 155);
        this.pCtx.stroke();
      }

      if (id === 26) {
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(225, 99, 59)';
        this.pCtx.arc(155, 155, radius, Math.PI * start_end[1], Math.PI * start_end[2]);
        this.pCtx.stroke();

        this.pCtx.lineWidth = 0.3;
        this.pCtx.beginPath();
        this.pCtx.strokeStyle = 'rgb(0, 0, 0)';
        this.pCtx.moveTo(155, 155);
        this.pCtx.arc(155, 155, 119, Math.PI * start_end[1], Math.PI * start_end[2]);
        this.pCtx.lineTo(155, 155);
        this.pCtx.stroke();
      }
    }
  }

  updateLineCanvas = (id) => {
    const lCanvas = this.refs.line_canvas;
    let img = null;
    let start_end = [];
    let point = [];
    if (this.state.rotate === 0) {
      img = this.refs.board_canvasImg2_0;
      start_end = degree_0_start_end;
      point = degree_0_point;
    } else if (this.state.rotate === 90) {
      img = this.refs.board_canvasImg2_90;
      start_end = degree_90_start_end;
      point = degree_90_point;
    } else if (this.state.rotate === 180) {
      img = this.refs.board_canvasImg2_180;
      start_end = degree_180_start_end;
      point = degree_180_point;
    } else if (this.state.rotate === 270) {
      img = this.refs.board_canvasImg2_270;
      start_end = degree_270_start_end;
      point = degree_270_point;
    }
    this.lCtx = lCanvas.getContext('2d');
    var x = 0.054;

    let btn_row = this.state.btn_row;

    if (id === undefined) {
      this.lCtx.clearRect(0, 0, 310, 310);
      this.lCtx.drawImage(img, 0, 0, 310, 310);

      this.lCtx.lineWidth = 0.3;
      this.lCtx.beginPath();
      this.lCtx.strokeStyle = 'rgb(0, 0, 0)';
      this.lCtx.moveTo(155, 155);
      for (var inline = 1; inline < 37; inline++) {
        this.lCtx.arc(155, 155, 119, Math.PI * (start_end[0] + (inline - 1) * x), Math.PI * (start_end[0] + inline * x));
        this.lCtx.lineTo(155, 155);
      }
      this.lCtx.arc(155, 155, 119, Math.PI * start_end[1], Math.PI * start_end[2]);
      this.lCtx.lineTo(155, 155);
      this.lCtx.stroke();
      if (btn_row.length) {
        if (btn_row.length === 1) {
          
          this.lCtx.beginPath();
          this.lCtx.fillStyle = 'rgb(255, 242, 0)';
          this.lCtx.arc(point[btn_row[0]][0], point[btn_row[0]][1], 5, 0, Math.PI * 2, true);
          this.lCtx.fill();
          this.last_axis[0] = point[btn_row[0]][0];
          this.last_axis[1] = point[btn_row[0]][1];

        } else {
          for (var index = btn_row.length - 1; index >= 0; index--) {
            if (index === btn_row.length - 1) {

              this.lCtx.beginPath();
              this.lCtx.fillStyle = 'rgb(255, 242, 0)';
              this.lCtx.arc(point[btn_row[index]][0], point[btn_row[index]][1], 5, 0, Math.PI * 2, true);
              this.lCtx.fill();
              this.last_axis[0] = point[btn_row[index]][0];
              this.last_axis[1] = point[btn_row[index]][1];
              
            } else {

              this.lCtx.lineWidth = 3;
              this.drawLineArrow(this.last_axis[0], this.last_axis[1], point[btn_row[index]][0], point[btn_row[index]][1]);
              this.lCtx.beginPath();
              this.lCtx.fillStyle = 'rgb(255, 242, 0)';
              this.lCtx.arc(this.last_axis[0], this.last_axis[1], 5, 0, Math.PI * 2, true);
              this.lCtx.arc(point[btn_row[index]][0], point[btn_row[index]][1], 5, 0, Math.PI * 2, true);
              this.lCtx.fill();
              this.last_axis[0] = point[btn_row[index]][0];
              this.last_axis[1] = point[btn_row[index]][1];
              
            }
          }
        }
      }
    } else {

      if (btn_row.length === 1) {
        this.lCtx.beginPath();
        this.lCtx.fillStyle = 'rgb(255, 242, 0)';
        this.lCtx.arc(point[id][0], point[id][1], 5, 0, Math.PI * 2, true);
        this.lCtx.fill();
        this.last_axis[0] = point[id][0];
        this.last_axis[1] = point[id][1];
      } else {
        this.lCtx.lineWidth = 3;
        this.drawLineArrow(this.last_axis[0], this.last_axis[1], point[id][0], point[id][1]);
        this.lCtx.beginPath();
        this.lCtx.fillStyle = 'rgb(255, 242, 0)';
        this.lCtx.arc(this.last_axis[0], this.last_axis[1], 5, 0, Math.PI * 2, true);
        this.lCtx.arc(point[id][0], point[id][1], 5, 0, Math.PI * 2, true);
        this.lCtx.fill();
        this.last_axis[0] = point[id][0];
        this.last_axis[1] = point[id][1];
      }
      
    }
  }

  drawLineArrow = (x1, y1, x2, y2) => {
    this.lCtx.beginPath();
    this.lCtx.strokeStyle = '#0028ff'; // #86bc24
    this.lCtx.fillStyle = '#0028ff';
    this.lCtx.moveTo(x1, y1);
    this.lCtx.lineTo(x2, y2);
    this.lCtx.stroke();
    if (this.state.isArrow && x1 !== x2 && y1 !== y2) {
      var ang = Math.atan2(y2-y1, x2-x1);
      this.drawFilledPolygon(this.translateShape(this.rotateShape(arrow, ang), x2, y2));
    }
  }

  rotateShape = (shape, ang) => {
    var rv = [];
    for(var p in shape)
        rv.push(this.rotatePoint(ang,shape[p][0], shape[p][1]));
    return rv;
  }

  rotatePoint = (ang, x, y) => {
    return [
        (x * Math.cos(ang)) - (y * Math.sin(ang)),
        (x * Math.sin(ang)) + (y * Math.cos(ang))
    ];
  }

  translateShape = (shape, x, y) => {
    var rv = [];
    for(var p in shape)
        rv.push([shape[p][0] + x, shape[p][1] + y]);
    return rv;
  }

  drawFilledPolygon = (shape) => {
    this.lCtx.beginPath();
    this.lCtx.moveTo(shape[0][0], shape[0][1]);

    for(var p in shape)
        if (p > 0) this.lCtx.lineTo(shape[p][0], shape[p][1]);

    this.lCtx.lineTo(shape[0][0], shape[0][1]);
    this.lCtx.fill();
  }

  updateRotateCanvas = (id) => {
    const canvas1 = this.refs.rotate_canvas1;
    const canvas2 = this.refs.rotate_canvas2;
    let img = null;
    let img1 = null;
    let start_end = [];
    let point = [];
    if (this.state.rotate === 0) {
      img = this.refs.board_canvasImg3_0;
      img1 = this.refs.rotate_canvasImg_0;
      start_end = degree_0_start_end;
      point = degree_0_point;
    } else if (this.state.rotate === 90) {
      img = this.refs.board_canvasImg3_90;
      img1 = this.refs.rotate_canvasImg_90;
      start_end = degree_90_start_end;
      point = degree_90_point;
    } else if (this.state.rotate === 180) {
      img = this.refs.board_canvasImg3_180;
      img1 = this.refs.rotate_canvasImg_180;
      start_end = degree_180_start_end;
      point = degree_180_point;
    } else if (this.state.rotate === 270) {
      img = this.refs.board_canvasImg3_270;
      img1 = this.refs.rotate_canvasImg_270;
      start_end = degree_270_start_end;
      point = degree_270_point;
    }
    this.rCtx1 = canvas1.getContext('2d');
    this.rCtx2 = canvas2.getContext('2d');
    var x = 0.054;
    var ang = 9.729;

    let btn_row = this.state.btn_row;
    if (id === undefined) {
      this.rCtx1.clearRect(0, 0, 310, 310);
      this.rCtx1.drawImage(img, 0, 0, 310, 310);

      this.rCtx1.lineWidth = 0.3;
      this.rCtx1.beginPath();
      this.rCtx1.strokeStyle = 'rgb(0, 0, 0)';
      this.rCtx1.moveTo(155, 155);
      for (var inline = 1; inline < 37; inline++) {
        this.rCtx1.arc(155, 155, 119, Math.PI * (start_end[0] + (inline - 1) * x), Math.PI * (start_end[0] + inline * x));
        this.rCtx1.lineTo(155, 155);
      }
      this.rCtx1.arc(155, 155, 119, Math.PI * start_end[1], Math.PI * start_end[2]);
      this.rCtx1.lineTo(155, 155);
      this.rCtx1.stroke();

      this.rCtx2.clearRect(0, 0, 310, 310);
      this.rCtx2.drawImage(img1, 35, 35, 240, 240);

      if (btn_row.length) {
        for (var index = btn_row.length - 1; index >= 0; index--) {
          this.rCtx2.save();
          this.rCtx2.clearRect(0, 0, 310, 310);
          this.rCtx2.translate(155, 155);
          this.rCtx2.rotate(Math.PI / 180 * (ang * point[btn_row[index]][2]));
          this.rCtx2.drawImage(img1, -120, -120, 240, 240);
          this.rCtx2.restore();

          this.rCtx1.beginPath();
          this.rCtx1.fillStyle = 'rgb(255, 242, 0)';
          this.rCtx1.arc(point[btn_row[index]][0], point[btn_row[index]][1], 5, 0, Math.PI * 2, true);
          this.rCtx1.fill();
          
        }
      }
    } else {
      this.rCtx2.save();
      this.rCtx2.clearRect(0, 0, 310, 310);
      this.rCtx2.translate(155, 155);
      this.rCtx2.rotate(Math.PI / 180 * (ang * point[id][2]));
      this.rCtx2.drawImage(img1, -120, -120, 240, 240);
      this.rCtx2.restore();

      this.rCtx1.beginPath();
      this.rCtx1.fillStyle = 'rgb(255, 242, 0)';
      this.rCtx1.arc(point[id][0], point[id][1], 5, 0, Math.PI * 2, true);
      this.rCtx1.fill();
      
    }
  }

  pie_canvas_zoom = () => {
    const pie_canvas_zoom = this.refs.pie_canvas_zoom;
    let pie_canvasImg_zoom = null;
    let start_end = [];
    if (this.state.rotate === 0) {
      pie_canvasImg_zoom = this.refs.pie_canvasImg_zoom_0;
      start_end = degree_0_start_end;
    } else if (this.state.rotate === 90) {
      pie_canvasImg_zoom = this.refs.pie_canvasImg_zoom_90;
      start_end = degree_90_start_end;
    } else if (this.state.rotate === 180) {
      pie_canvasImg_zoom = this.refs.pie_canvasImg_zoom_180;
      start_end = degree_180_start_end;
    } else if (this.state.rotate === 270) {
      pie_canvasImg_zoom = this.refs.pie_canvasImg_zoom_270;
      start_end = degree_270_start_end;
    }
    const ctx_zoom = pie_canvas_zoom.getContext('2d');
    var x = 0.054;

    ctx_zoom.clearRect(0, 0, 620, 620);
    ctx_zoom.drawImage(pie_canvasImg_zoom, 0, 0, 620, 620);

    // 0
    ctx_zoom.lineWidth = this.state.pie_row[0] * 2;
    ctx_zoom.beginPath();
    ctx_zoom.strokeStyle = 'rgb(242, 178, 87)';
    ctx_zoom.arc(310, 310, this.state.pie_row[0], Math.PI * (start_end[0] + x * 0), Math.PI * (start_end[0] + x * 1));
    ctx_zoom.stroke();

    // 32
    ctx_zoom.lineWidth = this.state.pie_row[32] * 2;
    ctx_zoom.beginPath();
    ctx_zoom.strokeStyle = 'rgb(216, 221, 80)';
    ctx_zoom.arc(310, 310, this.state.pie_row[32], Math.PI * (start_end[0] + x * 1), Math.PI * (start_end[0] + x * 2));
    ctx_zoom.stroke();

    // 15
    ctx_zoom.lineWidth = this.state.pie_row[15] * 2;
    ctx_zoom.beginPath();
    ctx_zoom.strokeStyle = 'rgb(242, 178, 87)';
    ctx_zoom.arc(310, 310, this.state.pie_row[15], Math.PI * (start_end[0] + x * 2), Math.PI * (start_end[0] + x * 3));
    ctx_zoom.stroke();

    // 19
    ctx_zoom.lineWidth = this.state.pie_row[19] * 2;
    ctx_zoom.beginPath();
    ctx_zoom.strokeStyle = 'rgb(216, 221, 80)';
    ctx_zoom.arc(310, 310, this.state.pie_row[19], Math.PI * (start_end[0] + x * 3), Math.PI * (start_end[0] + x * 4));
    ctx_zoom.stroke();

    // 4
    ctx_zoom.lineWidth = this.state.pie_row[4] * 2;
    ctx_zoom.beginPath();
    ctx_zoom.strokeStyle = 'rgb(225, 99, 59)';
    ctx_zoom.arc(310, 310, this.state.pie_row[4], Math.PI * (start_end[0] + x * 4), Math.PI * (start_end[0] + x * 5));
    ctx_zoom.stroke();

    // 21
    ctx_zoom.lineWidth = this.state.pie_row[21] * 2;
    ctx_zoom.beginPath();
    ctx_zoom.strokeStyle = 'rgb(225, 99, 59)';
    ctx_zoom.arc(310, 310, this.state.pie_row[21], Math.PI * (start_end[0] + x * 5), Math.PI * (start_end[0] + x * 6));
    ctx_zoom.stroke();

    // 2
    ctx_zoom.lineWidth = this.state.pie_row[2] * 2;
    ctx_zoom.beginPath();
    ctx_zoom.strokeStyle = 'rgb(225, 99, 59)';
    ctx_zoom.arc(310, 310, this.state.pie_row[2], Math.PI * (start_end[0] + x * 6), Math.PI * (start_end[0] + x * 7));
    ctx_zoom.stroke();

    // 25
    ctx_zoom.lineWidth = this.state.pie_row[25] * 2;
    ctx_zoom.beginPath();
    ctx_zoom.strokeStyle = 'rgb(225, 99, 59)';
    ctx_zoom.arc(310, 310, this.state.pie_row[25], Math.PI * (start_end[0] + x * 7), Math.PI * (start_end[0] + x * 8));
    ctx_zoom.stroke();

    // 17
    ctx_zoom.lineWidth = this.state.pie_row[17] * 2;
    ctx_zoom.beginPath();
    ctx_zoom.strokeStyle = 'rgb(242, 178, 87)';
    ctx_zoom.arc(310, 310, this.state.pie_row[17], Math.PI * (start_end[0] + x * 8), Math.PI * (start_end[0] + x * 9));
    ctx_zoom.stroke();

    // 34
    ctx_zoom.lineWidth = this.state.pie_row[34] * 2;
    ctx_zoom.beginPath();
    ctx_zoom.strokeStyle = 'rgb(225, 99, 59)';
    ctx_zoom.arc(310, 310, this.state.pie_row[34], Math.PI * (start_end[0] + x * 9), Math.PI * (start_end[0] + x * 10));
    ctx_zoom.stroke();

    // 6
    ctx_zoom.lineWidth = this.state.pie_row[6] * 2;
    ctx_zoom.beginPath();
    ctx_zoom.strokeStyle = 'rgb(242, 178, 87)';
    ctx_zoom.arc(310, 310, this.state.pie_row[6], Math.PI * (start_end[0] + x * 10), Math.PI * (start_end[0] + x * 11));
    ctx_zoom.stroke();

    // 27
    ctx_zoom.lineWidth = this.state.pie_row[27] * 2;
    ctx_zoom.beginPath();
    ctx_zoom.strokeStyle = 'rgb(216, 221, 80)';
    ctx_zoom.arc(310, 310, this.state.pie_row[27], Math.PI * (start_end[0] + x * 11), Math.PI * (start_end[0] + x * 12));
    ctx_zoom.stroke();

    // 13
    ctx_zoom.lineWidth = this.state.pie_row[13] * 2;
    ctx_zoom.beginPath();
    ctx_zoom.strokeStyle = 'rgb(153, 196, 85)';
    ctx_zoom.arc(310, 310, this.state.pie_row[13], Math.PI * (start_end[0] + x * 12), Math.PI * (start_end[0] + x * 13));
    ctx_zoom.stroke();

    // 36
    ctx_zoom.lineWidth = this.state.pie_row[36] * 2;
    ctx_zoom.beginPath();
    ctx_zoom.strokeStyle = 'rgb(153, 196, 85)';
    ctx_zoom.arc(310, 310, this.state.pie_row[36], Math.PI * (start_end[0] + x * 13), Math.PI * (start_end[0] + x * 14));
    ctx_zoom.stroke();

    // 11
    ctx_zoom.lineWidth = this.state.pie_row[11] * 2;
    ctx_zoom.beginPath();
    ctx_zoom.strokeStyle = 'rgb(242, 178, 87)';
    ctx_zoom.arc(310, 310, this.state.pie_row[11], Math.PI * (start_end[0] + x * 14), Math.PI * (start_end[0] + x * 15));
    ctx_zoom.stroke();

    // 30
    ctx_zoom.lineWidth = this.state.pie_row[30] * 2;
    ctx_zoom.beginPath();
    ctx_zoom.strokeStyle = 'rgb(216, 221, 80)';
    ctx_zoom.arc(310, 310, this.state.pie_row[30], Math.PI * (start_end[0] + x * 15), Math.PI * (start_end[0] + x * 16));
    ctx_zoom.stroke();

    // 8
    ctx_zoom.lineWidth = this.state.pie_row[8] * 2;
    ctx_zoom.beginPath();
    ctx_zoom.strokeStyle = 'rgb(242, 178, 87)';
    ctx_zoom.arc(310, 310, this.state.pie_row[8], Math.PI * (start_end[0] + x * 16), Math.PI * (start_end[0] + x * 17));
    ctx_zoom.stroke();

    // 23
    ctx_zoom.lineWidth = this.state.pie_row[23] * 2;
    ctx_zoom.beginPath();
    ctx_zoom.strokeStyle = 'rgb(242, 178, 87)';
    ctx_zoom.arc(310, 310, this.state.pie_row[23], Math.PI * (start_end[0] + x * 17), Math.PI * (start_end[0] + x * 18));
    ctx_zoom.stroke();

    // 10
    ctx_zoom.lineWidth = this.state.pie_row[10] * 2;
    ctx_zoom.beginPath();
    ctx_zoom.strokeStyle = 'rgb(242, 178, 87)';
    ctx_zoom.arc(310, 310, this.state.pie_row[10], Math.PI * (start_end[0] + x * 18), Math.PI * (start_end[0] + x * 19));
    ctx_zoom.stroke();

    // 5
    ctx_zoom.lineWidth = this.state.pie_row[5] * 2;
    ctx_zoom.beginPath();
    ctx_zoom.strokeStyle = 'rgb(242, 178, 87)';
    ctx_zoom.arc(310, 310, this.state.pie_row[5], Math.PI * (start_end[0] + x * 19), Math.PI * (start_end[0] + x * 20));
    ctx_zoom.stroke();

    // 24
    ctx_zoom.lineWidth = this.state.pie_row[24] * 2;
    ctx_zoom.beginPath();
    ctx_zoom.strokeStyle = 'rgb(242, 178, 87)';
    ctx_zoom.arc(310, 310, this.state.pie_row[24], Math.PI * (start_end[0] + x * 20), Math.PI * (start_end[0] + x * 21));
    ctx_zoom.stroke();

    // 16
    ctx_zoom.lineWidth = this.state.pie_row[16] * 2;
    ctx_zoom.beginPath();
    ctx_zoom.strokeStyle = 'rgb(225, 99, 59)';
    ctx_zoom.arc(310, 310, this.state.pie_row[16], Math.PI * (start_end[0] + x * 21), Math.PI * (start_end[0] + x * 22));
    ctx_zoom.stroke();

    // 33
    ctx_zoom.lineWidth = this.state.pie_row[33] * 2;
    ctx_zoom.beginPath();
    ctx_zoom.strokeStyle = 'rgb(216, 221, 80)';
    ctx_zoom.arc(310, 310, this.state.pie_row[33], Math.PI * (start_end[0] + x * 22), Math.PI * (start_end[0] + x * 23));
    ctx_zoom.stroke();

    // 1
    ctx_zoom.lineWidth = this.state.pie_row[1] * 2;
    ctx_zoom.beginPath();
    ctx_zoom.strokeStyle = 'rgb(216, 221, 80)';
    ctx_zoom.arc(310, 310, this.state.pie_row[1], Math.PI * (start_end[0] + x * 23), Math.PI * (start_end[0] + x * 24));
    ctx_zoom.stroke();

    // 20
    ctx_zoom.lineWidth = this.state.pie_row[20] * 2;
    ctx_zoom.beginPath();
    ctx_zoom.strokeStyle = 'rgb(78, 169, 220)';
    ctx_zoom.arc(310, 310, this.state.pie_row[20], Math.PI * (start_end[0] + x * 24), Math.PI * (start_end[0] + x * 25));
    ctx_zoom.stroke();

    // 14
    ctx_zoom.lineWidth = this.state.pie_row[14] * 2;
    ctx_zoom.beginPath();
    ctx_zoom.strokeStyle = 'rgb(153, 196, 85)';
    ctx_zoom.arc(310, 310, this.state.pie_row[14], Math.PI * (start_end[0] + x * 25), Math.PI * (start_end[0] + x * 26));
    ctx_zoom.stroke();

    // 31
    ctx_zoom.lineWidth = this.state.pie_row[31] * 2;
    ctx_zoom.beginPath();
    ctx_zoom.strokeStyle = 'rgb(78, 169, 220)';
    ctx_zoom.arc(310, 310, this.state.pie_row[31], Math.PI * (start_end[0] + x * 26), Math.PI * (start_end[0] + x * 27));
    ctx_zoom.stroke();

    // 9
    ctx_zoom.lineWidth = this.state.pie_row[9] * 2;
    ctx_zoom.beginPath();
    ctx_zoom.strokeStyle = 'rgb(78, 169, 220)';
    ctx_zoom.arc(310, 310, this.state.pie_row[9], Math.PI * (start_end[0] + x * 27), Math.PI * (start_end[0] + x * 28));
    ctx_zoom.stroke();

    // 22
    ctx_zoom.lineWidth = this.state.pie_row[22] * 2;
    ctx_zoom.beginPath();
    ctx_zoom.strokeStyle = 'rgb(153, 196, 85)';
    ctx_zoom.arc(310, 310, this.state.pie_row[22], Math.PI * (start_end[0] + x * 28), Math.PI * (start_end[0] + x * 29));
    ctx_zoom.stroke();

    // 18
    ctx_zoom.lineWidth = this.state.pie_row[18] * 2;
    ctx_zoom.beginPath();
    ctx_zoom.strokeStyle = 'rgb(78, 169, 220)';
    ctx_zoom.arc(310, 310, this.state.pie_row[18], Math.PI * (start_end[0] + x * 29), Math.PI * (start_end[0] + x * 30));
    ctx_zoom.stroke();

    // 29
    ctx_zoom.lineWidth = this.state.pie_row[29] * 2;
    ctx_zoom.beginPath();
    ctx_zoom.strokeStyle = 'rgb(78, 169, 220)';
    ctx_zoom.arc(310, 310, this.state.pie_row[29], Math.PI * (start_end[0] + x * 30), Math.PI * (start_end[0] + x * 31));
    ctx_zoom.stroke();

    // 7
    ctx_zoom.lineWidth = this.state.pie_row[7] * 2;
    ctx_zoom.beginPath();
    ctx_zoom.strokeStyle = 'rgb(153, 196, 85)';
    ctx_zoom.arc(310, 310, this.state.pie_row[7], Math.PI * (start_end[0] + x * 31), Math.PI * (start_end[0] + x * 32));
    ctx_zoom.stroke();

    // 28
    ctx_zoom.lineWidth = this.state.pie_row[28] * 2;
    ctx_zoom.beginPath();
    ctx_zoom.strokeStyle = 'rgb(78, 169, 220)';
    ctx_zoom.arc(310, 310, this.state.pie_row[28], Math.PI * (start_end[0] + x * 32), Math.PI * (start_end[0] + x * 33));
    ctx_zoom.stroke();

    // 12
    ctx_zoom.lineWidth = this.state.pie_row[12] * 2;
    ctx_zoom.beginPath();
    ctx_zoom.strokeStyle = 'rgb(153, 196, 85)';
    ctx_zoom.arc(310, 310, this.state.pie_row[12], Math.PI * (start_end[0] + x * 33), Math.PI * (start_end[0] + x * 34));
    ctx_zoom.stroke();

    // 35
    ctx_zoom.lineWidth = this.state.pie_row[35] * 2;
    ctx_zoom.beginPath();
    ctx_zoom.strokeStyle = 'rgb(225, 99, 59)';
    ctx_zoom.arc(310, 310, this.state.pie_row[35], Math.PI * (start_end[0] + x * 34), Math.PI * (start_end[0] + x * 35));
    ctx_zoom.stroke();

    // 3
    ctx_zoom.lineWidth = this.state.pie_row[3] * 2;
    ctx_zoom.beginPath();
    ctx_zoom.strokeStyle = 'rgb(78, 169, 220)';
    ctx_zoom.arc(310, 310, this.state.pie_row[3], Math.PI * (start_end[0] + x * 35), Math.PI * start_end[1]);
    ctx_zoom.stroke();

    // 26
    ctx_zoom.lineWidth = this.state.pie_row[26] * 2;
    ctx_zoom.beginPath();
    ctx_zoom.strokeStyle = 'rgb(225, 99, 59)';
    ctx_zoom.arc(310, 310, this.state.pie_row[26], Math.PI * start_end[1], Math.PI * start_end[2]);
    ctx_zoom.stroke();

    ctx_zoom.lineWidth = 0.5;
    ctx_zoom.beginPath();
    ctx_zoom.strokeStyle = 'rgb(0, 0, 0)';
    ctx_zoom.moveTo(310, 310);
    for (var inline = 1; inline < 37; inline++) {
      ctx_zoom.arc(310, 310, 238, Math.PI * (start_end[0] + (inline - 1) * x), Math.PI * (start_end[0] + inline * x));
      ctx_zoom.lineTo(310, 310);
    }
    ctx_zoom.arc(310, 310, 238, Math.PI * start_end[1], Math.PI * start_end[2]);
    ctx_zoom.stroke();
  }

  line_canvas_zoom = () => {
    const lCanvas = this.refs.line_canvas_zoom;
    let img = null;
    let start_end = [];
    let point = [];
    if (this.state.rotate === 0) {
      img = this.refs.line_canvasImg_zoom_0;
      start_end = degree_0_start_end;
      point = degree_0_point;
    } else if (this.state.rotate === 90) {
      img = this.refs.line_canvasImg_zoom_90;
      start_end = degree_90_start_end;
      point = degree_90_point;
    } else if (this.state.rotate === 180) {
      img = this.refs.line_canvasImg_zoom_180;
      start_end = degree_180_start_end;
      point = degree_180_point;
    } else if (this.state.rotate === 270) {
      img = this.refs.line_canvasImg_zoom_270;
      start_end = degree_270_start_end;
      point = degree_270_point;
    }
    const lCtx = lCanvas.getContext('2d');
    this.lCtx = lCanvas.getContext('2d');
    var x = 0.054;

    let btn_row = this.state.btn_row;

    lCtx.clearRect(0, 0, 310 * 2, 310 * 2);
    lCtx.drawImage(img, 0, 0, 310 * 2, 310 * 2);

    lCtx.lineWidth = 0.3 * 2;
    lCtx.beginPath();
    lCtx.strokeStyle = 'rgb(0, 0, 0)';
    lCtx.moveTo(155 * 2, 155 * 2);
    for (var inline = 1; inline < 37; inline++) {
      lCtx.arc(155 * 2, 155 * 2, 119 * 2, Math.PI * (start_end[0] + (inline - 1) * x), Math.PI * (start_end[0] + inline * x));
      lCtx.lineTo(155 * 2, 155 * 2);
    }
    lCtx.arc(155 * 2, 155 * 2, 119 * 2, Math.PI * start_end[1], Math.PI * start_end[2]);
    lCtx.lineTo(155 * 2, 155 * 2);
    lCtx.stroke();
    if (btn_row.length) {
      if (btn_row.length === 1) {

        lCtx.beginPath();
        lCtx.fillStyle = 'rgb(255, 242, 0)';
        lCtx.arc(point[btn_row[0]][0] * 2, point[btn_row[0]][1] * 2, 5 * 2, 0, Math.PI * 2, true);
        lCtx.fill();
        this.line_zoom_axis[0] = point[btn_row[0]][0] * 2;
        this.line_zoom_axis[1] = point[btn_row[0]][1] * 2;
        
      } else {
        for (var index = btn_row.length - 1; index >= 0; index--) {
          if (index === btn_row.length - 1) {

            lCtx.beginPath();
            lCtx.fillStyle = 'rgb(255, 242, 0)';
            lCtx.arc(point[btn_row[index]][0] * 2, point[btn_row[index]][1] * 2, 5 * 2, 0, Math.PI * 2, true);
            lCtx.fill();
            this.line_zoom_axis[0] = point[btn_row[index]][0] * 2;
            this.line_zoom_axis[1] = point[btn_row[index]][1] * 2;
            
          } else {

            lCtx.lineWidth = 3;
            this.drawLineArrow(this.line_zoom_axis[0], this.line_zoom_axis[1], point[btn_row[index]][0] * 2, point[btn_row[index]][1] * 2);
            // lCtx.beginPath();
            // lCtx.strokeStyle = 'rgb(63, 72, 204)';
            // lCtx.moveTo(this.line_zoom_axis[0], this.line_zoom_axis[1]);
            // lCtx.lineTo(point[btn_row[index]][0] * 2, point[btn_row[index]][1] * 2);
            // lCtx.stroke();
            lCtx.beginPath();
            lCtx.fillStyle = 'rgb(255, 242, 0)';
            lCtx.arc(this.line_zoom_axis[0], this.line_zoom_axis[1], 5 * 2, 0, Math.PI * 2, true);
            lCtx.arc(point[btn_row[index]][0] * 2, point[btn_row[index]][1] * 2, 5 * 2, 0, Math.PI * 2, true);
            lCtx.fill();
            this.line_zoom_axis[0] = point[btn_row[index]][0] * 2;
            this.line_zoom_axis[1] = point[btn_row[index]][1] * 2;
            
          }
        }
      }
    }
  }

  rotate_canvas_zoom = () => {
    const canvas1 = this.refs.rotate_canvas_zoom1;
    const canvas2 = this.refs.rotate_canvas_zoom2;
    let img = null;
    let img1 = null;
    let start_end = [];
    let point = [];
    if (this.state.rotate === 0) {
      img = this.refs.rotate_canvasImg1_0;
      img1 = this.refs.rotate_canvasImg2_0;
      start_end = degree_0_start_end;
      point = degree_0_point;
    } else if (this.state.rotate === 90) {
      img = this.refs.rotate_canvasImg1_90;
      img1 = this.refs.rotate_canvasImg2_90;
      start_end = degree_90_start_end;
      point = degree_90_point;
    } else if (this.state.rotate === 180) {
      img = this.refs.rotate_canvasImg1_180;
      img1 = this.refs.rotate_canvasImg2_180;
      start_end = degree_180_start_end;
      point = degree_180_point;
    } else if (this.state.rotate === 270) {
      img = this.refs.rotate_canvasImg1_270;
      img1 = this.refs.rotate_canvasImg2_270;
      start_end = degree_270_start_end;
      point = degree_270_point;
    }
    const ctx = canvas1.getContext('2d');
    const ctx1 = canvas2.getContext('2d');
    var x = 0.054;
    var ang = 9.729;

    let btn_row = this.state.btn_row;

    ctx.clearRect(0, 0, 310 * 2, 310 * 2);
    ctx.drawImage(img, 0, 0, 310 * 2, 310 * 2);

    ctx.lineWidth = 0.3 * 2;
    ctx.beginPath();
    ctx.strokeStyle = 'rgb(0, 0, 0)';
    ctx.moveTo(155 * 2, 155 * 2);
    for (var inline = 1; inline < 37; inline++) {
      ctx.arc(155 * 2, 155 * 2, 119 * 2, Math.PI * (start_end[0] + (inline - 1) * x), Math.PI * (start_end[0] + inline * x));
      ctx.lineTo(155 * 2, 155 * 2);
    }
    ctx.arc(155 * 2, 155 * 2, 119 * 2, Math.PI * start_end[1], Math.PI * start_end[2]);
    ctx.lineTo(155 * 2, 155 * 2);
    ctx.stroke();

    ctx1.clearRect(0, 0, 310 * 2, 310 * 2);
    ctx1.drawImage(img1, 35 * 2, 35 * 2, 240 * 2, 240 * 2);

    if (btn_row.length) {
      for (var index = btn_row.length - 1; index >= 0; index--) {

        ctx1.save();
        ctx1.clearRect(0, 0, 310 * 2, 310 * 2);
        ctx1.translate(155 * 2, 155 * 2);
        ctx1.rotate(Math.PI / 180 * (ang * point[btn_row[index]][2]));
        ctx1.drawImage(img1, -120 * 2, -120 * 2, 240 * 2, 240 * 2);
        ctx1.restore();

        ctx.beginPath();
        ctx.fillStyle = 'rgb(255, 242, 0)';
        ctx.arc(point[btn_row[index]][0] * 2, point[btn_row[index]][1] * 2, 5 * 2, 0, Math.PI * 2, true);
        ctx.fill();
        
      }
    }
  }

  updatePie = () => {
    const canvas = this.refs.pie_canvas;
    let img = null;
    let start_end = [];
    if (this.state.rotate === 0) {
      img = this.refs.board_canvasImg1_0;
      start_end = degree_0_start_end;
    } else if (this.state.rotate === 90) {
      img = this.refs.board_canvasImg1_90;
      start_end = degree_90_start_end;
    } else if (this.state.rotate === 180) {
      img = this.refs.board_canvasImg1_180;
      start_end = degree_180_start_end;
    } else if (this.state.rotate === 270) {
      img = this.refs.board_canvasImg1_270;
      start_end = degree_270_start_end;
    }
    const ctx = canvas.getContext('2d');
    var x = 0.054;

    let pie_row_data = this.state.pie_row_data;
    let pie_row = this.state.pie_row;
    var range = parseInt(this.range_group[0], 10);;
    for (var index = 0; index < pie_row_data.length; index++) {
      pie_row[index] = pie_row_data[index] * range;
      if (pie_row[index] > 119) {
        pie_row[index] = 119;
      }
    }
    if (!this.state.isFilter) {
      this.setState({
        pie_row: pie_row,
        type: ''
      })
    } else {
      let btn_row = this.state.btn_row_data;
      pie_row_data = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
      if (btn_row.length) {
        let filter_length = parseInt(this.state.filterNumber, 10) < btn_row.length ? parseInt(this.state.filterNumber, 10) : btn_row.length;
        for (var index1 = 0; index1 < filter_length; index1++) {
          pie_row_data[btn_row[index1]] += 5;
          if (pie_row_data[btn_row[index1]] > 119) {
            pie_row_data[btn_row[index1]] = 119;
          }
        }
      }

      for (let pie_index = 0; pie_index < pie_row_data.length; pie_index++) {
        pie_row[pie_index] = pie_row_data[pie_index] * range;
        if (pie_row[pie_index] > 119) {
          pie_row[pie_index] = 119;
        }
      }
      
      this.setState({
        pie_row: pie_row,
        type: ''
      })
    }

    ctx.clearRect(0, 0, 310, 310);
    ctx.drawImage(img, 0, 0, 310, 310);

    // 0
    ctx.lineWidth = pie_row[0];
    ctx.beginPath();
    ctx.strokeStyle = 'rgb(242, 178, 87)';
    ctx.arc(155, 155, pie_row[0] / 2, Math.PI * (start_end[0] + x * 0), Math.PI * (start_end[0] + x * 1));
    ctx.stroke();

    // 32
    ctx.lineWidth = pie_row[32];
    ctx.beginPath();
    ctx.strokeStyle = 'rgb(216, 221, 80)';
    ctx.arc(155, 155, pie_row[32] / 2, Math.PI * (start_end[0] + x * 1), Math.PI * (start_end[0] + x * 2));
    ctx.stroke();

    // 15
    ctx.lineWidth = pie_row[15];
    ctx.beginPath();
    ctx.strokeStyle = 'rgb(242, 178, 87)';
    ctx.arc(155, 155, pie_row[15] / 2, Math.PI * (start_end[0] + x * 2), Math.PI * (start_end[0] + x * 3));
    ctx.stroke();

    // 19
    ctx.lineWidth = pie_row[19];
    ctx.beginPath();
    ctx.strokeStyle = 'rgb(216, 221, 80)';
    ctx.arc(155, 155, pie_row[19] / 2, Math.PI * (start_end[0] + x * 3), Math.PI * (start_end[0] + x * 4));
    ctx.stroke();

    // 4
    ctx.lineWidth = pie_row[4];
    ctx.beginPath();
    ctx.strokeStyle = 'rgb(225, 99, 59)';
    ctx.arc(155, 155, pie_row[4] / 2, Math.PI * (start_end[0] + x * 4), Math.PI * (start_end[0] + x * 5));
    ctx.stroke();

    // 21
    ctx.lineWidth = pie_row[21];
    ctx.beginPath();
    ctx.strokeStyle = 'rgb(225, 99, 59)';
    ctx.arc(155, 155, pie_row[21] / 2, Math.PI * (start_end[0] + x * 5), Math.PI * (start_end[0] + x * 6));
    ctx.stroke();

    // 2
    ctx.lineWidth = pie_row[2];
    ctx.beginPath();
    ctx.strokeStyle = 'rgb(225, 99, 59)';
    ctx.arc(155, 155, pie_row[2] / 2, Math.PI * (start_end[0] + x * 6), Math.PI * (start_end[0] + x * 7));
    ctx.stroke();

    // 25
    ctx.lineWidth = pie_row[25];
    ctx.beginPath();
    ctx.strokeStyle = 'rgb(225, 99, 59)';
    ctx.arc(155, 155, pie_row[25] / 2, Math.PI * (start_end[0] + x * 7), Math.PI * (start_end[0] + x * 8));
    ctx.stroke();

    // 17
    ctx.lineWidth = pie_row[17];
    ctx.beginPath();
    ctx.strokeStyle = 'rgb(242, 178, 87)';
    ctx.arc(155, 155, pie_row[17] / 2, Math.PI * (start_end[0] + x * 8), Math.PI * (start_end[0] + x * 9));
    ctx.stroke();

    // 34
    ctx.lineWidth = pie_row[34];
    ctx.beginPath();
    ctx.strokeStyle = 'rgb(225, 99, 59)';
    ctx.arc(155, 155, pie_row[34] / 2, Math.PI * (start_end[0] + x * 9), Math.PI * (start_end[0] + x * 10));
    ctx.stroke();

    // 6
    ctx.lineWidth = pie_row[6];
    ctx.beginPath();
    ctx.strokeStyle = 'rgb(242, 178, 87)';
    ctx.arc(155, 155, pie_row[6] / 2, Math.PI * (start_end[0] + x * 10), Math.PI * (start_end[0] + x * 11));
    ctx.stroke();

    // 27
    ctx.lineWidth = pie_row[27];
    ctx.beginPath();
    ctx.strokeStyle = 'rgb(216, 221, 80)';
    ctx.arc(155, 155, pie_row[27] / 2, Math.PI * (start_end[0] + x * 11), Math.PI * (start_end[0] + x * 12));
    ctx.stroke();

    // 13
    ctx.lineWidth = pie_row[13];
    ctx.beginPath();
    ctx.strokeStyle = 'rgb(153, 196, 85)';
    ctx.arc(155, 155, pie_row[13] / 2, Math.PI * (start_end[0] + x * 12), Math.PI * (start_end[0] + x * 13));
    ctx.stroke();

    // 36
    ctx.lineWidth = pie_row[36];
    ctx.beginPath();
    ctx.strokeStyle = 'rgb(153, 196, 85)';
    ctx.arc(155, 155, pie_row[36] / 2, Math.PI * (start_end[0] + x * 13), Math.PI * (start_end[0] + x * 14));
    ctx.stroke();

    // 11
    ctx.lineWidth = pie_row[11];
    ctx.beginPath();
    ctx.strokeStyle = 'rgb(242, 178, 87)';
    ctx.arc(155, 155, pie_row[11] / 2, Math.PI * (start_end[0] + x * 14), Math.PI * (start_end[0] + x * 15));
    ctx.stroke();

    // 30
    ctx.lineWidth = pie_row[30];
    ctx.beginPath();
    ctx.strokeStyle = 'rgb(216, 221, 80)';
    ctx.arc(155, 155, pie_row[30] / 2, Math.PI * (start_end[0] + x * 15), Math.PI * (start_end[0] + x * 16));
    ctx.stroke();

    // 8
    ctx.lineWidth = pie_row[8];
    ctx.beginPath();
    ctx.strokeStyle = 'rgb(242, 178, 87)';
    ctx.arc(155, 155, pie_row[8] / 2, Math.PI * (start_end[0] + x * 16), Math.PI * (start_end[0] + x * 17));
    ctx.stroke();

    // 23
    ctx.lineWidth = pie_row[23];
    ctx.beginPath();
    ctx.strokeStyle = 'rgb(242, 178, 87)';
    ctx.arc(155, 155, pie_row[23] / 2, Math.PI * (start_end[0] + x * 17), Math.PI * (start_end[0] + x * 18));
    ctx.stroke();

    // 10
    ctx.lineWidth = pie_row[10];
    ctx.beginPath();
    ctx.strokeStyle = 'rgb(242, 178, 87)';
    ctx.arc(155, 155, pie_row[10] / 2, Math.PI * (start_end[0] + x * 18), Math.PI * (start_end[0] + x * 19));
    ctx.stroke();

    // 5
    ctx.lineWidth = pie_row[5];
    ctx.beginPath();
    ctx.strokeStyle = 'rgb(242, 178, 87)';
    ctx.arc(155, 155, pie_row[5] / 2, Math.PI * (start_end[0] + x * 19), Math.PI * (start_end[0] + x * 20));
    ctx.stroke();

    // 24
    ctx.lineWidth = pie_row[24];
    ctx.beginPath();
    ctx.strokeStyle = 'rgb(242, 178, 87)';
    ctx.arc(155, 155, pie_row[24] / 2, Math.PI * (start_end[0] + x * 20), Math.PI * (start_end[0] + x * 21));
    ctx.stroke();

    // 16
    ctx.lineWidth = pie_row[16];
    ctx.beginPath();
    ctx.strokeStyle = 'rgb(225, 99, 59)';
    ctx.arc(155, 155, pie_row[16] / 2, Math.PI * (start_end[0] + x * 21), Math.PI * (start_end[0] + x * 22));
    ctx.stroke();

    // 33
    ctx.lineWidth = pie_row[33];
    ctx.beginPath();
    ctx.strokeStyle = 'rgb(216, 221, 80)';
    ctx.arc(155, 155, pie_row[33] / 2, Math.PI * (start_end[0] + x * 22), Math.PI * (start_end[0] + x * 23));
    ctx.stroke();

    // 1
    ctx.lineWidth = pie_row[1];
    ctx.beginPath();
    ctx.strokeStyle = 'rgb(216, 221, 80)';
    ctx.arc(155, 155, pie_row[1] / 2, Math.PI * (start_end[0] + x * 23), Math.PI * (start_end[0] + x * 24));
    ctx.stroke();

    // 20
    ctx.lineWidth = pie_row[20];
    ctx.beginPath();
    ctx.strokeStyle = 'rgb(78, 169, 220)';
    ctx.arc(155, 155, pie_row[20] / 2, Math.PI * (start_end[0] + x * 24), Math.PI * (start_end[0] + x * 25));
    ctx.stroke();

    // 14
    ctx.lineWidth = pie_row[14];
    ctx.beginPath();
    ctx.strokeStyle = 'rgb(153, 196, 85)';
    ctx.arc(155, 155, pie_row[14] / 2, Math.PI * (start_end[0] + x * 25), Math.PI * (start_end[0] + x * 26));
    ctx.stroke();

    // 31
    ctx.lineWidth = pie_row[31];
    ctx.beginPath();
    ctx.strokeStyle = 'rgb(78, 169, 220)';
    ctx.arc(155, 155, pie_row[31] / 2, Math.PI * (start_end[0] + x * 26), Math.PI * (start_end[0] + x * 27));
    ctx.stroke();

    // 9
    ctx.lineWidth = pie_row[9];
    ctx.beginPath();
    ctx.strokeStyle = 'rgb(78, 169, 220)';
    ctx.arc(155, 155, pie_row[9] / 2, Math.PI * (start_end[0] + x * 27), Math.PI * (start_end[0] + x * 28));
    ctx.stroke();

    // 22
    ctx.lineWidth = pie_row[22];
    ctx.beginPath();
    ctx.strokeStyle = 'rgb(153, 196, 85)';
    ctx.arc(155, 155, pie_row[22] / 2, Math.PI * (start_end[0] + x * 28), Math.PI * (start_end[0] + x * 29));
    ctx.stroke();

    // 18
    ctx.lineWidth = pie_row[18];
    ctx.beginPath();
    ctx.strokeStyle = 'rgb(78, 169, 220)';
    ctx.arc(155, 155, pie_row[18] / 2, Math.PI * (start_end[0] + x * 29), Math.PI * (start_end[0] + x * 30));
    ctx.stroke();

    // 29
    ctx.lineWidth = pie_row[29];
    ctx.beginPath();
    ctx.strokeStyle = 'rgb(78, 169, 220)';
    ctx.arc(155, 155, pie_row[29] / 2, Math.PI * (start_end[0] + x * 30), Math.PI * (start_end[0] + x * 31));
    ctx.stroke();

    // 7
    ctx.lineWidth = pie_row[7];
    ctx.beginPath();
    ctx.strokeStyle = 'rgb(153, 196, 85)';
    ctx.arc(155, 155, pie_row[7] / 2, Math.PI * (start_end[0] + x * 31), Math.PI * (start_end[0] + x * 32));
    ctx.stroke();

    // 28
    ctx.lineWidth = pie_row[28];
    ctx.beginPath();
    ctx.strokeStyle = 'rgb(78, 169, 220)';
    ctx.arc(155, 155, pie_row[28] / 2, Math.PI * (start_end[0] + x * 32), Math.PI * (start_end[0] + x * 33));
    ctx.stroke();

    // 12
    ctx.lineWidth = pie_row[12];
    ctx.beginPath();
    ctx.strokeStyle = 'rgb(153, 196, 85)';
    ctx.arc(155, 155, pie_row[12] / 2, Math.PI * (start_end[0] + x * 33), Math.PI * (start_end[0] + x * 34));
    ctx.stroke();

    // 35
    ctx.lineWidth = pie_row[35];
    ctx.beginPath();
    ctx.strokeStyle = 'rgb(225, 99, 59)';
    ctx.arc(155, 155, pie_row[35] / 2, Math.PI * (start_end[0] + x * 34), Math.PI * (start_end[0] + x * 35));
    ctx.stroke();

    // 3
    ctx.lineWidth = pie_row[3];
    ctx.beginPath();
    ctx.strokeStyle = 'rgb(78, 169, 220)';
    ctx.arc(155, 155, pie_row[3] / 2, Math.PI * (start_end[0] + x * 35), Math.PI * start_end[1]);
    ctx.stroke();

    // 26
    ctx.lineWidth = pie_row[26];
    ctx.beginPath();
    ctx.strokeStyle = 'rgb(225, 99, 59)';
    ctx.arc(155, 155, pie_row[26] / 2, Math.PI * start_end[1], Math.PI * start_end[2]);
    ctx.stroke();

    ctx.lineWidth = 0.3;
    ctx.beginPath();
    ctx.strokeStyle = 'rgb(0, 0, 0)';
    ctx.moveTo(155, 155);
    for (var inline = 1; inline < 37; inline++) {
      ctx.arc(155, 155, 119, Math.PI * (start_end[0] + (inline - 1) * x), Math.PI * (start_end[0] + inline * x));
      ctx.lineTo(155, 155);
    }
    ctx.arc(155, 155, 119, Math.PI * start_end[1], Math.PI * start_end[2]);
    ctx.lineTo(155, 155);
    ctx.stroke();
  }

  updateBar = () => {
    let range = parseInt(this.range_group[1], 10);
    let zone_group = this.state.zone_group;
    let zone_group_data = this.state.zone_group_data;
    let data1 = this.state.data1;
    let bar_data1 = this.state.bar_data1;
    let data2 = this.state.data2;
    let bar_data2 = this.state.bar_data2;
    let data3 = this.state.data3;
    let bar_data3 = this.state.bar_data3;
    let data4 = this.state.data4;
    let bar_data4 = this.state.bar_data4;
    let data5 = this.state.data5;
    let bar_data5 = this.state.bar_data5;
    let data6 = this.state.data6;
    let bar_data6 = this.state.bar_data6;
    let data7 = this.state.data7;
    let bar_data7 = this.state.bar_data7;
    let data8 = this.state.data8;
    let bar_data8 = this.state.bar_data8;

    if (this.state.isFilter) {
      bar_data1 = [0, 0];
      bar_data2 = [0, 0];
      bar_data3 = [0, 0];
      bar_data4 = [0, 0, 0];
      bar_data5 = [0, 0, 0, 0];
      bar_data6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
      bar_data7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
      bar_data8 = [0, 0, 0];
      zone_group_data = [0, 0, 0, 0];
      let btn_row = this.state.btn_row_data;
      if (!this.state.isCheckedAllData) {
        if (btn_row.length) {
          let filter_length = parseInt(this.state.filterNumber, 10) < btn_row.length ? parseInt(this.state.filterNumber, 10) : btn_row.length;
          for (let index1 = 0; index1 < filter_length; index1++) {
            // zone 1
            if (btn_row[index1] === 0) {
              zone_group_data[0] += 1;
              bar_data5[0] += 1;
              bar_data6[0] += 1;
            }
  
            if (btn_row[index1] === 32) {
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[0] += 1;
              bar_data6[1] += 1;
              bar_data8[1] += 1;
              zone_group_data[0] += 1;
            }
  
            if (btn_row[index1] === 15) {
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[0] += 1;
              bar_data6[2] += 1;
              bar_data8[0] += 1;
              zone_group_data[0] += 1;
            }
  
            if (btn_row[index1] === 19) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[0] += 1;
              bar_data6[3] += 1;
              bar_data8[2] += 1;
              zone_group_data[0] += 1;
            }
  
            if (btn_row[index1] === 4) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[0] += 1;
              bar_data6[4] += 1;
              bar_data8[2] += 1;
              zone_group_data[0] += 1;
            }
  
            if (btn_row[index1] === 21) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[0] += 1;
              bar_data6[5] += 1;
              bar_data8[0] += 1;
              zone_group_data[0] += 1;
            }
  
            if (btn_row[index1] === 2) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[0] += 1;
              bar_data6[6] += 1;
              bar_data8[1] += 1;
              zone_group_data[0] += 1;
            }
  
            if (btn_row[index1] === 25) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[0] += 1;
              bar_data7[6] += 1;
              bar_data8[2] += 1;
              zone_group_data[0] += 1;
            }
  
            if (btn_row[index1] === 17) {
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[0] += 1;
              bar_data6[8] += 1;
              bar_data8[1] += 1;
              zone_group_data[0] += 1;
            }
              
            // zone 2
            if (btn_row[index1] === 34) {
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[1] += 1;
              bar_data6[9] += 1;
              bar_data8[2] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 6) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[1] += 1;
              bar_data6[10] += 1;
              bar_data8[0] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 27) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[1] += 1;
              bar_data6[11] += 1;
              bar_data8[0] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 13) {
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[1] += 1;
              bar_data6[12] += 1;
              bar_data8[2] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 36) {
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[1] += 1;
              bar_data6[13] += 1;
              bar_data8[0] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 11) {
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[1] += 1;
              bar_data6[14] += 1;
              bar_data8[1] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 30) {
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[1] += 1;
              bar_data6[15] += 1;
              bar_data8[0] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 8) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[1] += 1;
              bar_data6[16] += 1;
              bar_data8[1] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 23) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[1] += 1;
              bar_data6[17] += 1;
              bar_data8[1] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 10) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[1] += 1;
              bar_data6[18] += 1;
              bar_data8[2] += 1;
              zone_group_data[1] += 1;
            }
  
            // zone 3
            if (btn_row[index1] === 5) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[2] += 1;
              bar_data6[19] += 1;
              bar_data8[1] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 24) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[2] += 1;
              bar_data6[20] += 1;
              bar_data8[0] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 16) {
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[2] += 1;
              bar_data6[21] += 1;
              bar_data8[2] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 33) {
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[2] += 1;
              bar_data6[22] += 1;
              bar_data8[0] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 1) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[2] += 1;
              bar_data6[23] += 1;
              bar_data8[2] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 20) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[2] += 1;
              bar_data6[24] += 1;
              bar_data8[1] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 14) {
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[2] += 1;
              bar_data6[25] += 1;
              bar_data8[1] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 31) {
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[2] += 1;
              bar_data6[26] += 1;
              bar_data8[2] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 9) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[2] += 1;
              bar_data6[27] += 1;
              bar_data8[0] += 1;
              zone_group_data[2] += 1;
            }
  
            // zone 4
            if (btn_row[index1] === 22) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[3] += 1;
              bar_data6[28] += 1;
              bar_data8[2] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 18) {
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[3] += 1;
              bar_data6[29] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 29) {
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[3] += 1;
              bar_data6[30] += 1;
              bar_data8[1] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 7) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[3] += 1;
              bar_data6[31] += 1;
              bar_data8[2] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 28) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[3] += 1;
              bar_data6[32] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 12) {
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[3] += 1;
              bar_data6[33] += 1;
              bar_data8[0] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 35) {
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[3] += 1;
              bar_data6[34] += 1;
              bar_data8[1] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 3) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[3] += 1;
              bar_data6[35] += 1;
              bar_data8[0] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 26) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[3] += 1;
              bar_data6[36] += 1;
              bar_data8[1] += 1;
              zone_group_data[3] += 1;
            }
          }

          let last_num = filter_length - 1;
          let last_position = parseInt(this.state.filterNumber, 10) < btn_row.length ? btn_row[filter_length] : 0;
          for (var btn_index = last_num; btn_index >= 0; btn_index--) {
            // btn_row_data.splice(0, 0, btn_row[btn_index]);
            if (btn_position[last_position] === btn_position[btn_row[btn_index]]) {
              bar_data7[0] += 1;
            } else {
              let btn_index1 = Math.abs(btn_position[btn_row[btn_index]] - btn_position[last_position]) - 1;
              if (btn_index1 >= 18) {
                btn_index1 = Math.abs(btn_index1 - 35);
              }
              bar_data7[btn_index1] += 1;
            }
            last_position = btn_row[btn_index];
          }
        }
      } else {
        if (btn_row.length) {
          for (let index1 = 0; index1 < btn_row.length; index1++) {
            // zone 1
            if (btn_row[index1] === 0) {
              zone_group_data[0] += 1;
              bar_data5[0] += 1;
              bar_data6[0] += 1;
            }
  
            if (btn_row[index1] === 32) {
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[0] += 1;
              bar_data6[1] += 1;
              bar_data8[1] += 1;
              zone_group_data[0] += 1;
            }
  
            if (btn_row[index1] === 15) {
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[0] += 1;
              bar_data6[2] += 1;
              bar_data8[0] += 1;
              zone_group_data[0] += 1;
            }
  
            if (btn_row[index1] === 19) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[0] += 1;
              bar_data6[3] += 1;
              bar_data8[2] += 1;
              zone_group_data[0] += 1;
            }
  
            if (btn_row[index1] === 4) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[0] += 1;
              bar_data6[4] += 1;
              bar_data8[2] += 1;
              zone_group_data[0] += 1;
            }
  
            if (btn_row[index1] === 21) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[0] += 1;
              bar_data6[5] += 1;
              bar_data8[0] += 1;
              zone_group_data[0] += 1;
            }
  
            if (btn_row[index1] === 2) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[0] += 1;
              bar_data6[6] += 1;
              bar_data8[1] += 1;
              zone_group_data[0] += 1;
            }
  
            if (btn_row[index1] === 25) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[0] += 1;
              bar_data7[6] += 1;
              bar_data8[2] += 1;
              zone_group_data[0] += 1;
            }
  
            if (btn_row[index1] === 17) {
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[0] += 1;
              bar_data6[8] += 1;
              bar_data8[1] += 1;
              zone_group_data[0] += 1;
            }
              
            // zone 2
            if (btn_row[index1] === 34) {
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[1] += 1;
              bar_data6[9] += 1;
              bar_data8[2] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 6) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[1] += 1;
              bar_data6[10] += 1;
              bar_data8[0] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 27) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[1] += 1;
              bar_data6[11] += 1;
              bar_data8[0] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 13) {
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[1] += 1;
              bar_data6[12] += 1;
              bar_data8[2] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 36) {
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[1] += 1;
              bar_data6[13] += 1;
              bar_data8[0] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 11) {
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[1] += 1;
              bar_data6[14] += 1;
              bar_data8[1] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 30) {
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[1] += 1;
              bar_data6[15] += 1;
              bar_data8[0] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 8) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[1] += 1;
              bar_data6[16] += 1;
              bar_data8[1] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 23) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[1] += 1;
              bar_data6[17] += 1;
              bar_data8[1] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 10) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[1] += 1;
              bar_data6[18] += 1;
              bar_data8[2] += 1;
              zone_group_data[1] += 1;
            }
  
            // zone 3
            if (btn_row[index1] === 5) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[2] += 1;
              bar_data6[19] += 1;
              bar_data8[1] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 24) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[2] += 1;
              bar_data6[20] += 1;
              bar_data8[0] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 16) {
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[2] += 1;
              bar_data6[21] += 1;
              bar_data8[2] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 33) {
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[2] += 1;
              bar_data6[22] += 1;
              bar_data8[0] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 1) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[2] += 1;
              bar_data6[23] += 1;
              bar_data8[2] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 20) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[2] += 1;
              bar_data6[24] += 1;
              bar_data8[1] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 14) {
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[2] += 1;
              bar_data6[25] += 1;
              bar_data8[1] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 31) {
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[2] += 1;
              bar_data6[26] += 1;
              bar_data8[2] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 9) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[2] += 1;
              bar_data6[27] += 1;
              bar_data8[0] += 1;
              zone_group_data[2] += 1;
            }
  
            // zone 4
            if (btn_row[index1] === 22) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[3] += 1;
              bar_data6[28] += 1;
              bar_data8[2] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 18) {
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[3] += 1;
              bar_data6[29] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 29) {
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[3] += 1;
              bar_data6[30] += 1;
              bar_data8[1] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 7) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[3] += 1;
              bar_data6[31] += 1;
              bar_data8[2] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 28) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[3] += 1;
              bar_data6[32] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 12) {
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[3] += 1;
              bar_data6[33] += 1;
              bar_data8[0] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 35) {
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[3] += 1;
              bar_data6[34] += 1;
              bar_data8[1] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 3) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[3] += 1;
              bar_data6[35] += 1;
              bar_data8[0] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 26) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[3] += 1;
              bar_data6[36] += 1;
              bar_data8[1] += 1;
              zone_group_data[3] += 1;
            }
          }
          let last_num = btn_row.length - 1;
          let last_position = 0;
          for (var btn_index2 = last_num; btn_index2 >= 0; btn_index2--) {
            // btn_row_data.splice(0, 0, btn_row[btn_index2]);
            if (btn_position[last_position] === btn_position[btn_row[btn_index2]]) {
              bar_data7[0] += 1;
            } else {
              let btn_index3 = Math.abs(btn_position[btn_row[btn_index2]] - btn_position[last_position]) - 1;
              if (btn_index3 >= 18) {
                btn_index3 = Math.abs(btn_index3 - 35);
              }
              bar_data7[btn_index3] += 1;
            }
            last_position = btn_row[btn_index2];
          }
        }
      }
    }
    for (var zone_group_data_index = 0; zone_group_data_index < zone_group_data.length; zone_group_data_index++) {
      zone_group[zone_group_data_index] = zone_group_data[zone_group_data_index] * range;
    }
    for (var data1_index = 0; data1_index < bar_data1.length; data1_index++) {
      data1.datasets[0].data[data1_index] = bar_data1[data1_index] * range;
    }
    for (var data2_index = 0; data2_index < bar_data2.length; data2_index++) {
      data2.datasets[0].data[data2_index] = bar_data2[data2_index] * range;
    }
    for (var data3_index = 0; data3_index < bar_data3.length; data3_index++) {
      data3.datasets[0].data[data3_index] = bar_data3[data3_index] * range;
    }
    for (var data4_index = 0; data4_index < bar_data4.length; data4_index++) {
      data4.datasets[0].data[data4_index] = bar_data4[data4_index] * range;
    }
    for (var data5_index = 0; data5_index < bar_data5.length; data5_index++) {
      data5.datasets[0].data[data5_index] = bar_data5[data5_index] * range;
    }
    for (var data6_index = 0; data6_index < bar_data6.length; data6_index++) {
      data6.datasets[0].data[data6_index] = bar_data6[data6_index] * range;
    }
    for (var data7_index = 0; data7_index < bar_data7.length; data7_index++) {
      data7.datasets[0].data[data7_index] = bar_data7[data7_index] * range;
    }
    for (var data8_index = 0; data8_index < bar_data8.length; data8_index++) {
      data8.datasets[0].data[data8_index] = bar_data8[data8_index] * range;
    }
    
    this.setState({
      zone_group: zone_group,
      data1: data1,
      data2: data2,
      data3: data3,
      data4: data4,
      data5: data5,
      data6: data6,
      data7: data7,
      data8: data8,
      bar_status: true,
      type: ''
    })
  }

  btnClick = (id) => {
    this.getExpiredDate();
    let temp = {};
    temp['btn_row_data'] = this.state.btn_row_data;
    temp['pie_row_data'] = this.state.pie_row_data;
    temp['zone_group_data'] = this.state.zone_group_data;
    temp['bar_data1'] = this.state.bar_data1;
    temp['bar_data2'] = this.state.bar_data2;
    temp['bar_data3'] = this.state.bar_data3;
    temp['bar_data4'] = this.state.bar_data4;
    temp['bar_data5'] = this.state.bar_data5;
    temp['bar_data6'] = this.state.bar_data6;
    temp['bar_data7'] = this.state.bar_data7;
    temp['bar_data8'] = this.state.bar_data8;
    temp = JSON.parse(JSON.stringify(temp));
    this.setState({
      temp: temp,
      undo_status: true,
      cSelected: [],
      cSelected_status: false,
      type: ''
    })

    let bar_data1 = this.state.bar_data1;
    let data1 = this.state.data1;
    let bar_data2 = this.state.bar_data2;
    let data2 = this.state.data2;
    let bar_data3 = this.state.bar_data3;
    let data3 = this.state.data3;
    let bar_data4 = this.state.bar_data4;
    let data4 = this.state.data4;
    let bar_data5 = this.state.bar_data5;
    let data5 = this.state.data5;
    let bar_data6 = this.state.bar_data6;
    let data6 = this.state.data6;
    let bar_data7 = this.state.bar_data7;
    let data7 = this.state.data7;
    let bar_data8 = this.state.bar_data8;
    let data8 = this.state.data8;
    let zone_group = this.state.zone_group;
    let zone_group_data = this.state.zone_group_data;
    let angle_row = [];

    var range = parseInt(this.state.range_2, 10);

    if (id === 1 || id === 3 || id === 5 || id === 7 || id === 9 || id === 12 || id === 14 || id === 16 || id === 18 || id === 19 || id === 21 || id === 23 || id === 25 || id === 27 || id === 30 || id === 32 || id === 34 || id ===36) {

      bar_data1[0] += 1;
      let bar_data1_0 = bar_data1[0] * range;
      data1.datasets[0].data[0] = bar_data1_0;

    } else if (id === 2 || id === 4 || id === 6 || id === 8 || id === 10 || id === 11 || id === 13 || id === 15 || id === 17 || id === 20 || id === 22 || id === 24 || id === 26 || id === 28 || id === 29 || id === 31 || id === 33 || id === 35) {

      bar_data1[1] += 1;
      let bar_data1_1 = bar_data1[1] * range;
      data1.datasets[0].data[1] = bar_data1_1;

    }

    if (id === 2 || id === 4 || id === 6 || id === 8 || id === 10 || id === 12 || id === 14 || id === 16 || id === 18 || id === 20 || id === 22 || id === 24 || id === 26 || id === 28 || id === 30 || id === 32 || id === 34 || id === 36) {

      bar_data2[0] += 1;
      let bar_data2_0 = bar_data2[0] * range;
      data2.datasets[0].data[0] = bar_data2_0;

    } else if (id === 1 || id === 3 || id === 5 || id === 7 || id === 9 || id === 11 || id === 13 || id === 15 || id === 17 || id === 19 || id === 21 || id === 23 || id === 25 || id === 27 || id === 29 || id === 31 || id === 33 || id === 35) {
      
      bar_data2[1] += 1;
      let bar_data2_1 = bar_data2[1] * range;
      data2.datasets[0].data[1] = bar_data2_1;

    }

    if (id > 0 && id < 19) {

      bar_data3[0] += 1;
      let bar_data3_0 = bar_data3[0] * range;
      data3.datasets[0].data[0] = bar_data3_0;

    } else if (id > 18) {
      
      bar_data3[1] += 1;
      let bar_data3_1 = bar_data3[1] * range;
      data3.datasets[0].data[1] = bar_data3_1;
      
    }

    if (id > 0 && id < 13) {

      bar_data4[0] += 1;
      let bar_data4_0 = bar_data4[0] * range;
      data4.datasets[0].data[0] = bar_data4_0;

    } else if (id > 12 && id < 25) {
      
      bar_data4[1] += 1;
      let bar_data4_1 = bar_data4[1] * range;
      data4.datasets[0].data[1] = bar_data4_1;
      
    } else if (id > 24) {
      
      bar_data4[2] += 1;
      let bar_data4_2 = bar_data4[2] * range;
      data4.datasets[0].data[2] = bar_data4_2;
      
    }

    if (id === 0 || id === 32 || id === 15 || id === 19 || id === 4 || id === 21 || id === 2 || id === 25 || id === 17) {

      zone_group_data[0] += 1;
      zone_group[0] = zone_group_data[0] * range;
      bar_data5[0] += 1;
      let bar_data5_0 = bar_data5[0] * range;
      data5.datasets[0].data[0] = bar_data5_0;
      
    } else if (id === 34 || id === 6 || id === 27 || id === 13 || id === 36 || id === 11 || id === 30 || id === 8 || id === 23 || id === 10) {
      
      zone_group_data[1] += 1;
      zone_group[1] = zone_group_data[1] * range;
      bar_data5[1] += 1;
      let bar_data5_1 = bar_data5[1] * range;
      data5.datasets[0].data[1] = bar_data5_1;
      
    } else if(id === 5 || id === 24 || id === 16 || id === 33 || id === 1 || id === 20 || id === 14 || id === 31 || id === 9) {
      
      zone_group_data[2] += 1;
      zone_group[2] = zone_group_data[2] * range;
      bar_data5[2] += 1;
      let bar_data5_2 = bar_data5[2] * range;
      data5.datasets[0].data[2] = bar_data5_2;
      
    } else if (id === 22 || id === 18 || id === 29 || id === 7 || id === 28 || id === 12 || id === 35 || id === 3 || id === 26) {
      
      zone_group_data[3] += 1;
      zone_group[3] = zone_group_data[3] * range;
      bar_data5[3] += 1;
      let bar_data5_3 = bar_data5[3] * range;
      data5.datasets[0].data[3] = bar_data5_3;
      
    }

    if (id === 3 || id === 6 || id === 9 || id === 12 || id === 15 || id === 18 || id === 21 || id === 24 || id === 27 || id === 30 || id === 33 || id === 36) {

      bar_data8[0] += 1;
      let bar_data8_0 = bar_data8[0] * range;
      data8.datasets[0].data[0] = bar_data8_0;
      
    } else if (id === 2 || id === 5 || id === 8 || id === 11 || id === 14 || id === 17 || id === 20 || id === 23 || id === 26 || id === 29 || id === 32 || id === 35) {
      
      bar_data8[1] += 1;
      let bar_data8_1 = bar_data8[1] * range;
      data8.datasets[0].data[1] = bar_data8_1;
      
    } else if (id === 1 || id === 4 || id === 7 || id === 10 || id === 13 || id === 16 || id === 19 || id === 22 || id === 25 || id === 28 || id === 31 || id === 34) {
      
      bar_data8[2] += 1;
      let bar_data8_2 = bar_data8[2] * range;
      data8.datasets[0].data[2] = bar_data8_2;
      
    }

    // Zone 1
    if (id === 0) {
      
      bar_data6[0] += 1;
      let bar_data6_0 = bar_data6[0] * range;
      data6.datasets[0].data[0] = bar_data6_0;
      
    }

    if (id === 32) {
      
      bar_data6[1] += 1;
      let bar_data6_1 = bar_data6[1] * range;
      data6.datasets[0].data[1] = bar_data6_1;
      
    }

    if (id === 15) {
      
      bar_data6[2] += 1;
      let bar_data6_2 = bar_data6[2] * range;
      data6.datasets[0].data[2] = bar_data6_2;
      
    }

    if (id === 19) {
      
      bar_data6[3] += 1;
      let bar_data6_3 = bar_data6[3] * range;
      data6.datasets[0].data[3] = bar_data6_3;
      
    }

    if (id === 4) {
      
      bar_data6[4] += 1;
      let bar_data6_4 = bar_data6[4] * range;
      data6.datasets[0].data[4] = bar_data6_4;
      
    }

    if (id === 21) {
      
      bar_data6[5] += 1;
      let bar_data6_5 = bar_data6[5] * range;
      data6.datasets[0].data[5] = bar_data6_5;
      
    }

    if (id === 2) {
      
      bar_data6[6] += 1;
      let bar_data6_6 = bar_data6[6] * range;
      data6.datasets[0].data[6] = bar_data6_6;
      
    }

    if (id === 25) {
      
      bar_data6[7] += 1;
      let bar_data6_7 = bar_data6[7] * range;
      data6.datasets[0].data[7] = bar_data6_7;
      
    }

    if (id === 17) {
      
      bar_data6[8] += 1;
      let bar_data6_8 = bar_data6[8] * range;
      data6.datasets[0].data[8] = bar_data6_8;
      
    }
      
    // zone 2
    if (id === 34) {
      
      bar_data6[9] += 1;
      let bar_data6_9 = bar_data6[9] * range;
      data6.datasets[0].data[9] = bar_data6_9;
      
    }

    if (id === 6) {
      
      bar_data6[10] += 1;
      let bar_data6_10 = bar_data6[10] * range;
      data6.datasets[0].data[10] = bar_data6_10;
      
    }

    if (id === 27) {
      
      bar_data6[11] += 1;
      let bar_data6_11 = bar_data6[11] * range;
      data6.datasets[0].data[11] = bar_data6_11;
      
    }

    if (id === 13) {
      
      bar_data6[12] += 1;
      let bar_data6_12 = bar_data6[12] * range;
      data6.datasets[0].data[12] = bar_data6_12;
      
    }

    if (id === 36) {
      
      bar_data6[13] += 1;
      let bar_data6_13 = bar_data6[13] * range;
      data6.datasets[0].data[13] = bar_data6_13;
      
    }

    if (id === 11) {
      
      bar_data6[14] += 1;
      let bar_data6_14 = bar_data6[14] * range;
      data6.datasets[0].data[14] = bar_data6_14;
      
    }

    if (id === 30) {
      
      bar_data6[15] += 1;
      let bar_data6_15 = bar_data6[15] * range;
      data6.datasets[0].data[15] = bar_data6_15;
      
    }

    if (id === 8) {
      
      bar_data6[16] += 1;
      let bar_data6_16 = bar_data6[16] * range;
      data6.datasets[0].data[16] = bar_data6_16;
      
    }

    if (id === 23) {
      
      bar_data6[17] += 1;
      let bar_data6_17 = bar_data6[17] * range;
      data6.datasets[0].data[17] = bar_data6_17;
      
    }

    if (id === 10) {
      
      bar_data6[18] += 1;
      let bar_data6_18 = bar_data6[18] * range;
      data6.datasets[0].data[18] = bar_data6_18;
      
    }

    // zone 3
    if (id === 5) {
      
      bar_data6[19] += 1;
      let bar_data6_19 = bar_data6[19] * range;
      data6.datasets[0].data[19] = bar_data6_19;
      
    }

    if (id === 24) {
      
      bar_data6[20] += 1;
      let bar_data6_20 = bar_data6[20] * range;
      data6.datasets[0].data[20] = bar_data6_20;
      
    }

    if (id === 16) {
      
      bar_data6[21] += 1;
      let bar_data6_21 = bar_data6[21] * range;
      data6.datasets[0].data[21] = bar_data6_21;
      
    }

    if (id === 33) {
      
      bar_data6[22] += 1;
      let bar_data6_22 = bar_data6[22] * range;
      data6.datasets[0].data[22] = bar_data6_22;
      
    }

    if (id === 1) {
      
      bar_data6[23] += 1;
      let bar_data6_23 = bar_data6[23] * range;
      data6.datasets[0].data[23] = bar_data6_23;
      
    }

    if (id === 20) {
      
      bar_data6[24] += 1;
      let bar_data6_24 = bar_data6[24] * range;
      data6.datasets[0].data[24] = bar_data6_24;
      
    }

    if (id === 14) {
      
      bar_data6[25] += 1;
      let bar_data6_25 = bar_data6[25] * range;
      data6.datasets[0].data[25] = bar_data6_25;
      
    }

    if (id === 31) {
      
      bar_data6[26] += 1;
      let bar_data6_26 = bar_data6[26] * range;
      data6.datasets[0].data[26] = bar_data6_26;
      
    }

    if (id === 9) {
      
      bar_data6[27] += 1;
      let bar_data6_27 = bar_data6[27] * range;
      data6.datasets[0].data[27] = bar_data6_27;
      
    }

    // zone 4
    if (id === 22) {
      
      bar_data6[28] += 1;
      let bar_data6_28 = bar_data6[28] * range;
      data6.datasets[0].data[28] = bar_data6_28;
      
    }

    if (id === 18) {
      
      bar_data6[29] += 1;
      let bar_data6_29 = bar_data6[29] * range;
      data6.datasets[0].data[29] = bar_data6_29;
      
    }

    if (id === 29) {
      
      bar_data6[30] += 1;
      let bar_data6_30 = bar_data6[30] * range;
      data6.datasets[0].data[30] = bar_data6_30;
      
    }

    if (id === 7) {
      
      bar_data6[31] += 1;
      let bar_data6_31 = bar_data6[31] * range;
      data6.datasets[0].data[31] = bar_data6_31;
      
    }

    if (id === 28) {
      
      bar_data6[32] += 1;
      let bar_data6_32 = bar_data6[32] * range;
      data6.datasets[0].data[32] = bar_data6_32;
      
    }

    if (id === 12) {
      
      bar_data6[33] += 1;
      let bar_data6_33 = bar_data6[33] * range;
      data6.datasets[0].data[33] = bar_data6_33;
      
    }

    if (id === 35) {
      
      bar_data6[34] += 1;
      let bar_data6_34 = bar_data6[34] * range;
      data6.datasets[0].data[34] = bar_data6_34;
      
    }

    if (id === 3) {
      
      bar_data6[35] += 1;
      let bar_data6_35 = bar_data6[35] * range;
      data6.datasets[0].data[35] = bar_data6_35;
      
    }

    if (id === 26) {
      
      bar_data6[36] += 1;
      let bar_data6_36 = bar_data6[36] * range;
      data6.datasets[0].data[36] = bar_data6_36;
      
    }

    if (id !== this.state.last_position) {
      let index = Math.abs(btn_position[id] - btn_position[this.state.last_position]) - 1;
      if (index >= 18) {
        index = Math.abs(index - 35);
      }
      
      bar_data7[index] += 1;
      data7.datasets[0].data[index] = bar_data7[index] * range;
      
    } else {
      
      bar_data7[0] += 1;
      data7.datasets[0].data[0] = bar_data7[0] * range;
      
    }
    
    let btn_row = this.state.btn_row_data;
    let btn_row_data = this.state.btn_row_data;
    btn_row.splice(0, 0, id);

    if (!this.state.isFilter) {
      let last_num = btn_row.length - 1;
      let last_position = 0;
      for (let btn_index = last_num; btn_index >= 0; btn_index--) {
        if (btn_position[last_position] === btn_position[btn_row[btn_index]]) {
          angle_row.splice(0, 0, angle_array[0]);
        } else {
          let btn_index1 = Math.abs(btn_position[btn_row[btn_index]] - btn_position[last_position]) - 1;
          if (btn_index1 >= 18) {
            btn_index1 = Math.abs(btn_index1 - 35);
          }
          angle_row.splice(0, 0, angle_array[btn_index1]);
        }
        last_position = btn_row[btn_index];
      }
      this.setState({
        bar_data1: bar_data1,
        data1: data1,
        bar_data2: bar_data2,
        data2: data2,
        bar_data3: bar_data3,
        data3: data3,
        bar_data4: bar_data4,
        data4: data4,
        bar_data5: bar_data5,
        data5: data5,
        bar_data6: bar_data6,
        data6: data6,
        bar_data7: bar_data7,
        data7: data7,
        bar_data8: bar_data8,
        data8: data8,
        zone_group: zone_group,
        zone_group_data: zone_group_data,
        btn_row: btn_row,
        btn_row_data: btn_row_data,
        last_position: id,
        angle_row: angle_row,
        bar_status: true,
        type: ''
      })

      this.updatePieCanvas(id);
      this.updateLineCanvas(id);
      this.updateRotateCanvas(id);
      
    } else {
      btn_row_data = [];
      bar_data1 = [0, 0];
      bar_data2 = [0, 0];
      bar_data3 = [0, 0];
      bar_data4 = [0, 0, 0];
      bar_data5 = [0, 0, 0, 0];
      bar_data6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
      bar_data7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
      bar_data8 = [0, 0, 0];
      zone_group_data = [0, 0, 0, 0];
      var range1 = parseInt(this.state.range_1, 10);
      var range2 = parseInt(this.state.range_2, 10);
      let pie_row_data = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
      let pie_row = this.state.pie_row;
      
      if (!this.state.isCheckedAllData) {
        let filter_length = parseInt(this.state.filterNumber, 10) < btn_row.length ? parseInt(this.state.filterNumber, 10) : btn_row.length;
        for (let index1 = 0; index1 < filter_length; index1++) {
          // zone 1
          if (btn_row[index1] === 0) {
            pie_row_data[0] += 5;
            if (pie_row_data[0] > 119) {
              pie_row_data[0] = 119;
            }
            zone_group_data[0] += 1;
            bar_data5[0] += 1;
            bar_data6[0] += 1;
          }

          if (btn_row[index1] === 32) {
            pie_row_data[32] += 5;
            if (pie_row_data[32] > 119) {
              pie_row_data[32] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[0] += 1;
            bar_data6[1] += 1;
            bar_data8[1] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 15) {
            pie_row_data[15] += 5;
            if (pie_row_data[15] > 119) {
              pie_row_data[15] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[0] += 1;
            bar_data6[2] += 1;
            bar_data8[0] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 19) {
            pie_row_data[19] += 5;
            if (pie_row_data[19] > 119) {
              pie_row_data[19] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[0] += 1;
            bar_data6[3] += 1;
            bar_data8[2] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 4) {
            pie_row_data[4] += 5;
            if (pie_row_data[4] > 119) {
              pie_row_data[4] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[0] += 1;
            bar_data6[4] += 1;
            bar_data8[2] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 21) {
            pie_row_data[21] += 5;
            if (pie_row_data[21] > 119) {
              pie_row_data[21] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[0] += 1;
            bar_data6[5] += 1;
            bar_data8[0] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 2) {
            pie_row_data[2] += 5;
            if (pie_row_data[2] > 119) {
              pie_row_data[2] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[0] += 1;
            bar_data6[6] += 1;
            bar_data8[1] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 25) {
            pie_row_data[25] += 5;
            if (pie_row_data[25] > 119) {
              pie_row_data[25] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[0] += 1;
            bar_data7[6] += 1;
            bar_data8[2] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 17) {
            pie_row_data[17] += 5;
            if (pie_row_data[17] > 119) {
              pie_row_data[17] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[0] += 1;
            bar_data6[8] += 1;
            bar_data8[1] += 1;
            zone_group_data[0] += 1;
          }
            
          // zone 2
          if (btn_row[index1] === 34) {
            pie_row_data[34] += 5;
            if (pie_row_data[34] > 119) {
              pie_row_data[34] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[1] += 1;
            bar_data6[9] += 1;
            bar_data8[2] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 6) {
            pie_row_data[6] += 5;
            if (pie_row_data[6] > 119) {
              pie_row_data[6] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[1] += 1;
            bar_data6[10] += 1;
            bar_data8[0] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 27) {
            pie_row_data[27] += 5;
            if (pie_row_data[27] > 119) {
              pie_row_data[27] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[1] += 1;
            bar_data6[11] += 1;
            bar_data8[0] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 13) {
            pie_row_data[13] += 5;
            if (pie_row_data[13] > 119) {
              pie_row_data[13] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[1] += 1;
            bar_data6[12] += 1;
            bar_data8[2] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 36) {
            pie_row_data[36] += 5;
            if (pie_row_data[36] > 119) {
              pie_row_data[36] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[1] += 1;
            bar_data6[13] += 1;
            bar_data8[0] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 11) {
            pie_row_data[11] += 5;
            if (pie_row_data[11] > 119) {
              pie_row_data[11] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[1] += 1;
            bar_data6[14] += 1;
            bar_data8[1] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 30) {
            pie_row_data[30] += 5;
            if (pie_row_data[30] > 119) {
              pie_row_data[30] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[1] += 1;
            bar_data6[15] += 1;
            bar_data8[0] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 8) {
            pie_row_data[8] += 5;
            if (pie_row_data[8] > 119) {
              pie_row_data[8] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[1] += 1;
            bar_data6[16] += 1;
            bar_data8[1] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 23) {
            pie_row_data[23] += 5;
            if (pie_row_data[23] > 119) {
              pie_row_data[23] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[1] += 1;
            bar_data6[17] += 1;
            bar_data8[1] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 10) {
            pie_row_data[10] += 5;
            if (pie_row_data[10] > 119) {
              pie_row_data[10] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[1] += 1;
            bar_data6[18] += 1;
            bar_data8[2] += 1;
            zone_group_data[1] += 1;
          }

          // zone 3
          if (btn_row[index1] === 5) {
            pie_row_data[5] += 5;
            if (pie_row_data[5] > 119) {
              pie_row_data[5] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[2] += 1;
            bar_data6[19] += 1;
            bar_data8[1] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 24) {
            pie_row_data[24] += 5;
            if (pie_row_data[24] > 119) {
              pie_row_data[24] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[2] += 1;
            bar_data6[20] += 1;
            bar_data8[0] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 16) {
            pie_row_data[16] += 5;
            if (pie_row_data[16] > 119) {
              pie_row_data[16] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[2] += 1;
            bar_data6[21] += 1;
            bar_data8[2] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 33) {
            pie_row_data[33] += 5;
            if (pie_row_data[33] > 119) {
              pie_row_data[33] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[2] += 1;
            bar_data6[22] += 1;
            bar_data8[0] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 1) {
            pie_row_data[1] += 5;
            if (pie_row_data[1] > 119) {
              pie_row_data[1] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[2] += 1;
            bar_data6[23] += 1;
            bar_data8[2] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 20) {
            pie_row_data[20] += 5;
            if (pie_row_data[20] > 119) {
              pie_row_data[20] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[2] += 1;
            bar_data6[24] += 1;
            bar_data8[1] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 14) {
            pie_row_data[14] += 5;
            if (pie_row_data[14] > 119) {
              pie_row_data[14] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[2] += 1;
            bar_data6[25] += 1;
            bar_data8[1] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 31) {
            pie_row_data[31] += 5;
            if (pie_row_data[31] > 119) {
              pie_row_data[31] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[2] += 1;
            bar_data6[26] += 1;
            bar_data8[2] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 9) {
            pie_row_data[9] += 5;
            if (pie_row_data[9] > 119) {
              pie_row_data[9] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[2] += 1;
            bar_data6[27] += 1;
            bar_data8[0] += 1;
            zone_group_data[2] += 1;
          }

          // zone 4
          if (btn_row[index1] === 22) {
            pie_row_data[22] += 5;
            if (pie_row_data[22] > 119) {
              pie_row_data[22] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[3] += 1;
            bar_data6[28] += 1;
            bar_data8[2] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 18) {
            pie_row_data[18] += 5;
            if (pie_row_data[18] > 119) {
              pie_row_data[18] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[3] += 1;
            bar_data6[29] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 29) {
            pie_row_data[29] += 5;
            if (pie_row_data[29] > 119) {
              pie_row_data[29] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[3] += 1;
            bar_data6[30] += 1;
            bar_data8[1] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 7) {
            pie_row_data[7] += 5;
            if (pie_row_data[7] > 119) {
              pie_row_data[7] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[3] += 1;
            bar_data6[31] += 1;
            bar_data8[2] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 28) {
            pie_row_data[28] += 5;
            if (pie_row_data[28] > 119) {
              pie_row_data[28] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[3] += 1;
            bar_data6[32] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 12) {
            pie_row_data[12] += 5;
            if (pie_row_data[12] > 119) {
              pie_row_data[12] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[3] += 1;
            bar_data6[33] += 1;
            bar_data8[0] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 35) {
            pie_row_data[35] += 5;
            if (pie_row_data[35] > 119) {
              pie_row_data[35] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[3] += 1;
            bar_data6[34] += 1;
            bar_data8[1] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 3) {
            pie_row_data[3] += 5;
            if (pie_row_data[3] > 119) {
              pie_row_data[3] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[3] += 1;
            bar_data6[35] += 1;
            bar_data8[0] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 26) {
            pie_row_data[26] += 5;
            if (pie_row_data[26] > 119) {
              pie_row_data[26] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[3] += 1;
            bar_data6[36] += 1;
            bar_data8[1] += 1;
            zone_group_data[3] += 1;
          }
        }

        let last_num = filter_length - 1;
        let last_position = parseInt(this.state.filterNumber, 10) < btn_row.length ? btn_row[filter_length] : 0;
        for (let btn_index = last_num; btn_index >= 0; btn_index--) {
          btn_row_data.splice(0, 0, btn_row[btn_index]);
          if (btn_position[last_position] === btn_position[btn_row[btn_index]]) {
            bar_data7[0] += 1;
          } else {
            let btn_index1 = Math.abs(btn_position[btn_row[btn_index]] - btn_position[last_position]) - 1;
            if (btn_index1 >= 18) {
              btn_index1 = Math.abs(btn_index1 - 35);
            }
            bar_data7[btn_index1] += 1;
          }
          last_position = btn_row[btn_index];
        }

        last_num = btn_row.length - 1;
        last_position = 0;
        for (let btn_index2 = last_num; btn_index2 >= 0; btn_index2--) {
          if (btn_position[last_position] === btn_position[btn_row[btn_index2]]) {
            angle_row.splice(0, 0, angle_array[0]);
          } else {
            let btn_index3 = Math.abs(btn_position[btn_row[btn_index2]] - btn_position[last_position]) - 1;
            if (btn_index3 >= 18) {
              btn_index3 = Math.abs(btn_index3 - 35);
            }
            angle_row.splice(0, 0, angle_array[btn_index3]);
          }
          last_position = btn_row[btn_index2];
        }

      } else {
        let filter_length = parseInt(this.state.filterNumber, 10) < btn_row.length ? parseInt(this.state.filterNumber, 10) : btn_row.length;
        for (let index = 0; index < filter_length; index++) {
          pie_row_data[btn_row[index]] += 5;
          if (pie_row_data[btn_row[index]] > 119) {
            pie_row_data[btn_row[index]] = 119;
          }
        }
        for (let index1 = 0; index1 < btn_row.length; index1++) {
          // zone 1
          if (btn_row[index1] === 0) {
            zone_group_data[0] += 1;
            bar_data5[0] += 1;
            bar_data6[0] += 1;
          }

          if (btn_row[index1] === 32) {
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[0] += 1;
            bar_data6[1] += 1;
            bar_data8[1] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 15) {
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[0] += 1;
            bar_data6[2] += 1;
            bar_data8[0] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 19) {
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[0] += 1;
            bar_data6[3] += 1;
            bar_data8[2] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 4) {
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[0] += 1;
            bar_data6[4] += 1;
            bar_data8[2] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 21) {
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[0] += 1;
            bar_data6[5] += 1;
            bar_data8[0] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 2) {
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[0] += 1;
            bar_data6[6] += 1;
            bar_data8[1] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 25) {
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[0] += 1;
            bar_data7[6] += 1;
            bar_data8[2] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 17) {
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[0] += 1;
            bar_data6[8] += 1;
            bar_data8[1] += 1;
            zone_group_data[0] += 1;
          }
            
          // zone 2
          if (btn_row[index1] === 34) {
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[1] += 1;
            bar_data6[9] += 1;
            bar_data8[2] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 6) {
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[1] += 1;
            bar_data6[10] += 1;
            bar_data8[0] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 27) {
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[1] += 1;
            bar_data6[11] += 1;
            bar_data8[0] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 13) {
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[1] += 1;
            bar_data6[12] += 1;
            bar_data8[2] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 36) {
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[1] += 1;
            bar_data6[13] += 1;
            bar_data8[0] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 11) {
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[1] += 1;
            bar_data6[14] += 1;
            bar_data8[1] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 30) {
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[1] += 1;
            bar_data6[15] += 1;
            bar_data8[0] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 8) {
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[1] += 1;
            bar_data6[16] += 1;
            bar_data8[1] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 23) {
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[1] += 1;
            bar_data6[17] += 1;
            bar_data8[1] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 10) {
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[1] += 1;
            bar_data6[18] += 1;
            bar_data8[2] += 1;
            zone_group_data[1] += 1;
          }

          // zone 3
          if (btn_row[index1] === 5) {
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[2] += 1;
            bar_data6[19] += 1;
            bar_data8[1] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 24) {
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[2] += 1;
            bar_data6[20] += 1;
            bar_data8[0] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 16) {
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[2] += 1;
            bar_data6[21] += 1;
            bar_data8[2] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 33) {
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[2] += 1;
            bar_data6[22] += 1;
            bar_data8[0] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 1) {
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[2] += 1;
            bar_data6[23] += 1;
            bar_data8[2] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 20) {
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[2] += 1;
            bar_data6[24] += 1;
            bar_data8[1] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 14) {
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[2] += 1;
            bar_data6[25] += 1;
            bar_data8[1] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 31) {
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[2] += 1;
            bar_data6[26] += 1;
            bar_data8[2] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 9) {
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[2] += 1;
            bar_data6[27] += 1;
            bar_data8[0] += 1;
            zone_group_data[2] += 1;
          }

          // zone 4
          if (btn_row[index1] === 22) {
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[3] += 1;
            bar_data6[28] += 1;
            bar_data8[2] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 18) {
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[3] += 1;
            bar_data6[29] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 29) {
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[3] += 1;
            bar_data6[30] += 1;
            bar_data8[1] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 7) {
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[3] += 1;
            bar_data6[31] += 1;
            bar_data8[2] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 28) {
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[3] += 1;
            bar_data6[32] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 12) {
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[3] += 1;
            bar_data6[33] += 1;
            bar_data8[0] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 35) {
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[3] += 1;
            bar_data6[34] += 1;
            bar_data8[1] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 3) {
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[3] += 1;
            bar_data6[35] += 1;
            bar_data8[0] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 26) {
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[3] += 1;
            bar_data6[36] += 1;
            bar_data8[1] += 1;
            zone_group_data[3] += 1;
          }
        }
        
        let last_num = filter_length - 1;
        let last_position = parseInt(this.state.filterNumber, 10) < btn_row.length ? btn_row[filter_length] : 0;
        for (let btn_index = last_num; btn_index >= 0; btn_index--) {
          btn_row_data.splice(0, 0, btn_row[btn_index]);
          if (btn_position[last_position] === btn_position[btn_row[btn_index]]) {
            // bar_data7[0] += 1;
          } else {
            let btn_index1 = Math.abs(btn_position[btn_row[btn_index]] - btn_position[last_position]) - 1;
            if (btn_index1 >= 18) {
              btn_index1 = Math.abs(btn_index1 - 35);
            }
            // bar_data7[btn_index1] += 1;
          }
          last_position = btn_row[btn_index];
        }

        last_num = btn_row.length - 1;
        last_position = 0;
        for (let btn_index2 = last_num; btn_index2 >= 0; btn_index2--) {
          if (btn_position[last_position] === btn_position[btn_row[btn_index2]]) {
            bar_data7[0] += 1;
            angle_row.splice(0, 0, angle_array[0]);
          } else {
            let btn_index3 = Math.abs(btn_position[btn_row[btn_index2]] - btn_position[last_position]) - 1;
            if (btn_index3 >= 18) {
              btn_index3 = Math.abs(btn_index3 - 35);
            }
            bar_data7[btn_index3] += 1;
            angle_row.splice(0, 0, angle_array[btn_index3]);
          }
          last_position = btn_row[btn_index2];
        }
        
      }

      for (var pie_index = 0; pie_index < pie_row_data.length; pie_index++) {
        pie_row[pie_index] = pie_row_data[pie_index] * range1;
        if (pie_row[pie_index] > 119) {
          pie_row[pie_index] = 119;
        }
      }
      for (var zone_group_data_index = 0; zone_group_data_index < zone_group_data.length; zone_group_data_index++) {
        zone_group[zone_group_data_index] = zone_group_data[zone_group_data_index] * range2;
      }
      for (var data1_index = 0; data1_index < bar_data1.length; data1_index++) {
        data1.datasets[0].data[data1_index] = bar_data1[data1_index] * range2;
      }
      for (var data2_index = 0; data2_index < bar_data2.length; data2_index++) {
        data2.datasets[0].data[data2_index] = bar_data2[data2_index] * range2;
      }
      for (var data3_index = 0; data3_index < bar_data3.length; data3_index++) {
        data3.datasets[0].data[data3_index] = bar_data3[data3_index] * range2;
      }
      for (var data4_index = 0; data4_index < bar_data4.length; data4_index++) {
        data4.datasets[0].data[data4_index] = bar_data4[data4_index] * range2;
      }
      for (var data5_index = 0; data5_index < bar_data5.length; data5_index++) {
        data5.datasets[0].data[data5_index] = bar_data5[data5_index] * range2;
      }
      for (var data6_index = 0; data6_index < bar_data6.length; data6_index++) {
        data6.datasets[0].data[data6_index] = bar_data6[data6_index] * range2;
      }
      for (var data7_index = 0; data7_index < bar_data7.length; data7_index++) {
        data7.datasets[0].data[data7_index] = bar_data7[data7_index] * range2;
      }
      for (var data8_index = 0; data8_index < bar_data8.length; data8_index++) {
        data8.datasets[0].data[data8_index] = bar_data8[data8_index] * range2;
      }
      
      this.setState({
        btn_row: btn_row_data,
        btn_row_data: btn_row,
        last_position: btn_row_data[0],
        pie_row: pie_row,
        zone_group: zone_group,
        data1: data1,
        data2: data2,
        data3: data3,
        data4: data4,
        data5: data5,
        data6: data6,
        data7: data7,
        data8: data8,
        angle_row: angle_row,
        bar_status: true,
        type: ''
      })
      this.updatePieCanvas();
      this.updateRotateCanvas();
      this.updateLineCanvas();
    }

    let page_row = this.state.page_row;
    for (var page_index = 0; page_index < page_row.length; page_index++) {
      if (page_row[page_index]['active'] === 1) {
        let data = {};
        data['dev'] = 0;
        data['page_id'] = page_row[page_index]['id'];
        data['times'] = [this.state.minutes, this.state.seconds];
        data['btn_row'] = this.state.btn_row_data;
        data['pie_row'] = this.state.pie_row_data;
        data['zone_group'] = this.state.zone_group_data;
        data['bar_data1'] = this.state.bar_data1;
        data['bar_data2'] = this.state.bar_data2;
        data['bar_data3'] = this.state.bar_data3;
        data['bar_data4'] = this.state.bar_data4;
        data['bar_data5'] = this.state.bar_data5;
        data['bar_data6'] = this.state.bar_data6;
        data['bar_data7'] = this.state.bar_data7;
        data['bar_data8'] = this.state.bar_data8;

        PageService.save_page(data).then(function(res) {
          if (res.data.success) {
            // console.log('success');
          } else {
            console.log('fail');
          }
        })
      }
    }
  }

  newPage = () => {
    let self = this;
    let userinfo = window.localStorage.getItem('userinfo');
    userinfo = JSON.parse(userinfo);
    let user_id = userinfo['id'];
    this.getCurrentDate();
    this.setState({
      isPageRowModalOpen: false,
      type: ''
    })
    PageService.new_page(user_id).then(function(res) {
      if (res.data.success) {
        // console.log('success');
        
        let page_row = self.state.page_row;
        let stack = {};
        stack['id'] = res.data.pageinfo['id'];
        stack['casino_name'] = res.data.pageinfo['casino_name'];
        stack['dealer_name'] = res.data.pageinfo['dealer_name'];
        stack['filter_status'] = false;
        stack['filter_num'] = 1;
        stack['active'] = 1;

        if (page_row.length) {
          for (var index = 0; index < page_row.length; index++) {
            if (page_row[index]['active'] === 1) {
              page_row[index]['active'] = 0;
              let data = {};
              data['dev'] = 0;
              data['page_id'] = page_row[index]['id'];
              data['times'] = [self.state.minutes, self.state.seconds];
              data['btn_row'] = self.state.btn_row_data;
              data['pie_row'] = self.state.pie_row_data;
              data['zone_group'] = self.state.zone_group_data;
              data['bar_data1'] = self.state.bar_data1;
              data['bar_data2'] = self.state.bar_data2;
              data['bar_data3'] = self.state.bar_data3;
              data['bar_data4'] = self.state.bar_data4;
              data['bar_data5'] = self.state.bar_data5;
              data['bar_data6'] = self.state.bar_data6;
              data['bar_data7'] = self.state.bar_data7;
              data['bar_data8'] = self.state.bar_data8;

              PageService.save_page(data).then(function(res) {
                if (res.data.success) {
                  // console.log('success');

                  page_row.splice(0, 0, stack);
                  self.setState({
                    page_row: page_row,
                    type: ''
                  })
                  window.localStorage.setItem('page_row', JSON.stringify(page_row));
                  self.reset_state();
                  self.updatePieCanvas();
                  self.updateRotateCanvas();
                  self.updateLineCanvas();
                  self.refresh_pages();

                  let send_data = {};
                  send_data['dev'] = 0;
                  send_data['page_id'] = stack['id'];
                  send_data['times'] = [self.state.minutes, self.state.seconds];
                  send_data['btn_row'] = self.state.btn_row_data;
                  send_data['pie_row'] = self.state.pie_row_data;
                  send_data['zone_group'] = self.state.zone_group_data;
                  send_data['bar_data1'] = self.state.bar_data1;
                  send_data['bar_data2'] = self.state.bar_data2;
                  send_data['bar_data3'] = self.state.bar_data3;
                  send_data['bar_data4'] = self.state.bar_data4;
                  send_data['bar_data5'] = self.state.bar_data5;
                  send_data['bar_data6'] = self.state.bar_data6;
                  send_data['bar_data7'] = self.state.bar_data7;
                  send_data['bar_data8'] = self.state.bar_data8;
                  PageService.save_page(send_data).then(function(res) {
                    if (res.data.success) {
                      // console.log('success');
                    } else {
                      console.log('fail');
                    }
                  })
                } else {
                  console.log('fail');
                }
              })
            }
          }
        } else {
          page_row.push(stack);
          self.setState({
            page_row: page_row,
            type: ''
          })
          window.localStorage.setItem('page_row', JSON.stringify(page_row));
          self.reset_state();
          self.updatePieCanvas();
          self.updateRotateCanvas();
          self.updateLineCanvas();
          self.refresh_pages();

          let send_data = {};
          send_data['dev'] = 0;
          send_data['page_id'] = stack['id'];
          send_data['times'] = [self.state.minutes, self.state.seconds];
          send_data['btn_row'] = self.state.btn_row_data;
          send_data['pie_row'] = self.state.pie_row_data;
          send_data['zone_group'] = self.state.zone_group_data;
          send_data['bar_data1'] = self.state.bar_data1;
          send_data['bar_data2'] = self.state.bar_data2;
          send_data['bar_data3'] = self.state.bar_data3;
          send_data['bar_data4'] = self.state.bar_data4;
          send_data['bar_data5'] = self.state.bar_data5;
          send_data['bar_data6'] = self.state.bar_data6;
          send_data['bar_data7'] = self.state.bar_data7;
          send_data['bar_data8'] = self.state.bar_data8;
          PageService.save_page(send_data).then(function(res) {
            if (res.data.success) {
              // console.log('success');
            } else {
              console.log('fail');
            }
          })
        }
        self.setState({
          page_status: true,
          type: ''
        });
      } else {
        console.log('fail');
      }
    })
  }

  activePage = (index) => {
    let self = this;
    let page_row = this.state.page_row;
    if (page_row.length > 1) {
      for (var index1 = 0; index1 < page_row.length; index1++) {
        if (page_row[index1]['active'] === 1) {
          page_row[index1]['active'] = 0;
          let data = {};
          data['dev'] = 0;
          data['page_id'] = page_row[index1]['id'];
          data['times'] = [this.state.minutes, this.state.seconds];
          data['btn_row'] = this.state.btn_row_data;
          data['pie_row'] = this.state.pie_row_data;
          data['zone_group'] = this.state.zone_group_data;
          data['bar_data1'] = this.state.bar_data1;
          data['bar_data2'] = this.state.bar_data2;
          data['bar_data3'] = this.state.bar_data3;
          data['bar_data4'] = this.state.bar_data4;
          data['bar_data5'] = this.state.bar_data5;
          data['bar_data6'] = this.state.bar_data6;
          data['bar_data7'] = this.state.bar_data7;
          data['bar_data8'] = this.state.bar_data8;

          PageService.save_page(data).then(function(res) {
            if (res.data.success) {
              // console.log('success');
              page_row[index]['active'] = 1;
              let send_data = {};
              send_data['page_id'] = page_row[index]['id'];
              PageService.get_page(send_data).then(function(res) {
                if (res.data.success) {
                  // console.log('success');
                  let rating = parseInt(res.data.historyinfo.rating, 10);
                  let times = JSON.parse(res.data.historyinfo.times);
                  let minutes = times[0];
                  let seconds = times[1];
                  let range1 = parseInt(self.state.range_1, 10);
                  let range2 = parseInt(self.state.range_2, 10);
                  let btn_row = JSON.parse(res.data.historyinfo.btn_row);
                  let btn_row_data = JSON.parse(res.data.historyinfo.btn_row);
                  let pie_row_data = JSON.parse(res.data.historyinfo.pie_row);
                  let zone_group_data = JSON.parse(res.data.historyinfo.zone_group);
                  let bar_data1 = JSON.parse(res.data.historyinfo.bar_data1);
                  let bar_data2 = JSON.parse(res.data.historyinfo.bar_data2);
                  let bar_data3 = JSON.parse(res.data.historyinfo.bar_data3);
                  let bar_data4 = JSON.parse(res.data.historyinfo.bar_data4);
                  let bar_data5 = JSON.parse(res.data.historyinfo.bar_data5);
                  let bar_data6 = JSON.parse(res.data.historyinfo.bar_data6);
                  let bar_data7 = JSON.parse(res.data.historyinfo.bar_data7);
                  let bar_data8 = JSON.parse(res.data.historyinfo.bar_data8);
                  let pie_row = self.state.pie_row;
                  let zone_group = self.state.zone_group;
                  let data1 = self.state.data1;
                  let data2 = self.state.data2;
                  let data3 = self.state.data3;
                  let data4 = self.state.data4;
                  let data5 = self.state.data5;
                  let data6 = self.state.data6;
                  let data7 = self.state.data7;
                  let data8 = self.state.data8;
                  let angle_row = [];

                  if (page_row[index]['filter_status']) {
                    btn_row_data = [];
                    bar_data1 = [0, 0];
                    bar_data2 = [0, 0];
                    bar_data3 = [0, 0];
                    bar_data4 = [0, 0, 0];
                    bar_data5 = [0, 0, 0, 0];
                    bar_data6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                    bar_data7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                    bar_data8 = [0, 0, 0];
                    pie_row_data = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                    zone_group_data = [0, 0, 0, 0];
                    
                    if (btn_row.length) {
                      let filter_length = parseInt(page_row[index]['filter_num'], 10) < btn_row.length ? parseInt(page_row[index]['filter_num'], 10) : btn_row.length;
                      for (var index2 = 0; index2 < filter_length; index2++) {
                        // zone 1
                        if (btn_row[index2] === 0) {
                          pie_row_data[0] += 5;
                          if (pie_row_data[0] > 119) {
                            pie_row_data[0] = 119;
                          }
                          zone_group_data[0] += 1;
                          bar_data5[0] += 1;
                          bar_data6[0] += 1;
                        }

                        if (btn_row[index2] === 32) {
                          pie_row_data[32] += 5;
                          if (pie_row_data[32] > 119) {
                            pie_row_data[32] = 119;
                          }
                          bar_data1[0] += 1;
                          bar_data2[0] += 1;
                          bar_data3[1] += 1;
                          bar_data4[2] += 1;
                          bar_data5[0] += 1;
                          bar_data6[1] += 1;
                          bar_data8[1] += 1;
                          zone_group_data[0] += 1;
                        }

                        if (btn_row[index2] === 15) {
                          pie_row_data[15] += 5;
                          if (pie_row_data[15] > 119) {
                            pie_row_data[15] = 119;
                          }
                          bar_data1[1] += 1;
                          bar_data2[1] += 1;
                          bar_data3[0] += 1;
                          bar_data4[1] += 1;
                          bar_data5[0] += 1;
                          bar_data6[2] += 1;
                          bar_data8[0] += 1;
                          zone_group_data[0] += 1;
                        }

                        if (btn_row[index2] === 19) {
                          pie_row_data[19] += 5;
                          if (pie_row_data[19] > 119) {
                            pie_row_data[19] = 119;
                          }
                          bar_data1[0] += 1;
                          bar_data2[1] += 1;
                          bar_data3[1] += 1;
                          bar_data4[1] += 1;
                          bar_data5[0] += 1;
                          bar_data6[3] += 1;
                          bar_data8[2] += 1;
                          zone_group_data[0] += 1;
                        }

                        if (btn_row[index2] === 4) {
                          pie_row_data[4] += 5;
                          if (pie_row_data[4] > 119) {
                            pie_row_data[4] = 119;
                          }
                          bar_data1[1] += 1;
                          bar_data2[0] += 1;
                          bar_data3[0] += 1;
                          bar_data4[0] += 1;
                          bar_data5[0] += 1;
                          bar_data6[4] += 1;
                          bar_data8[2] += 1;
                          zone_group_data[0] += 1;
                        }

                        if (btn_row[index2] === 21) {
                          pie_row_data[21] += 5;
                          if (pie_row_data[21] > 119) {
                            pie_row_data[21] = 119;
                          }
                          bar_data1[0] += 1;
                          bar_data2[1] += 1;
                          bar_data3[1] += 1;
                          bar_data4[1] += 1;
                          bar_data5[0] += 1;
                          bar_data6[5] += 1;
                          bar_data8[0] += 1;
                          zone_group_data[0] += 1;
                        }

                        if (btn_row[index2] === 2) {
                          pie_row_data[2] += 5;
                          if (pie_row_data[2] > 119) {
                            pie_row_data[2] = 119;
                          }
                          bar_data1[1] += 1;
                          bar_data2[0] += 1;
                          bar_data3[0] += 1;
                          bar_data4[0] += 1;
                          bar_data5[0] += 1;
                          bar_data6[6] += 1;
                          bar_data8[1] += 1;
                          zone_group_data[0] += 1;
                        }

                        if (btn_row[index2] === 25) {
                          pie_row_data[25] += 5;
                          if (pie_row_data[25] > 119) {
                            pie_row_data[25] = 119;
                          }
                          bar_data1[0] += 1;
                          bar_data2[1] += 1;
                          bar_data3[1] += 1;
                          bar_data4[2] += 1;
                          bar_data5[0] += 1;
                          bar_data7[6] += 1;
                          bar_data8[2] += 1;
                          zone_group_data[0] += 1;
                        }

                        if (btn_row[index2] === 17) {
                          pie_row_data[17] += 5;
                          if (pie_row_data[17] > 119) {
                            pie_row_data[17] = 119;
                          }
                          bar_data1[1] += 1;
                          bar_data2[1] += 1;
                          bar_data3[0] += 1;
                          bar_data4[1] += 1;
                          bar_data5[0] += 1;
                          bar_data6[8] += 1;
                          bar_data8[1] += 1;
                          zone_group_data[0] += 1;
                        }
                          
                        // zone 2
                        if (btn_row[index2] === 34) {
                          pie_row_data[34] += 5;
                          if (pie_row_data[34] > 119) {
                            pie_row_data[34] = 119;
                          }
                          bar_data1[0] += 1;
                          bar_data2[0] += 1;
                          bar_data3[1] += 1;
                          bar_data4[2] += 1;
                          bar_data5[1] += 1;
                          bar_data6[9] += 1;
                          bar_data8[2] += 1;
                          zone_group_data[1] += 1;
                        }

                        if (btn_row[index2] === 6) {
                          pie_row_data[6] += 5;
                          if (pie_row_data[6] > 119) {
                            pie_row_data[6] = 119;
                          }
                          bar_data1[1] += 1;
                          bar_data2[0] += 1;
                          bar_data3[0] += 1;
                          bar_data4[0] += 1;
                          bar_data5[1] += 1;
                          bar_data6[10] += 1;
                          bar_data8[0] += 1;
                          zone_group_data[1] += 1;
                        }

                        if (btn_row[index2] === 27) {
                          pie_row_data[27] += 5;
                          if (pie_row_data[27] > 119) {
                            pie_row_data[27] = 119;
                          }
                          bar_data1[0] += 1;
                          bar_data2[1] += 1;
                          bar_data3[1] += 1;
                          bar_data4[2] += 1;
                          bar_data5[1] += 1;
                          bar_data6[11] += 1;
                          bar_data8[0] += 1;
                          zone_group_data[1] += 1;
                        }

                        if (btn_row[index2] === 13) {
                          pie_row_data[13] += 5;
                          if (pie_row_data[13] > 119) {
                            pie_row_data[13] = 119;
                          }
                          bar_data1[1] += 1;
                          bar_data2[1] += 1;
                          bar_data3[0] += 1;
                          bar_data4[1] += 1;
                          bar_data5[1] += 1;
                          bar_data6[12] += 1;
                          bar_data8[2] += 1;
                          zone_group_data[1] += 1;
                        }

                        if (btn_row[index2] === 36) {
                          pie_row_data[36] += 5;
                          if (pie_row_data[36] > 119) {
                            pie_row_data[36] = 119;
                          }
                          bar_data1[0] += 1;
                          bar_data2[0] += 1;
                          bar_data3[1] += 1;
                          bar_data4[2] += 1;
                          bar_data5[1] += 1;
                          bar_data6[13] += 1;
                          bar_data8[0] += 1;
                          zone_group_data[1] += 1;
                        }

                        if (btn_row[index2] === 11) {
                          pie_row_data[11] += 5;
                          if (pie_row_data[11] > 119) {
                            pie_row_data[11] = 119;
                          }
                          bar_data1[1] += 1;
                          bar_data2[1] += 1;
                          bar_data3[0] += 1;
                          bar_data4[0] += 1;
                          bar_data5[1] += 1;
                          bar_data6[14] += 1;
                          bar_data8[1] += 1;
                          zone_group_data[1] += 1;
                        }

                        if (btn_row[index2] === 30) {
                          pie_row_data[30] += 5;
                          if (pie_row_data[30] > 119) {
                            pie_row_data[30] = 119;
                          }
                          bar_data1[0] += 1;
                          bar_data2[0] += 1;
                          bar_data3[1] += 1;
                          bar_data4[2] += 1;
                          bar_data5[1] += 1;
                          bar_data6[15] += 1;
                          bar_data8[0] += 1;
                          zone_group_data[1] += 1;
                        }

                        if (btn_row[index2] === 8) {
                          pie_row_data[8] += 5;
                          if (pie_row_data[8] > 119) {
                            pie_row_data[8] = 119;
                          }
                          bar_data1[1] += 1;
                          bar_data2[0] += 1;
                          bar_data3[0] += 1;
                          bar_data4[0] += 1;
                          bar_data5[1] += 1;
                          bar_data6[16] += 1;
                          bar_data8[1] += 1;
                          zone_group_data[1] += 1;
                        }

                        if (btn_row[index2] === 23) {
                          pie_row_data[23] += 5;
                          if (pie_row_data[23] > 119) {
                            pie_row_data[23] = 119;
                          }
                          bar_data1[0] += 1;
                          bar_data2[1] += 1;
                          bar_data3[1] += 1;
                          bar_data4[1] += 1;
                          bar_data5[1] += 1;
                          bar_data6[17] += 1;
                          bar_data8[1] += 1;
                          zone_group_data[1] += 1;
                        }

                        if (btn_row[index2] === 10) {
                          pie_row_data[10] += 5;
                          if (pie_row_data[10] > 119) {
                            pie_row_data[10] = 119;
                          }
                          bar_data1[1] += 1;
                          bar_data2[0] += 1;
                          bar_data3[0] += 1;
                          bar_data4[0] += 1;
                          bar_data5[1] += 1;
                          bar_data6[18] += 1;
                          bar_data8[2] += 1;
                          zone_group_data[1] += 1;
                        }

                        // zone 3
                        if (btn_row[index2] === 5) {
                          pie_row_data[5] += 5;
                          if (pie_row_data[5] > 119) {
                            pie_row_data[5] = 119;
                          }
                          bar_data1[0] += 1;
                          bar_data2[1] += 1;
                          bar_data3[0] += 1;
                          bar_data4[0] += 1;
                          bar_data5[2] += 1;
                          bar_data6[19] += 1;
                          bar_data8[1] += 1;
                          zone_group_data[2] += 1;
                        }

                        if (btn_row[index2] === 24) {
                          pie_row_data[24] += 5;
                          if (pie_row_data[24] > 119) {
                            pie_row_data[24] = 119;
                          }
                          bar_data1[1] += 1;
                          bar_data2[0] += 1;
                          bar_data3[1] += 1;
                          bar_data4[1] += 1;
                          bar_data5[2] += 1;
                          bar_data6[20] += 1;
                          bar_data8[0] += 1;
                          zone_group_data[2] += 1;
                        }

                        if (btn_row[index2] === 16) {
                          pie_row_data[16] += 5;
                          if (pie_row_data[16] > 119) {
                            pie_row_data[16] = 119;
                          }
                          bar_data1[0] += 1;
                          bar_data2[0] += 1;
                          bar_data3[0] += 1;
                          bar_data4[1] += 1;
                          bar_data5[2] += 1;
                          bar_data6[21] += 1;
                          bar_data8[2] += 1;
                          zone_group_data[2] += 1;
                        }

                        if (btn_row[index2] === 33) {
                          pie_row_data[33] += 5;
                          if (pie_row_data[33] > 119) {
                            pie_row_data[33] = 119;
                          }
                          bar_data1[1] += 1;
                          bar_data2[1] += 1;
                          bar_data3[1] += 1;
                          bar_data4[2] += 1;
                          bar_data5[2] += 1;
                          bar_data6[22] += 1;
                          bar_data8[0] += 1;
                          zone_group_data[2] += 1;
                        }

                        if (btn_row[index2] === 1) {
                          pie_row_data[1] += 5;
                          if (pie_row_data[1] > 119) {
                            pie_row_data[1] = 119;
                          }
                          bar_data1[0] += 1;
                          bar_data2[1] += 1;
                          bar_data3[0] += 1;
                          bar_data4[0] += 1;
                          bar_data5[2] += 1;
                          bar_data6[23] += 1;
                          bar_data8[2] += 1;
                          zone_group_data[2] += 1;
                        }

                        if (btn_row[index2] === 20) {
                          pie_row_data[20] += 5;
                          if (pie_row_data[20] > 119) {
                            pie_row_data[20] = 119;
                          }
                          bar_data1[1] += 1;
                          bar_data2[0] += 1;
                          bar_data3[1] += 1;
                          bar_data4[1] += 1;
                          bar_data5[2] += 1;
                          bar_data6[24] += 1;
                          bar_data8[1] += 1;
                          zone_group_data[2] += 1;
                        }

                        if (btn_row[index2] === 14) {
                          pie_row_data[14] += 5;
                          if (pie_row_data[14] > 119) {
                            pie_row_data[14] = 119;
                          }
                          bar_data1[0] += 1;
                          bar_data2[0] += 1;
                          bar_data3[0] += 1;
                          bar_data4[1] += 1;
                          bar_data5[2] += 1;
                          bar_data6[25] += 1;
                          bar_data8[1] += 1;
                          zone_group_data[2] += 1;
                        }

                        if (btn_row[index2] === 31) {
                          pie_row_data[31] += 5;
                          if (pie_row_data[31] > 119) {
                            pie_row_data[31] = 119;
                          }
                          bar_data1[1] += 1;
                          bar_data2[1] += 1;
                          bar_data3[1] += 1;
                          bar_data4[2] += 1;
                          bar_data5[2] += 1;
                          bar_data6[26] += 1;
                          bar_data8[2] += 1;
                          zone_group_data[2] += 1;
                        }

                        if (btn_row[index2] === 9) {
                          pie_row_data[9] += 5;
                          if (pie_row_data[9] > 119) {
                            pie_row_data[9] = 119;
                          }
                          bar_data1[0] += 1;
                          bar_data2[1] += 1;
                          bar_data3[0] += 1;
                          bar_data4[0] += 1;
                          bar_data5[2] += 1;
                          bar_data6[27] += 1;
                          bar_data8[0] += 1;
                          zone_group_data[2] += 1;
                        }

                        // zone 4
                        if (btn_row[index2] === 22) {
                          pie_row_data[22] += 5;
                          if (pie_row_data[22] > 119) {
                            pie_row_data[22] = 119;
                          }
                          bar_data1[1] += 1;
                          bar_data2[0] += 1;
                          bar_data3[1] += 1;
                          bar_data4[1] += 1;
                          bar_data5[3] += 1;
                          bar_data6[28] += 1;
                          bar_data8[2] += 1;
                          zone_group_data[3] += 1;
                        }

                        if (btn_row[index2] === 18) {
                          pie_row_data[18] += 5;
                          if (pie_row_data[18] > 119) {
                            pie_row_data[18] = 119;
                          }
                          bar_data1[0] += 1;
                          bar_data2[0] += 1;
                          bar_data3[0] += 1;
                          bar_data4[1] += 1;
                          bar_data5[3] += 1;
                          bar_data6[29] += 1;
                          zone_group_data[3] += 1;
                        }

                        if (btn_row[index2] === 29) {
                          pie_row_data[29] += 5;
                          if (pie_row_data[29] > 119) {
                            pie_row_data[29] = 119;
                          }
                          bar_data1[1] += 1;
                          bar_data2[1] += 1;
                          bar_data3[1] += 1;
                          bar_data4[2] += 1;
                          bar_data5[3] += 1;
                          bar_data6[30] += 1;
                          bar_data8[1] += 1;
                          zone_group_data[3] += 1;
                        }

                        if (btn_row[index2] === 7) {
                          pie_row_data[7] += 5;
                          if (pie_row_data[7] > 119) {
                            pie_row_data[7] = 119;
                          }
                          bar_data1[0] += 1;
                          bar_data2[1] += 1;
                          bar_data3[0] += 1;
                          bar_data4[0] += 1;
                          bar_data5[3] += 1;
                          bar_data6[31] += 1;
                          bar_data8[2] += 1;
                          zone_group_data[3] += 1;
                        }

                        if (btn_row[index2] === 28) {
                          pie_row_data[28] += 5;
                          if (pie_row_data[28] > 119) {
                            pie_row_data[28] = 119;
                          }
                          bar_data1[1] += 1;
                          bar_data2[0] += 1;
                          bar_data3[1] += 1;
                          bar_data4[2] += 1;
                          bar_data5[3] += 1;
                          bar_data6[32] += 1;
                          zone_group_data[3] += 1;
                        }

                        if (btn_row[index2] === 12) {
                          pie_row_data[12] += 5;
                          if (pie_row_data[12] > 119) {
                            pie_row_data[12] = 119;
                          }
                          bar_data1[0] += 1;
                          bar_data2[0] += 1;
                          bar_data3[0] += 1;
                          bar_data4[0] += 1;
                          bar_data5[3] += 1;
                          bar_data6[33] += 1;
                          bar_data8[0] += 1;
                          zone_group_data[3] += 1;
                        }

                        if (btn_row[index2] === 35) {
                          pie_row_data[35] += 5;
                          if (pie_row_data[35] > 119) {
                            pie_row_data[35] = 119;
                          }
                          bar_data1[1] += 1;
                          bar_data2[1] += 1;
                          bar_data3[1] += 1;
                          bar_data4[2] += 1;
                          bar_data5[3] += 1;
                          bar_data6[34] += 1;
                          bar_data8[1] += 1;
                          zone_group_data[3] += 1;
                        }

                        if (btn_row[index2] === 3) {
                          pie_row_data[3] += 5;
                          if (pie_row_data[3] > 119) {
                            pie_row_data[3] = 119;
                          }
                          bar_data1[0] += 1;
                          bar_data2[1] += 1;
                          bar_data3[0] += 1;
                          bar_data4[0] += 1;
                          bar_data5[3] += 1;
                          bar_data6[35] += 1;
                          bar_data8[0] += 1;
                          zone_group_data[3] += 1;
                        }

                        if (btn_row[index2] === 26) {
                          pie_row_data[26] += 5;
                          if (pie_row_data[26] > 119) {
                            pie_row_data[26] = 119;
                          }
                          bar_data1[1] += 1;
                          bar_data2[0] += 1;
                          bar_data3[1] += 1;
                          bar_data4[2] += 1;
                          bar_data5[3] += 1;
                          bar_data6[36] += 1;
                          bar_data8[1] += 1;
                          zone_group_data[3] += 1;
                        }
                      }

                      let last_num = filter_length - 1;
                      let last_position = parseInt(page_row[index]['filter_num'], 10) < btn_row.length ? btn_row[filter_length] : 0;
                      for (let btn_index = last_num; btn_index >= 0; btn_index--) {
                        btn_row_data.splice(0, 0, btn_row[btn_index]);
                        if (btn_position[last_position] === btn_position[btn_row[btn_index]]) {
                          bar_data7[0] += 1;
                        } else {
                          let btn_index1 = Math.abs(btn_position[btn_row[btn_index]] - btn_position[last_position]) - 1;
                          if (btn_index1 >= 18) {
                            btn_index1 = Math.abs(btn_index1 - 35);
                          }
                          bar_data7[btn_index1] += 1;
                        }
                        last_position = btn_row[btn_index];
                      }
                    }
                  }
                  if (btn_row.length) {
                    let last_num = btn_row.length - 1;
                    let last_position = 0;
                    for (let btn_index2 = last_num; btn_index2 >= 0; btn_index2--) {
                      if (btn_position[last_position] === btn_position[btn_row[btn_index2]]) {
                        angle_row.splice(0, 0, angle_array[0]);
                      } else {
                        let btn_index3 = Math.abs(btn_position[btn_row[btn_index2]] - btn_position[last_position]) - 1;
                        if (btn_index3 >= 18) {
                          btn_index3 = Math.abs(btn_index3 - 35);
                        }
                        angle_row.splice(0, 0, angle_array[btn_index3]);
                      }
                      last_position = btn_row[btn_index2];
                    }
                  }
                  for (var pie_index = 0; pie_index < pie_row_data.length; pie_index++) {
                    pie_row[pie_index] = pie_row_data[pie_index] * range1;
                    if (pie_row[pie_index] > 119) {
                      pie_row[pie_index] = 119;
                    }
                  }
                  for (var zone_group_data_index = 0; zone_group_data_index < zone_group_data.length; zone_group_data_index++) {
                    zone_group[zone_group_data_index] = zone_group_data[zone_group_data_index] * range2;
                  }
                  for (var data1_index = 0; data1_index < bar_data1.length; data1_index++) {
                    data1.datasets[0].data[data1_index] = bar_data1[data1_index] * range2;
                  }
                  for (var data2_index = 0; data2_index < bar_data2.length; data2_index++) {
                    data2.datasets[0].data[data2_index] = bar_data2[data2_index] * range2;
                  }
                  for (var data3_index = 0; data3_index < bar_data3.length; data3_index++) {
                    data3.datasets[0].data[data3_index] = bar_data3[data3_index] * range2;
                  }
                  for (var data4_index = 0; data4_index < bar_data4.length; data4_index++) {
                    data4.datasets[0].data[data4_index] = bar_data4[data4_index] * range2;
                  }
                  for (var data5_index = 0; data5_index < bar_data5.length; data5_index++) {
                    data5.datasets[0].data[data5_index] = bar_data5[data5_index] * range2;
                  }
                  for (var data6_index = 0; data6_index < bar_data6.length; data6_index++) {
                    data6.datasets[0].data[data6_index] = bar_data6[data6_index] * range2;
                  }
                  for (var data7_index = 0; data7_index < bar_data7.length; data7_index++) {
                    data7.datasets[0].data[data7_index] = bar_data7[data7_index] * range2;
                  }
                  for (var data8_index = 0; data8_index < bar_data8.length; data8_index++) {
                    data8.datasets[0].data[data8_index] = bar_data8[data8_index] * range2;
                  }

                  self.setState({
                    page_row: page_row,
                    type: ''
                  })
                  window.localStorage.setItem('page_row', JSON.stringify(page_row));

                  self.setState({
                    running: false,
                    is_setTime: false,
                    isFilter: page_row[index]['filter_status'],
                    filterNumber: page_row[index]['filter_num'],
                    isCheckedAllData: false,
                    rating: rating,
                    minutes: minutes,
                    seconds: seconds,
                    btn_row: btn_row_data,
                    btn_row_data: btn_row,
                    pie_row: pie_row,
                    pie_row_data: pie_row_data,
                    zone_group: zone_group,
                    zone_group_data: zone_group_data,
                    data1: data1,
                    bar_data1: bar_data1,
                    data2: data2,
                    bar_data2: bar_data2,
                    data3: data3,
                    bar_data3: bar_data3,
                    data4: data4,
                    bar_data4: bar_data4,
                    data5: data5,
                    bar_data5: bar_data5,
                    data6: data6,
                    bar_data6: bar_data6,
                    data7: data7,
                    bar_data7: bar_data7,
                    data8: data8,
                    bar_data8: bar_data8,
                    angle_row: angle_row,
                    bar_status: true,
                    cSelected: [],
                    cSelected_status: false,
                    undo_status: false,
                    type: ''
                  })
                  if (btn_row_data.length) {
                    self.setState({
                      last_position: btn_row_data[0],
                      type: ''
                    })
                  } else {
                    self.setState({
                      last_position: 0,
                      type: ''
                    })
                  }
                  if (res.data.historyinfo.dealer_avatar) {
                    self.setState({
                      isDealerAvatar: true,
                      dealer_avatar: APIUrl + res.data.historyinfo.dealer_avatar,
                      type: ''
                    })
                  } else {
                    self.setState({
                      isDealerAvatar: false,
                      dealer_avatar: ''
                    })
                  }
                  self.updatePieCanvas();
                  self.updateRotateCanvas();
                  self.updateLineCanvas();
                  
                } else {
                  console.log('fail');
                }
              })
            } else {
              console.log('fail');
            }
          })
        }
      }
    } else {
      this.setState({
        page_row: page_row,
        type: ''
      })
      window.localStorage.setItem('page_row', JSON.stringify(page_row));
    }
  }

  closePage = (index) => {
    let self = this;
    let page_row = this.state.page_row;
    if (page_row[index]['active'] === 0) {
      page_row.splice(index, 1);
      this.setState({
        page_row: page_row,
        type: ''
      });
      window.localStorage.setItem('page_row', JSON.stringify(page_row));
    } else {

      let data = {};
      data['dev'] = 0;
      data['page_id'] = page_row[index]['id'];
      data['times'] = [this.state.minutes, this.state.seconds];
      data['btn_row'] = this.state.btn_row_data;
      data['pie_row'] = this.state.pie_row_data;
      data['zone_group'] = this.state.zone_group_data;
      data['bar_data1'] = this.state.bar_data1;
      data['bar_data2'] = this.state.bar_data2;
      data['bar_data3'] = this.state.bar_data3;
      data['bar_data4'] = this.state.bar_data4;
      data['bar_data5'] = this.state.bar_data5;
      data['bar_data6'] = this.state.bar_data6;
      data['bar_data7'] = this.state.bar_data7;
      data['bar_data8'] = this.state.bar_data8;

      PageService.save_page(data).then(function(res) {
        if (res.data.success) {
          // console.log('success');

          page_row.splice(index, 1);
          if(page_row.length > 0) {
            
            page_row[page_row.length - 1]['active'] = 1;
            let send_data = {};
            send_data['page_id'] = page_row[page_row.length - 1]['id'];
            PageService.get_page(send_data).then(function(res) {
              if (res.data.success) {
                // console.log('success');
                let rating = parseInt(res.data.historyinfo.rating, 10);
                let times = JSON.parse(res.data.historyinfo.times);
                let minutes = times[0];
                let seconds = times[1];
                let range1 = parseInt(self.state.range_1, 10);
                let range2 = parseInt(self.state.range_2, 10);
                let btn_row = JSON.parse(res.data.historyinfo.btn_row);
                let btn_row_data = JSON.parse(res.data.historyinfo.btn_row);
                let pie_row_data = JSON.parse(res.data.historyinfo.pie_row);
                let zone_group_data = JSON.parse(res.data.historyinfo.zone_group);
                let bar_data1 = JSON.parse(res.data.historyinfo.bar_data1);
                let bar_data2 = JSON.parse(res.data.historyinfo.bar_data2);
                let bar_data3 = JSON.parse(res.data.historyinfo.bar_data3);
                let bar_data4 = JSON.parse(res.data.historyinfo.bar_data4);
                let bar_data5 = JSON.parse(res.data.historyinfo.bar_data5);
                let bar_data6 = JSON.parse(res.data.historyinfo.bar_data6);
                let bar_data7 = JSON.parse(res.data.historyinfo.bar_data7);
                let bar_data8 = JSON.parse(res.data.historyinfo.bar_data8);
                let pie_row = self.state.pie_row;
                let zone_group = self.state.zone_group;
                let data1 = self.state.data1;
                let data2 = self.state.data2;
                let data3 = self.state.data3;
                let data4 = self.state.data4;
                let data5 = self.state.data5;
                let data6 = self.state.data6;
                let data7 = self.state.data7;
                let data8 = self.state.data8;
                let angle_row = [];

                if (page_row[page_row.length - 1]['filter_status']) {
                  btn_row_data = [];
                  bar_data1 = [0, 0];
                  bar_data2 = [0, 0];
                  bar_data3 = [0, 0];
                  bar_data4 = [0, 0, 0];
                  bar_data5 = [0, 0, 0, 0];
                  bar_data6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                  bar_data7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                  bar_data8 = [0, 0, 0];
                  pie_row_data = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                  zone_group_data = [0, 0, 0, 0];

                  if (btn_row.length) {
                    let filter_length = parseInt(page_row[page_row.length - 1]['filter_num'], 10) < btn_row.length ? parseInt(page_row[page_row.length - 1]['filter_num'], 10) : btn_row.length;
                    for (var index2 = 0; index2 < filter_length; index2++) {
                      // zone 1
                      if (btn_row[index2] === 0) {
                        pie_row_data[0] += 5;
                        if (pie_row_data[0] > 119) {
                          pie_row_data[0] = 119;
                        }
                        zone_group_data[0] += 1;
                        bar_data5[0] += 1;
                        bar_data6[0] += 1;
                      }

                      if (btn_row[index2] === 32) {
                        pie_row_data[32] += 5;
                        if (pie_row_data[32] > 119) {
                          pie_row_data[32] = 119;
                        }
                        bar_data1[0] += 1;
                        bar_data2[0] += 1;
                        bar_data3[1] += 1;
                        bar_data4[2] += 1;
                        bar_data5[0] += 1;
                        bar_data6[1] += 1;
                        bar_data8[1] += 1;
                        zone_group_data[0] += 1;
                      }

                      if (btn_row[index2] === 15) {
                        pie_row_data[15] += 5;
                        if (pie_row_data[15] > 119) {
                          pie_row_data[15] = 119;
                        }
                        bar_data1[1] += 1;
                        bar_data2[1] += 1;
                        bar_data3[0] += 1;
                        bar_data4[1] += 1;
                        bar_data5[0] += 1;
                        bar_data6[2] += 1;
                        bar_data8[0] += 1;
                        zone_group_data[0] += 1;
                      }

                      if (btn_row[index2] === 19) {
                        pie_row_data[19] += 5;
                        if (pie_row_data[19] > 119) {
                          pie_row_data[19] = 119;
                        }
                        bar_data1[0] += 1;
                        bar_data2[1] += 1;
                        bar_data3[1] += 1;
                        bar_data4[1] += 1;
                        bar_data5[0] += 1;
                        bar_data6[3] += 1;
                        bar_data8[2] += 1;
                        zone_group_data[0] += 1;
                      }

                      if (btn_row[index2] === 4) {
                        pie_row_data[4] += 5;
                        if (pie_row_data[4] > 119) {
                          pie_row_data[4] = 119;
                        }
                        bar_data1[1] += 1;
                        bar_data2[0] += 1;
                        bar_data3[0] += 1;
                        bar_data4[0] += 1;
                        bar_data5[0] += 1;
                        bar_data6[4] += 1;
                        bar_data8[2] += 1;
                        zone_group_data[0] += 1;
                      }

                      if (btn_row[index2] === 21) {
                        pie_row_data[21] += 5;
                        if (pie_row_data[21] > 119) {
                          pie_row_data[21] = 119;
                        }
                        bar_data1[0] += 1;
                        bar_data2[1] += 1;
                        bar_data3[1] += 1;
                        bar_data4[1] += 1;
                        bar_data5[0] += 1;
                        bar_data6[5] += 1;
                        bar_data8[0] += 1;
                        zone_group_data[0] += 1;
                      }

                      if (btn_row[index2] === 2) {
                        pie_row_data[2] += 5;
                        if (pie_row_data[2] > 119) {
                          pie_row_data[2] = 119;
                        }
                        bar_data1[1] += 1;
                        bar_data2[0] += 1;
                        bar_data3[0] += 1;
                        bar_data4[0] += 1;
                        bar_data5[0] += 1;
                        bar_data6[6] += 1;
                        bar_data8[1] += 1;
                        zone_group_data[0] += 1;
                      }

                      if (btn_row[index2] === 25) {
                        pie_row_data[25] += 5;
                        if (pie_row_data[25] > 119) {
                          pie_row_data[25] = 119;
                        }
                        bar_data1[0] += 1;
                        bar_data2[1] += 1;
                        bar_data3[1] += 1;
                        bar_data4[2] += 1;
                        bar_data5[0] += 1;
                        bar_data7[6] += 1;
                        bar_data8[2] += 1;
                        zone_group_data[0] += 1;
                      }

                      if (btn_row[index2] === 17) {
                        pie_row_data[17] += 5;
                        if (pie_row_data[17] > 119) {
                          pie_row_data[17] = 119;
                        }
                        bar_data1[1] += 1;
                        bar_data2[1] += 1;
                        bar_data3[0] += 1;
                        bar_data4[1] += 1;
                        bar_data5[0] += 1;
                        bar_data6[8] += 1;
                        bar_data8[1] += 1;
                        zone_group_data[0] += 1;
                      }
                        
                      // zone 2
                      if (btn_row[index2] === 34) {
                        pie_row_data[34] += 5;
                        if (pie_row_data[34] > 119) {
                          pie_row_data[34] = 119;
                        }
                        bar_data1[0] += 1;
                        bar_data2[0] += 1;
                        bar_data3[1] += 1;
                        bar_data4[2] += 1;
                        bar_data5[1] += 1;
                        bar_data6[9] += 1;
                        bar_data8[2] += 1;
                        zone_group_data[1] += 1;
                      }

                      if (btn_row[index2] === 6) {
                        pie_row_data[6] += 5;
                        if (pie_row_data[6] > 119) {
                          pie_row_data[6] = 119;
                        }
                        bar_data1[1] += 1;
                        bar_data2[0] += 1;
                        bar_data3[0] += 1;
                        bar_data4[0] += 1;
                        bar_data5[1] += 1;
                        bar_data6[10] += 1;
                        bar_data8[0] += 1;
                        zone_group_data[1] += 1;
                      }

                      if (btn_row[index2] === 27) {
                        pie_row_data[27] += 5;
                        if (pie_row_data[27] > 119) {
                          pie_row_data[27] = 119;
                        }
                        bar_data1[0] += 1;
                        bar_data2[1] += 1;
                        bar_data3[1] += 1;
                        bar_data4[2] += 1;
                        bar_data5[1] += 1;
                        bar_data6[11] += 1;
                        bar_data8[0] += 1;
                        zone_group_data[1] += 1;
                      }

                      if (btn_row[index2] === 13) {
                        pie_row_data[13] += 5;
                        if (pie_row_data[13] > 119) {
                          pie_row_data[13] = 119;
                        }
                        bar_data1[1] += 1;
                        bar_data2[1] += 1;
                        bar_data3[0] += 1;
                        bar_data4[1] += 1;
                        bar_data5[1] += 1;
                        bar_data6[12] += 1;
                        bar_data8[2] += 1;
                        zone_group_data[1] += 1;
                      }

                      if (btn_row[index2] === 36) {
                        pie_row_data[36] += 5;
                        if (pie_row_data[36] > 119) {
                          pie_row_data[36] = 119;
                        }
                        bar_data1[0] += 1;
                        bar_data2[0] += 1;
                        bar_data3[1] += 1;
                        bar_data4[2] += 1;
                        bar_data5[1] += 1;
                        bar_data6[13] += 1;
                        bar_data8[0] += 1;
                        zone_group_data[1] += 1;
                      }

                      if (btn_row[index2] === 11) {
                        pie_row_data[11] += 5;
                        if (pie_row_data[11] > 119) {
                          pie_row_data[11] = 119;
                        }
                        bar_data1[1] += 1;
                        bar_data2[1] += 1;
                        bar_data3[0] += 1;
                        bar_data4[0] += 1;
                        bar_data5[1] += 1;
                        bar_data6[14] += 1;
                        bar_data8[1] += 1;
                        zone_group_data[1] += 1;
                      }

                      if (btn_row[index2] === 30) {
                        pie_row_data[30] += 5;
                        if (pie_row_data[30] > 119) {
                          pie_row_data[30] = 119;
                        }
                        bar_data1[0] += 1;
                        bar_data2[0] += 1;
                        bar_data3[1] += 1;
                        bar_data4[2] += 1;
                        bar_data5[1] += 1;
                        bar_data6[15] += 1;
                        bar_data8[0] += 1;
                        zone_group_data[1] += 1;
                      }

                      if (btn_row[index2] === 8) {
                        pie_row_data[8] += 5;
                        if (pie_row_data[8] > 119) {
                          pie_row_data[8] = 119;
                        }
                        bar_data1[1] += 1;
                        bar_data2[0] += 1;
                        bar_data3[0] += 1;
                        bar_data4[0] += 1;
                        bar_data5[1] += 1;
                        bar_data6[16] += 1;
                        bar_data8[1] += 1;
                        zone_group_data[1] += 1;
                      }

                      if (btn_row[index2] === 23) {
                        pie_row_data[23] += 5;
                        if (pie_row_data[23] > 119) {
                          pie_row_data[23] = 119;
                        }
                        bar_data1[0] += 1;
                        bar_data2[1] += 1;
                        bar_data3[1] += 1;
                        bar_data4[1] += 1;
                        bar_data5[1] += 1;
                        bar_data6[17] += 1;
                        bar_data8[1] += 1;
                        zone_group_data[1] += 1;
                      }

                      if (btn_row[index2] === 10) {
                        pie_row_data[10] += 5;
                        if (pie_row_data[10] > 119) {
                          pie_row_data[10] = 119;
                        }
                        bar_data1[1] += 1;
                        bar_data2[0] += 1;
                        bar_data3[0] += 1;
                        bar_data4[0] += 1;
                        bar_data5[1] += 1;
                        bar_data6[18] += 1;
                        bar_data8[2] += 1;
                        zone_group_data[1] += 1;
                      }

                      // zone 3
                      if (btn_row[index2] === 5) {
                        pie_row_data[5] += 5;
                        if (pie_row_data[5] > 119) {
                          pie_row_data[5] = 119;
                        }
                        bar_data1[0] += 1;
                        bar_data2[1] += 1;
                        bar_data3[0] += 1;
                        bar_data4[0] += 1;
                        bar_data5[2] += 1;
                        bar_data6[19] += 1;
                        bar_data8[1] += 1;
                        zone_group_data[2] += 1;
                      }

                      if (btn_row[index2] === 24) {
                        pie_row_data[24] += 5;
                        if (pie_row_data[24] > 119) {
                          pie_row_data[24] = 119;
                        }
                        bar_data1[1] += 1;
                        bar_data2[0] += 1;
                        bar_data3[1] += 1;
                        bar_data4[1] += 1;
                        bar_data5[2] += 1;
                        bar_data6[20] += 1;
                        bar_data8[0] += 1;
                        zone_group_data[2] += 1;
                      }

                      if (btn_row[index2] === 16) {
                        pie_row_data[16] += 5;
                        if (pie_row_data[16] > 119) {
                          pie_row_data[16] = 119;
                        }
                        bar_data1[0] += 1;
                        bar_data2[0] += 1;
                        bar_data3[0] += 1;
                        bar_data4[1] += 1;
                        bar_data5[2] += 1;
                        bar_data6[21] += 1;
                        bar_data8[2] += 1;
                        zone_group_data[2] += 1;
                      }

                      if (btn_row[index2] === 33) {
                        pie_row_data[33] += 5;
                        if (pie_row_data[33] > 119) {
                          pie_row_data[33] = 119;
                        }
                        bar_data1[1] += 1;
                        bar_data2[1] += 1;
                        bar_data3[1] += 1;
                        bar_data4[2] += 1;
                        bar_data5[2] += 1;
                        bar_data6[22] += 1;
                        bar_data8[0] += 1;
                        zone_group_data[2] += 1;
                      }

                      if (btn_row[index2] === 1) {
                        pie_row_data[1] += 5;
                        if (pie_row_data[1] > 119) {
                          pie_row_data[1] = 119;
                        }
                        bar_data1[0] += 1;
                        bar_data2[1] += 1;
                        bar_data3[0] += 1;
                        bar_data4[0] += 1;
                        bar_data5[2] += 1;
                        bar_data6[23] += 1;
                        bar_data8[2] += 1;
                        zone_group_data[2] += 1;
                      }

                      if (btn_row[index2] === 20) {
                        pie_row_data[20] += 5;
                        if (pie_row_data[20] > 119) {
                          pie_row_data[20] = 119;
                        }
                        bar_data1[1] += 1;
                        bar_data2[0] += 1;
                        bar_data3[1] += 1;
                        bar_data4[1] += 1;
                        bar_data5[2] += 1;
                        bar_data6[24] += 1;
                        bar_data8[1] += 1;
                        zone_group_data[2] += 1;
                      }

                      if (btn_row[index2] === 14) {
                        pie_row_data[14] += 5;
                        if (pie_row_data[14] > 119) {
                          pie_row_data[14] = 119;
                        }
                        bar_data1[0] += 1;
                        bar_data2[0] += 1;
                        bar_data3[0] += 1;
                        bar_data4[1] += 1;
                        bar_data5[2] += 1;
                        bar_data6[25] += 1;
                        bar_data8[1] += 1;
                        zone_group_data[2] += 1;
                      }

                      if (btn_row[index2] === 31) {
                        pie_row_data[31] += 5;
                        if (pie_row_data[31] > 119) {
                          pie_row_data[31] = 119;
                        }
                        bar_data1[1] += 1;
                        bar_data2[1] += 1;
                        bar_data3[1] += 1;
                        bar_data4[2] += 1;
                        bar_data5[2] += 1;
                        bar_data6[26] += 1;
                        bar_data8[2] += 1;
                        zone_group_data[2] += 1;
                      }

                      if (btn_row[index2] === 9) {
                        pie_row_data[9] += 5;
                        if (pie_row_data[9] > 119) {
                          pie_row_data[9] = 119;
                        }
                        bar_data1[0] += 1;
                        bar_data2[1] += 1;
                        bar_data3[0] += 1;
                        bar_data4[0] += 1;
                        bar_data5[2] += 1;
                        bar_data6[27] += 1;
                        bar_data8[0] += 1;
                        zone_group_data[2] += 1;
                      }

                      // zone 4
                      if (btn_row[index2] === 22) {
                        pie_row_data[22] += 5;
                        if (pie_row_data[22] > 119) {
                          pie_row_data[22] = 119;
                        }
                        bar_data1[1] += 1;
                        bar_data2[0] += 1;
                        bar_data3[1] += 1;
                        bar_data4[1] += 1;
                        bar_data5[3] += 1;
                        bar_data6[28] += 1;
                        bar_data8[2] += 1;
                        zone_group_data[3] += 1;
                      }

                      if (btn_row[index2] === 18) {
                        pie_row_data[18] += 5;
                        if (pie_row_data[18] > 119) {
                          pie_row_data[18] = 119;
                        }
                        bar_data1[0] += 1;
                        bar_data2[0] += 1;
                        bar_data3[0] += 1;
                        bar_data4[1] += 1;
                        bar_data5[3] += 1;
                        bar_data6[29] += 1;
                        zone_group_data[3] += 1;
                      }

                      if (btn_row[index2] === 29) {
                        pie_row_data[29] += 5;
                        if (pie_row_data[29] > 119) {
                          pie_row_data[29] = 119;
                        }
                        bar_data1[1] += 1;
                        bar_data2[1] += 1;
                        bar_data3[1] += 1;
                        bar_data4[2] += 1;
                        bar_data5[3] += 1;
                        bar_data6[30] += 1;
                        bar_data8[1] += 1;
                        zone_group_data[3] += 1;
                      }

                      if (btn_row[index2] === 7) {
                        pie_row_data[7] += 5;
                        if (pie_row_data[7] > 119) {
                          pie_row_data[7] = 119;
                        }
                        bar_data1[0] += 1;
                        bar_data2[1] += 1;
                        bar_data3[0] += 1;
                        bar_data4[0] += 1;
                        bar_data5[3] += 1;
                        bar_data6[31] += 1;
                        bar_data8[2] += 1;
                        zone_group_data[3] += 1;
                      }

                      if (btn_row[index2] === 28) {
                        pie_row_data[28] += 5;
                        if (pie_row_data[28] > 119) {
                          pie_row_data[28] = 119;
                        }
                        bar_data1[1] += 1;
                        bar_data2[0] += 1;
                        bar_data3[1] += 1;
                        bar_data4[2] += 1;
                        bar_data5[3] += 1;
                        bar_data6[32] += 1;
                        zone_group_data[3] += 1;
                      }

                      if (btn_row[index2] === 12) {
                        pie_row_data[12] += 5;
                        if (pie_row_data[12] > 119) {
                          pie_row_data[12] = 119;
                        }
                        bar_data1[0] += 1;
                        bar_data2[0] += 1;
                        bar_data3[0] += 1;
                        bar_data4[0] += 1;
                        bar_data5[3] += 1;
                        bar_data6[33] += 1;
                        bar_data8[0] += 1;
                        zone_group_data[3] += 1;
                      }

                      if (btn_row[index2] === 35) {
                        pie_row_data[35] += 5;
                        if (pie_row_data[35] > 119) {
                          pie_row_data[35] = 119;
                        }
                        bar_data1[1] += 1;
                        bar_data2[1] += 1;
                        bar_data3[1] += 1;
                        bar_data4[2] += 1;
                        bar_data5[3] += 1;
                        bar_data6[34] += 1;
                        bar_data8[1] += 1;
                        zone_group_data[3] += 1;
                      }

                      if (btn_row[index2] === 3) {
                        pie_row_data[3] += 5;
                        if (pie_row_data[3] > 119) {
                          pie_row_data[3] = 119;
                        }
                        bar_data1[0] += 1;
                        bar_data2[1] += 1;
                        bar_data3[0] += 1;
                        bar_data4[0] += 1;
                        bar_data5[3] += 1;
                        bar_data6[35] += 1;
                        bar_data8[0] += 1;
                        zone_group_data[3] += 1;
                      }

                      if (btn_row[index2] === 26) {
                        pie_row_data[26] += 5;
                        if (pie_row_data[26] > 119) {
                          pie_row_data[26] = 119;
                        }
                        bar_data1[1] += 1;
                        bar_data2[0] += 1;
                        bar_data3[1] += 1;
                        bar_data4[2] += 1;
                        bar_data5[3] += 1;
                        bar_data6[36] += 1;
                        bar_data8[1] += 1;
                        zone_group_data[3] += 1;
                      }
                    }

                    let last_num = filter_length - 1;
                    let last_position = parseInt(page_row[page_row.length - 1]['filter_num'], 10) < btn_row.length ? btn_row[filter_length] : 0;
                    for (let btn_index = last_num; btn_index >= 0; btn_index--) {
                      btn_row_data.splice(0, 0, btn_row[btn_index]);
                      if (btn_position[last_position] === btn_position[btn_row[btn_index]]) {
                        bar_data7[0] += 1;
                      } else {
                        let btn_index1 = Math.abs(btn_position[btn_row[btn_index]] - btn_position[last_position]) - 1;
                        if (btn_index1 >= 18) {
                          btn_index1 = Math.abs(btn_index1 - 35);
                        }
                        bar_data7[btn_index1] += 1;
                      }
                      last_position = btn_row[btn_index];
                    }
                  }
                }

                if (btn_row.length) {
                    let last_num = btn_row.length - 1;
                    let last_position = 0;
                    for (let btn_index2 = last_num; btn_index2 >= 0; btn_index2--) {
                      if (btn_position[last_position] === btn_position[btn_row[btn_index2]]) {
                        angle_row.splice(0, 0, angle_array[0]);
                      } else {
                        let btn_index3 = Math.abs(btn_position[btn_row[btn_index2]] - btn_position[last_position]) - 1;
                        if (btn_index3 >= 18) {
                          btn_index3 = Math.abs(btn_index3 - 35);
                        }
                        angle_row.splice(0, 0, angle_array[btn_index3]);
                      }
                      last_position = btn_row[btn_index2];
                    }
                  }

                for (var pie_index = 0; pie_index < pie_row_data.length; pie_index++) {
                  pie_row[pie_index] = pie_row_data[pie_index] * range1;
                  if (pie_row[pie_index] > 119) {
                    pie_row[pie_index] = 119;
                  }
                }
                for (var zone_group_data_index = 0; zone_group_data_index < zone_group_data.length; zone_group_data_index++) {
                  zone_group[zone_group_data_index] = zone_group_data[zone_group_data_index] * range2;
                }
                for (var data1_index = 0; data1_index < bar_data1.length; data1_index++) {
                  data1.datasets[0].data[data1_index] = bar_data1[data1_index] * range2;
                }
                for (var data2_index = 0; data2_index < bar_data2.length; data2_index++) {
                  data2.datasets[0].data[data2_index] = bar_data2[data2_index] * range2;
                }
                for (var data3_index = 0; data3_index < bar_data3.length; data3_index++) {
                  data3.datasets[0].data[data3_index] = bar_data3[data3_index] * range2;
                }
                for (var data4_index = 0; data4_index < bar_data4.length; data4_index++) {
                  data4.datasets[0].data[data4_index] = bar_data4[data4_index] * range2;
                }
                for (var data5_index = 0; data5_index < bar_data5.length; data5_index++) {
                  data5.datasets[0].data[data5_index] = bar_data5[data5_index] * range2;
                }
                for (var data6_index = 0; data6_index < bar_data6.length; data6_index++) {
                  data6.datasets[0].data[data6_index] = bar_data6[data6_index] * range2;
                }
                for (var data7_index = 0; data7_index < bar_data7.length; data7_index++) {
                  data7.datasets[0].data[data7_index] = bar_data7[data7_index] * range2;
                }
                for (var data8_index = 0; data8_index < bar_data8.length; data8_index++) {
                  data8.datasets[0].data[data8_index] = bar_data8[data8_index] * range2;
                }

                self.setState({
                  page_row: page_row,
                  type: ''
                })
                window.localStorage.setItem('page_row', JSON.stringify(page_row));
                self.setState({
                  running: false,
                  is_setTime: false,
                  isFilter: page_row[page_row.length - 1]['filter_status'],
                  filterNumber: page_row[page_row.length - 1]['filter_num'],
                  isCheckedAllData: false,
                  rating: rating,
                  minutes: minutes,
                  seconds: seconds,
                  btn_row: btn_row_data,
                  btn_row_data: btn_row,
                  pie_row: pie_row,
                  pie_row_data: pie_row_data,
                  zone_group: zone_group,
                  zone_group_data: zone_group_data,
                  data1: data1,
                  bar_data1: bar_data1,
                  data2: data2,
                  bar_data2: bar_data2,
                  data3: data3,
                  bar_data3: bar_data3,
                  data4: data4,
                  bar_data4: bar_data4,
                  data5: data5,
                  bar_data5: bar_data5,
                  data6: data6,
                  bar_data6: bar_data6,
                  data7: data7,
                  bar_data7: bar_data7,
                  data8: data8,
                  bar_data8: bar_data8,
                  bar_status: true,
                  cSelected: [],
                  cSelected_status: false,
                  undo_status: false,
                  type: ''
                })
                if (btn_row_data.length) {
                  self.setState({
                    last_position: btn_row_data[0],
                    type: ''
                  })
                } else {
                  self.setState({
                    last_position: 0,
                    type: ''
                  })
                }
                if (res.data.historyinfo.dealer_avatar) {
                  self.setState({
                    isDealerAvatar: true,
                    dealer_avatar: APIUrl + res.data.historyinfo.dealer_avatar,
                    type: ''
                  })
                } else {
                  self.setState({
                    isDealerAvatar: false,
                    dealer_avatar: ''
                  })
                }
                clearInterval(self.intervalHandle);
                self.updatePieCanvas();
                self.updateRotateCanvas();
                self.updateLineCanvas();
              } else {
                console.log('fail');
              }
            })
          } else {
            clearInterval(self.intervalHandle);
            self.setState({
              page_status: false,
              type: ''
            })
            self.reset_state();
            window.localStorage.removeItem('page_row');
          }
        } else {
          console.log('fail');
        }
      })
    }
  }

  onCheckboxBtnClick = (selected) => {
    let cSelected = this.state.cSelected;
    const index = cSelected.indexOf(selected);
    if (index < 0) {
      cSelected.push(selected);
    } else {
      cSelected.splice(index, 1);
    }
    this.setState({
      cSelected: cSelected,
      type: ''
    })
    if (cSelected.length) {
      this.setState({
        cSelected_status: true,
        type: ''
      })
    } else {
      this.setState({
        cSelected_status: false,
        type: ''
      })
    }
  }

  deleteClick = () => {
    let temp = {};
    temp['btn_row_data'] = this.state.btn_row_data;
    temp['pie_row_data'] = this.state.pie_row_data;
    temp['zone_group_data'] = this.state.zone_group_data;
    temp['bar_data1'] = this.state.bar_data1;
    temp['bar_data2'] = this.state.bar_data2;
    temp['bar_data3'] = this.state.bar_data3;
    temp['bar_data4'] = this.state.bar_data4;
    temp['bar_data5'] = this.state.bar_data5;
    temp['bar_data6'] = this.state.bar_data6;
    temp['bar_data7'] = this.state.bar_data7;
    temp['bar_data8'] = this.state.bar_data8;
    temp = JSON.parse(JSON.stringify(temp));
    this.setState({
      temp: temp,
      undo_status: true,
      type: ''
    })
    let cSelected = this.state.cSelected;
    let btn_row = this.state.btn_row_data;

    if (cSelected.length) {
      for (var index = 0; index < cSelected.length; index++) {
        btn_row[cSelected[index]] = -1;
      }
      
      var index1 = 0;
      let bar_data1 = [0, 0];
      let bar_data2 = [0, 0];
      let bar_data3 = [0, 0];
      let bar_data4 = [0, 0, 0];
      let bar_data5 = [0, 0, 0, 0];
      let bar_data6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
      let bar_data7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
      let bar_data8 = [0, 0, 0];
      let pie_row_data = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
      let zone_group_data = [0, 0, 0, 0];
      let angle_row = [];
      var range1 = parseInt(this.state.range_1, 10);
      var range2 = parseInt(this.state.range_2, 10);
      let pie_row = this.state.pie_row;
      let zone_group = this.state.zone_group;
      let data1 = this.state.data1;
      let data2 = this.state.data2;
      let data3 = this.state.data3;
      let data4 = this.state.data4;
      let data5 = this.state.data5;
      let data6 = this.state.data6;
      let data7 = this.state.data7;
      let data8 = this.state.data8;
      while (btn_row[index1] !== undefined) {
        if (btn_row[index1] === -1) {
          btn_row.splice(index1, 1);
        } else {
          // zone 1
          if (btn_row[index1] === 0) {
            pie_row_data[0] += 5;
            if (pie_row_data[0] > 119) {
              pie_row_data[0] = 119;
            }
            zone_group_data[0] += 1;
            bar_data5[0] += 1;
            bar_data6[0] += 1;
          }

          if (btn_row[index1] === 32) {
            pie_row_data[32] += 5;
            if (pie_row_data[32] > 119) {
              pie_row_data[32] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[0] += 1;
            bar_data6[1] += 1;
            bar_data8[1] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 15) {
            pie_row_data[15] += 5;
            if (pie_row_data[15] > 119) {
              pie_row_data[15] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[0] += 1;
            bar_data6[2] += 1;
            bar_data8[0] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 19) {
            pie_row_data[19] += 5;
            if (pie_row_data[19] > 119) {
              pie_row_data[19] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[0] += 1;
            bar_data6[3] += 1;
            bar_data8[2] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 4) {
            pie_row_data[4] += 5;
            if (pie_row_data[4] > 119) {
              pie_row_data[4] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[0] += 1;
            bar_data6[4] += 1;
            bar_data8[2] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 21) {
            pie_row_data[21] += 5;
            if (pie_row_data[21] > 119) {
              pie_row_data[21] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[0] += 1;
            bar_data6[5] += 1;
            bar_data8[0] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 2) {
            pie_row_data[2] += 5;
            if (pie_row_data[2] > 119) {
              pie_row_data[2] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[0] += 1;
            bar_data6[6] += 1;
            bar_data8[1] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 25) {
            pie_row_data[25] += 5;
            if (pie_row_data[25] > 119) {
              pie_row_data[25] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[0] += 1;
            bar_data7[6] += 1;
            bar_data8[2] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 17) {
            pie_row_data[17] += 5;
            if (pie_row_data[17] > 119) {
              pie_row_data[17] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[0] += 1;
            bar_data6[8] += 1;
            bar_data8[1] += 1;
            zone_group_data[0] += 1;
          }
            
          // zone 2
          if (btn_row[index1] === 34) {
            pie_row_data[34] += 5;
            if (pie_row_data[34] > 119) {
              pie_row_data[34] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[1] += 1;
            bar_data6[9] += 1;
            bar_data8[2] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 6) {
            pie_row_data[6] += 5;
            if (pie_row_data[6] > 119) {
              pie_row_data[6] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[1] += 1;
            bar_data6[10] += 1;
            bar_data8[0] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 27) {
            pie_row_data[27] += 5;
            if (pie_row_data[27] > 119) {
              pie_row_data[27] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[1] += 1;
            bar_data6[11] += 1;
            bar_data8[0] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 13) {
            pie_row_data[13] += 5;
            if (pie_row_data[13] > 119) {
              pie_row_data[13] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[1] += 1;
            bar_data6[12] += 1;
            bar_data8[2] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 36) {
            pie_row_data[36] += 5;
            if (pie_row_data[36] > 119) {
              pie_row_data[36] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[1] += 1;
            bar_data6[13] += 1;
            bar_data8[0] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 11) {
            pie_row_data[11] += 5;
            if (pie_row_data[11] > 119) {
              pie_row_data[11] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[1] += 1;
            bar_data6[14] += 1;
            bar_data8[1] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 30) {
            pie_row_data[30] += 5;
            if (pie_row_data[30] > 119) {
              pie_row_data[30] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[1] += 1;
            bar_data6[15] += 1;
            bar_data8[0] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 8) {
            pie_row_data[8] += 5;
            if (pie_row_data[8] > 119) {
              pie_row_data[8] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[1] += 1;
            bar_data6[16] += 1;
            bar_data8[1] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 23) {
            pie_row_data[23] += 5;
            if (pie_row_data[23] > 119) {
              pie_row_data[23] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[1] += 1;
            bar_data6[17] += 1;
            bar_data8[1] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 10) {
            pie_row_data[10] += 5;
            if (pie_row_data[10] > 119) {
              pie_row_data[10] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[1] += 1;
            bar_data6[18] += 1;
            bar_data8[2] += 1;
            zone_group_data[1] += 1;
          }

          // zone 3
          if (btn_row[index1] === 5) {
            pie_row_data[5] += 5;
            if (pie_row_data[5] > 119) {
              pie_row_data[5] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[2] += 1;
            bar_data6[19] += 1;
            bar_data8[1] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 24) {
            pie_row_data[24] += 5;
            if (pie_row_data[24] > 119) {
              pie_row_data[24] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[2] += 1;
            bar_data6[20] += 1;
            bar_data8[0] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 16) {
            pie_row_data[16] += 5;
            if (pie_row_data[16] > 119) {
              pie_row_data[16] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[2] += 1;
            bar_data6[21] += 1;
            bar_data8[2] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 33) {
            pie_row_data[33] += 5;
            if (pie_row_data[33] > 119) {
              pie_row_data[33] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[2] += 1;
            bar_data6[22] += 1;
            bar_data8[0] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 1) {
            pie_row_data[1] += 5;
            if (pie_row_data[1] > 119) {
              pie_row_data[1] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[2] += 1;
            bar_data6[23] += 1;
            bar_data8[2] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 20) {
            pie_row_data[20] += 5;
            if (pie_row_data[20] > 119) {
              pie_row_data[20] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[2] += 1;
            bar_data6[24] += 1;
            bar_data8[1] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 14) {
            pie_row_data[14] += 5;
            if (pie_row_data[14] > 119) {
              pie_row_data[14] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[2] += 1;
            bar_data6[25] += 1;
            bar_data8[1] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 31) {
            pie_row_data[31] += 5;
            if (pie_row_data[31] > 119) {
              pie_row_data[31] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[2] += 1;
            bar_data6[26] += 1;
            bar_data8[2] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 9) {
            pie_row_data[9] += 5;
            if (pie_row_data[9] > 119) {
              pie_row_data[9] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[2] += 1;
            bar_data6[27] += 1;
            bar_data8[0] += 1;
            zone_group_data[2] += 1;
          }

          // zone 4
          if (btn_row[index1] === 22) {
            pie_row_data[22] += 5;
            if (pie_row_data[22] > 119) {
              pie_row_data[22] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[3] += 1;
            bar_data6[28] += 1;
            bar_data8[2] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 18) {
            pie_row_data[18] += 5;
            if (pie_row_data[18] > 119) {
              pie_row_data[18] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[3] += 1;
            bar_data6[29] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 29) {
            pie_row_data[29] += 5;
            if (pie_row_data[29] > 119) {
              pie_row_data[29] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[3] += 1;
            bar_data6[30] += 1;
            bar_data8[1] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 7) {
            pie_row_data[7] += 5;
            if (pie_row_data[7] > 119) {
              pie_row_data[7] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[3] += 1;
            bar_data6[31] += 1;
            bar_data8[2] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 28) {
            pie_row_data[28] += 5;
            if (pie_row_data[28] > 119) {
              pie_row_data[28] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[3] += 1;
            bar_data6[32] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 12) {
            pie_row_data[12] += 5;
            if (pie_row_data[12] > 119) {
              pie_row_data[12] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[3] += 1;
            bar_data6[33] += 1;
            bar_data8[0] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 35) {
            pie_row_data[35] += 5;
            if (pie_row_data[35] > 119) {
              pie_row_data[35] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[3] += 1;
            bar_data6[34] += 1;
            bar_data8[1] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 3) {
            pie_row_data[3] += 5;
            if (pie_row_data[3] > 119) {
              pie_row_data[3] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[3] += 1;
            bar_data6[35] += 1;
            bar_data8[0] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 26) {
            pie_row_data[26] += 5;
            if (pie_row_data[26] > 119) {
              pie_row_data[26] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[3] += 1;
            bar_data6[36] += 1;
            bar_data8[1] += 1;
            zone_group_data[3] += 1;
          }

          index1++;
        }
      }

      if (btn_row.length) {
        let last_position = 0;
        for (let btn_index = btn_row.length - 1; btn_index >= 0; btn_index--) {
          if (btn_position[last_position] === btn_position[btn_row[btn_index]]) {
            bar_data7[0] += 1;
            angle_row.splice(0, 0, angle_array[0]);
          } else {
            let btn_index1 = Math.abs(btn_position[btn_row[btn_index]] - btn_position[last_position]) - 1;
            if (btn_index1 >= 18) {
              btn_index1 = Math.abs(btn_index1 - 35);
            }
            bar_data7[btn_index1] += 1;
            angle_row.splice(0, 0, angle_array[btn_index1]);
          }
          last_position = btn_row[btn_index];
        }
      }

      for (let pie_index = 0; pie_index < pie_row_data.length; pie_index++) {
        pie_row[pie_index] = pie_row_data[pie_index] * range1;
        if (pie_row[pie_index] > 119) {
          pie_row[pie_index] = 119;
        }
      }
      for (let zone_group_data_index = 0; zone_group_data_index < zone_group_data.length; zone_group_data_index++) {
        zone_group[zone_group_data_index] = zone_group_data[zone_group_data_index] * range2;
      }
      for (let data1_index = 0; data1_index < bar_data1.length; data1_index++) {
        data1.datasets[0].data[data1_index] = bar_data1[data1_index] * range2;
      }
      for (let data2_index = 0; data2_index < bar_data2.length; data2_index++) {
        data2.datasets[0].data[data2_index] = bar_data2[data2_index] * range2;
      }
      for (let data3_index = 0; data3_index < bar_data3.length; data3_index++) {
        data3.datasets[0].data[data3_index] = bar_data3[data3_index] * range2;
      }
      for (let data4_index = 0; data4_index < bar_data4.length; data4_index++) {
        data4.datasets[0].data[data4_index] = bar_data4[data4_index] * range2;
      }
      for (let data5_index = 0; data5_index < bar_data5.length; data5_index++) {
        data5.datasets[0].data[data5_index] = bar_data5[data5_index] * range2;
      }
      for (let data6_index = 0; data6_index < bar_data6.length; data6_index++) {
        data6.datasets[0].data[data6_index] = bar_data6[data6_index] * range2;
      }
      for (let data7_index = 0; data7_index < bar_data7.length; data7_index++) {
        data7.datasets[0].data[data7_index] = bar_data7[data7_index] * range2;
      }
      for (let data8_index = 0; data8_index < bar_data8.length; data8_index++) {
        data8.datasets[0].data[data8_index] = bar_data8[data8_index] * range2;
      }

      this.setState({
        pie_row_data: pie_row_data,
        zone_group_data: zone_group_data,
        bar_data1: bar_data1,
        bar_data2: bar_data2,
        bar_data3: bar_data3,
        bar_data4: bar_data4,
        bar_data5: bar_data5,
        bar_data6: bar_data6,
        bar_data7: bar_data7,
        bar_data8: bar_data8,
        angle_row: angle_row,
        type: ''
      })

      if (!this.state.isFilter) {
        if (btn_row.length) {
          this.setState({
            last_position: btn_row[0],
            type: ''
          })
        } else {
          this.setState({
            last_position: 0,
            type: ''
          })
        }
        this.setState({
          btn_row: btn_row,
          btn_row_data: btn_row,
          pie_row: pie_row,
          zone_group: zone_group,
          data1: data1,
          data2: data2,
          data3: data3,
          data4: data4,
          data5: data5,
          data6: data6,
          data7: data7,
          data8: data8,
          bar_status: true,
          type: ''
        })
        this.updatePieCanvas();
        this.updateRotateCanvas();
        this.updateLineCanvas();
      } else {
        let btn_row_data = [];
        bar_data1 = [0, 0];
        bar_data2 = [0, 0];
        bar_data3 = [0, 0];
        bar_data4 = [0, 0, 0];
        bar_data5 = [0, 0, 0, 0];
        bar_data6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        bar_data7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        bar_data8 = [0, 0, 0];
        pie_row_data = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        zone_group_data = [0, 0, 0, 0];

        if (!this.state.isCheckedAllData) {
          if (btn_row.length) {
            let filter_length = parseInt(this.state.filterNumber, 10) < btn_row.length ? parseInt(this.state.filterNumber, 10) : btn_row.length;
            for (let index1 = 0; index1 < filter_length; index1++) {
              // zone 1
              if (btn_row[index1] === 0) {
                pie_row_data[0] += 5;
                if (pie_row_data[0] > 119) {
                  pie_row_data[0] = 119;
                }
                zone_group_data[0] += 1;
                bar_data5[0] += 1;
                bar_data6[0] += 1;
              }
  
              if (btn_row[index1] === 32) {
                pie_row_data[32] += 5;
                if (pie_row_data[32] > 119) {
                  pie_row_data[32] = 119;
                }
                bar_data1[0] += 1;
                bar_data2[0] += 1;
                bar_data3[1] += 1;
                bar_data4[2] += 1;
                bar_data5[0] += 1;
                bar_data6[1] += 1;
                bar_data8[1] += 1;
                zone_group_data[0] += 1;
              }
  
              if (btn_row[index1] === 15) {
                pie_row_data[15] += 5;
                if (pie_row_data[15] > 119) {
                  pie_row_data[15] = 119;
                }
                bar_data1[1] += 1;
                bar_data2[1] += 1;
                bar_data3[0] += 1;
                bar_data4[1] += 1;
                bar_data5[0] += 1;
                bar_data6[2] += 1;
                bar_data8[0] += 1;
                zone_group_data[0] += 1;
              }
  
              if (btn_row[index1] === 19) {
                pie_row_data[19] += 5;
                if (pie_row_data[19] > 119) {
                  pie_row_data[19] = 119;
                }
                bar_data1[0] += 1;
                bar_data2[1] += 1;
                bar_data3[1] += 1;
                bar_data4[1] += 1;
                bar_data5[0] += 1;
                bar_data6[3] += 1;
                bar_data8[2] += 1;
                zone_group_data[0] += 1;
              }
  
              if (btn_row[index1] === 4) {
                pie_row_data[4] += 5;
                if (pie_row_data[4] > 119) {
                  pie_row_data[4] = 119;
                }
                bar_data1[1] += 1;
                bar_data2[0] += 1;
                bar_data3[0] += 1;
                bar_data4[0] += 1;
                bar_data5[0] += 1;
                bar_data6[4] += 1;
                bar_data8[2] += 1;
                zone_group_data[0] += 1;
              }
  
              if (btn_row[index1] === 21) {
                pie_row_data[21] += 5;
                if (pie_row_data[21] > 119) {
                  pie_row_data[21] = 119;
                }
                bar_data1[0] += 1;
                bar_data2[1] += 1;
                bar_data3[1] += 1;
                bar_data4[1] += 1;
                bar_data5[0] += 1;
                bar_data6[5] += 1;
                bar_data8[0] += 1;
                zone_group_data[0] += 1;
              }
  
              if (btn_row[index1] === 2) {
                pie_row_data[2] += 5;
                if (pie_row_data[2] > 119) {
                  pie_row_data[2] = 119;
                }
                bar_data1[1] += 1;
                bar_data2[0] += 1;
                bar_data3[0] += 1;
                bar_data4[0] += 1;
                bar_data5[0] += 1;
                bar_data6[6] += 1;
                bar_data8[1] += 1;
                zone_group_data[0] += 1;
              }
  
              if (btn_row[index1] === 25) {
                pie_row_data[25] += 5;
                if (pie_row_data[25] > 119) {
                  pie_row_data[25] = 119;
                }
                bar_data1[0] += 1;
                bar_data2[1] += 1;
                bar_data3[1] += 1;
                bar_data4[2] += 1;
                bar_data5[0] += 1;
                bar_data7[6] += 1;
                bar_data8[2] += 1;
                zone_group_data[0] += 1;
              }
  
              if (btn_row[index1] === 17) {
                pie_row_data[17] += 5;
                if (pie_row_data[17] > 119) {
                  pie_row_data[17] = 119;
                }
                bar_data1[1] += 1;
                bar_data2[1] += 1;
                bar_data3[0] += 1;
                bar_data4[1] += 1;
                bar_data5[0] += 1;
                bar_data6[8] += 1;
                bar_data8[1] += 1;
                zone_group_data[0] += 1;
              }
                
              // zone 2
              if (btn_row[index1] === 34) {
                pie_row_data[34] += 5;
                if (pie_row_data[34] > 119) {
                  pie_row_data[34] = 119;
                }
                bar_data1[0] += 1;
                bar_data2[0] += 1;
                bar_data3[1] += 1;
                bar_data4[2] += 1;
                bar_data5[1] += 1;
                bar_data6[9] += 1;
                bar_data8[2] += 1;
                zone_group_data[1] += 1;
              }
  
              if (btn_row[index1] === 6) {
                pie_row_data[6] += 5;
                if (pie_row_data[6] > 119) {
                  pie_row_data[6] = 119;
                }
                bar_data1[1] += 1;
                bar_data2[0] += 1;
                bar_data3[0] += 1;
                bar_data4[0] += 1;
                bar_data5[1] += 1;
                bar_data6[10] += 1;
                bar_data8[0] += 1;
                zone_group_data[1] += 1;
              }
  
              if (btn_row[index1] === 27) {
                pie_row_data[27] += 5;
                if (pie_row_data[27] > 119) {
                  pie_row_data[27] = 119;
                }
                bar_data1[0] += 1;
                bar_data2[1] += 1;
                bar_data3[1] += 1;
                bar_data4[2] += 1;
                bar_data5[1] += 1;
                bar_data6[11] += 1;
                bar_data8[0] += 1;
                zone_group_data[1] += 1;
              }
  
              if (btn_row[index1] === 13) {
                pie_row_data[13] += 5;
                if (pie_row_data[13] > 119) {
                  pie_row_data[13] = 119;
                }
                bar_data1[1] += 1;
                bar_data2[1] += 1;
                bar_data3[0] += 1;
                bar_data4[1] += 1;
                bar_data5[1] += 1;
                bar_data6[12] += 1;
                bar_data8[2] += 1;
                zone_group_data[1] += 1;
              }
  
              if (btn_row[index1] === 36) {
                pie_row_data[36] += 5;
                if (pie_row_data[36] > 119) {
                  pie_row_data[36] = 119;
                }
                bar_data1[0] += 1;
                bar_data2[0] += 1;
                bar_data3[1] += 1;
                bar_data4[2] += 1;
                bar_data5[1] += 1;
                bar_data6[13] += 1;
                bar_data8[0] += 1;
                zone_group_data[1] += 1;
              }
  
              if (btn_row[index1] === 11) {
                pie_row_data[11] += 5;
                if (pie_row_data[11] > 119) {
                  pie_row_data[11] = 119;
                }
                bar_data1[1] += 1;
                bar_data2[1] += 1;
                bar_data3[0] += 1;
                bar_data4[0] += 1;
                bar_data5[1] += 1;
                bar_data6[14] += 1;
                bar_data8[1] += 1;
                zone_group_data[1] += 1;
              }
  
              if (btn_row[index1] === 30) {
                pie_row_data[30] += 5;
                if (pie_row_data[30] > 119) {
                  pie_row_data[30] = 119;
                }
                bar_data1[0] += 1;
                bar_data2[0] += 1;
                bar_data3[1] += 1;
                bar_data4[2] += 1;
                bar_data5[1] += 1;
                bar_data6[15] += 1;
                bar_data8[0] += 1;
                zone_group_data[1] += 1;
              }
  
              if (btn_row[index1] === 8) {
                pie_row_data[8] += 5;
                if (pie_row_data[8] > 119) {
                  pie_row_data[8] = 119;
                }
                bar_data1[1] += 1;
                bar_data2[0] += 1;
                bar_data3[0] += 1;
                bar_data4[0] += 1;
                bar_data5[1] += 1;
                bar_data6[16] += 1;
                bar_data8[1] += 1;
                zone_group_data[1] += 1;
              }
  
              if (btn_row[index1] === 23) {
                pie_row_data[23] += 5;
                if (pie_row_data[23] > 119) {
                  pie_row_data[23] = 119;
                }
                bar_data1[0] += 1;
                bar_data2[1] += 1;
                bar_data3[1] += 1;
                bar_data4[1] += 1;
                bar_data5[1] += 1;
                bar_data6[17] += 1;
                bar_data8[1] += 1;
                zone_group_data[1] += 1;
              }
  
              if (btn_row[index1] === 10) {
                pie_row_data[10] += 5;
                if (pie_row_data[10] > 119) {
                  pie_row_data[10] = 119;
                }
                bar_data1[1] += 1;
                bar_data2[0] += 1;
                bar_data3[0] += 1;
                bar_data4[0] += 1;
                bar_data5[1] += 1;
                bar_data6[18] += 1;
                bar_data8[2] += 1;
                zone_group_data[1] += 1;
              }
  
              // zone 3
              if (btn_row[index1] === 5) {
                pie_row_data[5] += 5;
                if (pie_row_data[5] > 119) {
                  pie_row_data[5] = 119;
                }
                bar_data1[0] += 1;
                bar_data2[1] += 1;
                bar_data3[0] += 1;
                bar_data4[0] += 1;
                bar_data5[2] += 1;
                bar_data6[19] += 1;
                bar_data8[1] += 1;
                zone_group_data[2] += 1;
              }
  
              if (btn_row[index1] === 24) {
                pie_row_data[24] += 5;
                if (pie_row_data[24] > 119) {
                  pie_row_data[24] = 119;
                }
                bar_data1[1] += 1;
                bar_data2[0] += 1;
                bar_data3[1] += 1;
                bar_data4[1] += 1;
                bar_data5[2] += 1;
                bar_data6[20] += 1;
                bar_data8[0] += 1;
                zone_group_data[2] += 1;
              }
  
              if (btn_row[index1] === 16) {
                pie_row_data[16] += 5;
                if (pie_row_data[16] > 119) {
                  pie_row_data[16] = 119;
                }
                bar_data1[0] += 1;
                bar_data2[0] += 1;
                bar_data3[0] += 1;
                bar_data4[1] += 1;
                bar_data5[2] += 1;
                bar_data6[21] += 1;
                bar_data8[2] += 1;
                zone_group_data[2] += 1;
              }
  
              if (btn_row[index1] === 33) {
                pie_row_data[33] += 5;
                if (pie_row_data[33] > 119) {
                  pie_row_data[33] = 119;
                }
                bar_data1[1] += 1;
                bar_data2[1] += 1;
                bar_data3[1] += 1;
                bar_data4[2] += 1;
                bar_data5[2] += 1;
                bar_data6[22] += 1;
                bar_data8[0] += 1;
                zone_group_data[2] += 1;
              }
  
              if (btn_row[index1] === 1) {
                pie_row_data[1] += 5;
                if (pie_row_data[1] > 119) {
                  pie_row_data[1] = 119;
                }
                bar_data1[0] += 1;
                bar_data2[1] += 1;
                bar_data3[0] += 1;
                bar_data4[0] += 1;
                bar_data5[2] += 1;
                bar_data6[23] += 1;
                bar_data8[2] += 1;
                zone_group_data[2] += 1;
              }
  
              if (btn_row[index1] === 20) {
                pie_row_data[20] += 5;
                if (pie_row_data[20] > 119) {
                  pie_row_data[20] = 119;
                }
                bar_data1[1] += 1;
                bar_data2[0] += 1;
                bar_data3[1] += 1;
                bar_data4[1] += 1;
                bar_data5[2] += 1;
                bar_data6[24] += 1;
                bar_data8[1] += 1;
                zone_group_data[2] += 1;
              }
  
              if (btn_row[index1] === 14) {
                pie_row_data[14] += 5;
                if (pie_row_data[14] > 119) {
                  pie_row_data[14] = 119;
                }
                bar_data1[0] += 1;
                bar_data2[0] += 1;
                bar_data3[0] += 1;
                bar_data4[1] += 1;
                bar_data5[2] += 1;
                bar_data6[25] += 1;
                bar_data8[1] += 1;
                zone_group_data[2] += 1;
              }
  
              if (btn_row[index1] === 31) {
                pie_row_data[31] += 5;
                if (pie_row_data[31] > 119) {
                  pie_row_data[31] = 119;
                }
                bar_data1[1] += 1;
                bar_data2[1] += 1;
                bar_data3[1] += 1;
                bar_data4[2] += 1;
                bar_data5[2] += 1;
                bar_data6[26] += 1;
                bar_data8[2] += 1;
                zone_group_data[2] += 1;
              }
  
              if (btn_row[index1] === 9) {
                pie_row_data[9] += 5;
                if (pie_row_data[9] > 119) {
                  pie_row_data[9] = 119;
                }
                bar_data1[0] += 1;
                bar_data2[1] += 1;
                bar_data3[0] += 1;
                bar_data4[0] += 1;
                bar_data5[2] += 1;
                bar_data6[27] += 1;
                bar_data8[0] += 1;
                zone_group_data[2] += 1;
              }
  
              // zone 4
              if (btn_row[index1] === 22) {
                pie_row_data[22] += 5;
                if (pie_row_data[22] > 119) {
                  pie_row_data[22] = 119;
                }
                bar_data1[1] += 1;
                bar_data2[0] += 1;
                bar_data3[1] += 1;
                bar_data4[1] += 1;
                bar_data5[3] += 1;
                bar_data6[28] += 1;
                bar_data8[2] += 1;
                zone_group_data[3] += 1;
              }
  
              if (btn_row[index1] === 18) {
                pie_row_data[18] += 5;
                if (pie_row_data[18] > 119) {
                  pie_row_data[18] = 119;
                }
                bar_data1[0] += 1;
                bar_data2[0] += 1;
                bar_data3[0] += 1;
                bar_data4[1] += 1;
                bar_data5[3] += 1;
                bar_data6[29] += 1;
                zone_group_data[3] += 1;
              }
  
              if (btn_row[index1] === 29) {
                pie_row_data[29] += 5;
                if (pie_row_data[29] > 119) {
                  pie_row_data[29] = 119;
                }
                bar_data1[1] += 1;
                bar_data2[1] += 1;
                bar_data3[1] += 1;
                bar_data4[2] += 1;
                bar_data5[3] += 1;
                bar_data6[30] += 1;
                bar_data8[1] += 1;
                zone_group_data[3] += 1;
              }
  
              if (btn_row[index1] === 7) {
                pie_row_data[7] += 5;
                if (pie_row_data[7] > 119) {
                  pie_row_data[7] = 119;
                }
                bar_data1[0] += 1;
                bar_data2[1] += 1;
                bar_data3[0] += 1;
                bar_data4[0] += 1;
                bar_data5[3] += 1;
                bar_data6[31] += 1;
                bar_data8[2] += 1;
                zone_group_data[3] += 1;
              }
  
              if (btn_row[index1] === 28) {
                pie_row_data[28] += 5;
                if (pie_row_data[28] > 119) {
                  pie_row_data[28] = 119;
                }
                bar_data1[1] += 1;
                bar_data2[0] += 1;
                bar_data3[1] += 1;
                bar_data4[2] += 1;
                bar_data5[3] += 1;
                bar_data6[32] += 1;
                zone_group_data[3] += 1;
              }
  
              if (btn_row[index1] === 12) {
                pie_row_data[12] += 5;
                if (pie_row_data[12] > 119) {
                  pie_row_data[12] = 119;
                }
                bar_data1[0] += 1;
                bar_data2[0] += 1;
                bar_data3[0] += 1;
                bar_data4[0] += 1;
                bar_data5[3] += 1;
                bar_data6[33] += 1;
                bar_data8[0] += 1;
                zone_group_data[3] += 1;
              }
  
              if (btn_row[index1] === 35) {
                pie_row_data[35] += 5;
                if (pie_row_data[35] > 119) {
                  pie_row_data[35] = 119;
                }
                bar_data1[1] += 1;
                bar_data2[1] += 1;
                bar_data3[1] += 1;
                bar_data4[2] += 1;
                bar_data5[3] += 1;
                bar_data6[34] += 1;
                bar_data8[1] += 1;
                zone_group_data[3] += 1;
              }
  
              if (btn_row[index1] === 3) {
                pie_row_data[3] += 5;
                if (pie_row_data[3] > 119) {
                  pie_row_data[3] = 119;
                }
                bar_data1[0] += 1;
                bar_data2[1] += 1;
                bar_data3[0] += 1;
                bar_data4[0] += 1;
                bar_data5[3] += 1;
                bar_data6[35] += 1;
                bar_data8[0] += 1;
                zone_group_data[3] += 1;
              }
  
              if (btn_row[index1] === 26) {
                pie_row_data[26] += 5;
                if (pie_row_data[26] > 119) {
                  pie_row_data[26] = 119;
                }
                bar_data1[1] += 1;
                bar_data2[0] += 1;
                bar_data3[1] += 1;
                bar_data4[2] += 1;
                bar_data5[3] += 1;
                bar_data6[36] += 1;
                bar_data8[1] += 1;
                zone_group_data[3] += 1;
              }
            }
  
            let last_num = filter_length - 1;
            let last_position = parseInt(this.state.filterNumber, 10) < btn_row.length ? btn_row[filter_length] : 0;
            for (let btn_index = last_num; btn_index >= 0; btn_index--) {
              btn_row_data.splice(0, 0, btn_row[btn_index]);
              if (btn_position[last_position] === btn_position[btn_row[btn_index]]) {
                bar_data7[0] += 1;
              } else {
                let btn_index1 = Math.abs(btn_position[btn_row[btn_index]] - btn_position[last_position]) - 1;
                if (btn_index1 >= 18) {
                  btn_index1 = Math.abs(btn_index1 - 35);
                }
                bar_data7[btn_index1] += 1;
              }
              last_position = btn_row[btn_index];
            }
          }
        } else {
          if (btn_row.length) {
            let filter_length = parseInt(this.state.filterNumber, 10) < btn_row.length ? parseInt(this.state.filterNumber, 10) : btn_row.length;
  
            for (let index = 0; index < filter_length; index++) {
              pie_row_data[btn_row[index]] += 5;
              if (pie_row_data[btn_row[index]] > 119) {
                pie_row_data[btn_row[index]] = 119;
              }
            }
            for (let index1 = 0; index1 < btn_row.length; index1++) {
              // zone 1
              if (btn_row[index1] === 0) {
                zone_group_data[0] += 1;
                bar_data5[0] += 1;
                bar_data6[0] += 1;
              }
    
              if (btn_row[index1] === 32) {
                bar_data1[0] += 1;
                bar_data2[0] += 1;
                bar_data3[1] += 1;
                bar_data4[2] += 1;
                bar_data5[0] += 1;
                bar_data6[1] += 1;
                bar_data8[1] += 1;
                zone_group_data[0] += 1;
              }
    
              if (btn_row[index1] === 15) {
                bar_data1[1] += 1;
                bar_data2[1] += 1;
                bar_data3[0] += 1;
                bar_data4[1] += 1;
                bar_data5[0] += 1;
                bar_data6[2] += 1;
                bar_data8[0] += 1;
                zone_group_data[0] += 1;
              }
    
              if (btn_row[index1] === 19) {
                bar_data1[0] += 1;
                bar_data2[1] += 1;
                bar_data3[1] += 1;
                bar_data4[1] += 1;
                bar_data5[0] += 1;
                bar_data6[3] += 1;
                bar_data8[2] += 1;
                zone_group_data[0] += 1;
              }
    
              if (btn_row[index1] === 4) {
                bar_data1[1] += 1;
                bar_data2[0] += 1;
                bar_data3[0] += 1;
                bar_data4[0] += 1;
                bar_data5[0] += 1;
                bar_data6[4] += 1;
                bar_data8[2] += 1;
                zone_group_data[0] += 1;
              }
    
              if (btn_row[index1] === 21) {
                bar_data1[0] += 1;
                bar_data2[1] += 1;
                bar_data3[1] += 1;
                bar_data4[1] += 1;
                bar_data5[0] += 1;
                bar_data6[5] += 1;
                bar_data8[0] += 1;
                zone_group_data[0] += 1;
              }
    
              if (btn_row[index1] === 2) {
                bar_data1[1] += 1;
                bar_data2[0] += 1;
                bar_data3[0] += 1;
                bar_data4[0] += 1;
                bar_data5[0] += 1;
                bar_data6[6] += 1;
                bar_data8[1] += 1;
                zone_group_data[0] += 1;
              }
    
              if (btn_row[index1] === 25) {
                bar_data1[0] += 1;
                bar_data2[1] += 1;
                bar_data3[1] += 1;
                bar_data4[2] += 1;
                bar_data5[0] += 1;
                bar_data7[6] += 1;
                bar_data8[2] += 1;
                zone_group_data[0] += 1;
              }
    
              if (btn_row[index1] === 17) {
                bar_data1[1] += 1;
                bar_data2[1] += 1;
                bar_data3[0] += 1;
                bar_data4[1] += 1;
                bar_data5[0] += 1;
                bar_data6[8] += 1;
                bar_data8[1] += 1;
                zone_group_data[0] += 1;
              }
                
              // zone 2
              if (btn_row[index1] === 34) {
                bar_data1[0] += 1;
                bar_data2[0] += 1;
                bar_data3[1] += 1;
                bar_data4[2] += 1;
                bar_data5[1] += 1;
                bar_data6[9] += 1;
                bar_data8[2] += 1;
                zone_group_data[1] += 1;
              }
    
              if (btn_row[index1] === 6) {
                bar_data1[1] += 1;
                bar_data2[0] += 1;
                bar_data3[0] += 1;
                bar_data4[0] += 1;
                bar_data5[1] += 1;
                bar_data6[10] += 1;
                bar_data8[0] += 1;
                zone_group_data[1] += 1;
              }
    
              if (btn_row[index1] === 27) {
                bar_data1[0] += 1;
                bar_data2[1] += 1;
                bar_data3[1] += 1;
                bar_data4[2] += 1;
                bar_data5[1] += 1;
                bar_data6[11] += 1;
                bar_data8[0] += 1;
                zone_group_data[1] += 1;
              }
    
              if (btn_row[index1] === 13) {
                bar_data1[1] += 1;
                bar_data2[1] += 1;
                bar_data3[0] += 1;
                bar_data4[1] += 1;
                bar_data5[1] += 1;
                bar_data6[12] += 1;
                bar_data8[2] += 1;
                zone_group_data[1] += 1;
              }
    
              if (btn_row[index1] === 36) {
                bar_data1[0] += 1;
                bar_data2[0] += 1;
                bar_data3[1] += 1;
                bar_data4[2] += 1;
                bar_data5[1] += 1;
                bar_data6[13] += 1;
                bar_data8[0] += 1;
                zone_group_data[1] += 1;
              }
    
              if (btn_row[index1] === 11) {
                bar_data1[1] += 1;
                bar_data2[1] += 1;
                bar_data3[0] += 1;
                bar_data4[0] += 1;
                bar_data5[1] += 1;
                bar_data6[14] += 1;
                bar_data8[1] += 1;
                zone_group_data[1] += 1;
              }
    
              if (btn_row[index1] === 30) {
                bar_data1[0] += 1;
                bar_data2[0] += 1;
                bar_data3[1] += 1;
                bar_data4[2] += 1;
                bar_data5[1] += 1;
                bar_data6[15] += 1;
                bar_data8[0] += 1;
                zone_group_data[1] += 1;
              }
    
              if (btn_row[index1] === 8) {
                bar_data1[1] += 1;
                bar_data2[0] += 1;
                bar_data3[0] += 1;
                bar_data4[0] += 1;
                bar_data5[1] += 1;
                bar_data6[16] += 1;
                bar_data8[1] += 1;
                zone_group_data[1] += 1;
              }
    
              if (btn_row[index1] === 23) {
                bar_data1[0] += 1;
                bar_data2[1] += 1;
                bar_data3[1] += 1;
                bar_data4[1] += 1;
                bar_data5[1] += 1;
                bar_data6[17] += 1;
                bar_data8[1] += 1;
                zone_group_data[1] += 1;
              }
    
              if (btn_row[index1] === 10) {
                bar_data1[1] += 1;
                bar_data2[0] += 1;
                bar_data3[0] += 1;
                bar_data4[0] += 1;
                bar_data5[1] += 1;
                bar_data6[18] += 1;
                bar_data8[2] += 1;
                zone_group_data[1] += 1;
              }
    
              // zone 3
              if (btn_row[index1] === 5) {
                bar_data1[0] += 1;
                bar_data2[1] += 1;
                bar_data3[0] += 1;
                bar_data4[0] += 1;
                bar_data5[2] += 1;
                bar_data6[19] += 1;
                bar_data8[1] += 1;
                zone_group_data[2] += 1;
              }
    
              if (btn_row[index1] === 24) {
                bar_data1[1] += 1;
                bar_data2[0] += 1;
                bar_data3[1] += 1;
                bar_data4[1] += 1;
                bar_data5[2] += 1;
                bar_data6[20] += 1;
                bar_data8[0] += 1;
                zone_group_data[2] += 1;
              }
    
              if (btn_row[index1] === 16) {
                bar_data1[0] += 1;
                bar_data2[0] += 1;
                bar_data3[0] += 1;
                bar_data4[1] += 1;
                bar_data5[2] += 1;
                bar_data6[21] += 1;
                bar_data8[2] += 1;
                zone_group_data[2] += 1;
              }
    
              if (btn_row[index1] === 33) {
                bar_data1[1] += 1;
                bar_data2[1] += 1;
                bar_data3[1] += 1;
                bar_data4[2] += 1;
                bar_data5[2] += 1;
                bar_data6[22] += 1;
                bar_data8[0] += 1;
                zone_group_data[2] += 1;
              }
    
              if (btn_row[index1] === 1) {
                bar_data1[0] += 1;
                bar_data2[1] += 1;
                bar_data3[0] += 1;
                bar_data4[0] += 1;
                bar_data5[2] += 1;
                bar_data6[23] += 1;
                bar_data8[2] += 1;
                zone_group_data[2] += 1;
              }
    
              if (btn_row[index1] === 20) {
                bar_data1[1] += 1;
                bar_data2[0] += 1;
                bar_data3[1] += 1;
                bar_data4[1] += 1;
                bar_data5[2] += 1;
                bar_data6[24] += 1;
                bar_data8[1] += 1;
                zone_group_data[2] += 1;
              }
    
              if (btn_row[index1] === 14) {
                bar_data1[0] += 1;
                bar_data2[0] += 1;
                bar_data3[0] += 1;
                bar_data4[1] += 1;
                bar_data5[2] += 1;
                bar_data6[25] += 1;
                bar_data8[1] += 1;
                zone_group_data[2] += 1;
              }
    
              if (btn_row[index1] === 31) {
                bar_data1[1] += 1;
                bar_data2[1] += 1;
                bar_data3[1] += 1;
                bar_data4[2] += 1;
                bar_data5[2] += 1;
                bar_data6[26] += 1;
                bar_data8[2] += 1;
                zone_group_data[2] += 1;
              }
    
              if (btn_row[index1] === 9) {
                bar_data1[0] += 1;
                bar_data2[1] += 1;
                bar_data3[0] += 1;
                bar_data4[0] += 1;
                bar_data5[2] += 1;
                bar_data6[27] += 1;
                bar_data8[0] += 1;
                zone_group_data[2] += 1;
              }
    
              // zone 4
              if (btn_row[index1] === 22) {
                bar_data1[1] += 1;
                bar_data2[0] += 1;
                bar_data3[1] += 1;
                bar_data4[1] += 1;
                bar_data5[3] += 1;
                bar_data6[28] += 1;
                bar_data8[2] += 1;
                zone_group_data[3] += 1;
              }
    
              if (btn_row[index1] === 18) {
                bar_data1[0] += 1;
                bar_data2[0] += 1;
                bar_data3[0] += 1;
                bar_data4[1] += 1;
                bar_data5[3] += 1;
                bar_data6[29] += 1;
                zone_group_data[3] += 1;
              }
    
              if (btn_row[index1] === 29) {
                bar_data1[1] += 1;
                bar_data2[1] += 1;
                bar_data3[1] += 1;
                bar_data4[2] += 1;
                bar_data5[3] += 1;
                bar_data6[30] += 1;
                bar_data8[1] += 1;
                zone_group_data[3] += 1;
              }
    
              if (btn_row[index1] === 7) {
                bar_data1[0] += 1;
                bar_data2[1] += 1;
                bar_data3[0] += 1;
                bar_data4[0] += 1;
                bar_data5[3] += 1;
                bar_data6[31] += 1;
                bar_data8[2] += 1;
                zone_group_data[3] += 1;
              }
    
              if (btn_row[index1] === 28) {
                bar_data1[1] += 1;
                bar_data2[0] += 1;
                bar_data3[1] += 1;
                bar_data4[2] += 1;
                bar_data5[3] += 1;
                bar_data6[32] += 1;
                zone_group_data[3] += 1;
              }
    
              if (btn_row[index1] === 12) {
                bar_data1[0] += 1;
                bar_data2[0] += 1;
                bar_data3[0] += 1;
                bar_data4[0] += 1;
                bar_data5[3] += 1;
                bar_data6[33] += 1;
                bar_data8[0] += 1;
                zone_group_data[3] += 1;
              }
    
              if (btn_row[index1] === 35) {
                bar_data1[1] += 1;
                bar_data2[1] += 1;
                bar_data3[1] += 1;
                bar_data4[2] += 1;
                bar_data5[3] += 1;
                bar_data6[34] += 1;
                bar_data8[1] += 1;
                zone_group_data[3] += 1;
              }
    
              if (btn_row[index1] === 3) {
                bar_data1[0] += 1;
                bar_data2[1] += 1;
                bar_data3[0] += 1;
                bar_data4[0] += 1;
                bar_data5[3] += 1;
                bar_data6[35] += 1;
                bar_data8[0] += 1;
                zone_group_data[3] += 1;
              }
    
              if (btn_row[index1] === 26) {
                bar_data1[1] += 1;
                bar_data2[0] += 1;
                bar_data3[1] += 1;
                bar_data4[2] += 1;
                bar_data5[3] += 1;
                bar_data6[36] += 1;
                bar_data8[1] += 1;
                zone_group_data[3] += 1;
              }
            }
            
            let last_num = filter_length - 1;
            let last_position = parseInt(this.state.filterNumber, 10) < btn_row.length ? btn_row[filter_length] : 0;
            for (let btn_index = last_num; btn_index >= 0; btn_index--) {
              btn_row_data.splice(0, 0, btn_row[btn_index]);
              if (btn_position[last_position] === btn_position[btn_row[btn_index]]) {
                // bar_data7[0] += 1;
              } else {
                let btn_index1 = Math.abs(btn_position[btn_row[btn_index]] - btn_position[last_position]) - 1;
                if (btn_index1 >= 18) {
                  btn_index1 = Math.abs(btn_index1 - 35);
                }
                // bar_data7[btn_index1] += 1;
              }
              last_position = btn_row[btn_index];
            }
    
            last_num = btn_row.length - 1;
            last_position = 0;
            for (let btn_index2 = last_num; btn_index2 >= 0; btn_index2--) {
              // btn_row_data.splice(0, 0, btn_row[btn_index2]);
              if (btn_position[last_position] === btn_position[btn_row[btn_index2]]) {
                bar_data7[0] += 1;
              } else {
                let btn_index3 = Math.abs(btn_position[btn_row[btn_index2]] - btn_position[last_position]) - 1;
                if (btn_index3 >= 18) {
                  btn_index3 = Math.abs(btn_index3 - 35);
                }
                bar_data7[btn_index3] += 1;
              }
              last_position = btn_row[btn_index2];
            }
          }
        }

        for (let pie_index = 0; pie_index < pie_row_data.length; pie_index++) {
          pie_row[pie_index] = pie_row_data[pie_index] * range1;
          if (pie_row[pie_index] > 119) {
            pie_row[pie_index] = 119;
          }
        }
        for (let zone_group_data_index = 0; zone_group_data_index < zone_group_data.length; zone_group_data_index++) {
          zone_group[zone_group_data_index] = zone_group_data[zone_group_data_index] * range2;
        }
        for (let data1_index = 0; data1_index < bar_data1.length; data1_index++) {
          data1.datasets[0].data[data1_index] = bar_data1[data1_index] * range2;
        }
        for (let data2_index = 0; data2_index < bar_data2.length; data2_index++) {
          data2.datasets[0].data[data2_index] = bar_data2[data2_index] * range2;
        }
        for (let data3_index = 0; data3_index < bar_data3.length; data3_index++) {
          data3.datasets[0].data[data3_index] = bar_data3[data3_index] * range2;
        }
        for (let data4_index = 0; data4_index < bar_data4.length; data4_index++) {
          data4.datasets[0].data[data4_index] = bar_data4[data4_index] * range2;
        }
        for (let data5_index = 0; data5_index < bar_data5.length; data5_index++) {
          data5.datasets[0].data[data5_index] = bar_data5[data5_index] * range2;
        }
        for (let data6_index = 0; data6_index < bar_data6.length; data6_index++) {
          data6.datasets[0].data[data6_index] = bar_data6[data6_index] * range2;
        }
        for (let data7_index = 0; data7_index < bar_data7.length; data7_index++) {
          data7.datasets[0].data[data7_index] = bar_data7[data7_index] * range2;
        }
        for (let data8_index = 0; data8_index < bar_data8.length; data8_index++) {
          data8.datasets[0].data[data8_index] = bar_data8[data8_index] * range2;
        }
        if (btn_row.length) {
          this.setState({
            last_position: btn_row[0],
            type: ''
          })
        } else {
          this.setState({
            last_position: 0,
            type: ''
          })
        }
        
        this.setState({
          btn_row: btn_row_data,
          btn_row_data: btn_row,
          pie_row: pie_row,
          zone_group: zone_group,
          data1: data1,
          data2: data2,
          data3: data3,
          data4: data4,
          data5: data5,
          data6: data6,
          data7: data7,
          data8: data8,
          bar_status: true,
          type: ''
        })
        this.updatePieCanvas();
        this.updateRotateCanvas();
        this.updateLineCanvas();
      }

      let page_row = this.state.page_row;
      for (var page_index = 0; page_index < page_row.length; page_index++) {
        if (page_row[page_index]['active'] === 1) {
          let data = {};
          data['dev'] = 0;
          data['page_id'] = page_row[page_index]['id'];
          data['times'] = [this.state.minutes, this.state.seconds];
          data['btn_row'] = btn_row;
          data['pie_row'] = pie_row_data;
          data['zone_group'] = zone_group_data;
          data['bar_data1'] = bar_data1;
          data['bar_data2'] = bar_data2;
          data['bar_data3'] = bar_data3;
          data['bar_data4'] = bar_data4;
          data['bar_data5'] = bar_data5;
          data['bar_data6'] = bar_data6;
          data['bar_data7'] = bar_data7;
          data['bar_data8'] = bar_data8;

          PageService.save_page(data).then(function(res) {
            if (res.data.success) {
              // console.log('success');
            } else {
              console.log('fail');
            }
          })
        }
      }
    }
    this.setState({
      cSelected: [],
      cSelected_status: false,
      type: ''
    })
  }

  undoClick = () => {
    let range1 = parseInt(this.state.range_1, 10);
    let range2 = parseInt(this.state.range_2, 10);
    let temp = this.state.temp;
    let pie_row = this.state.pie_row;
    let zone_group = this.state.zone_group;
    let data1 = this.state.data1;
    let data2 = this.state.data2;
    let data3 = this.state.data3;
    let data4 = this.state.data4;
    let data5 = this.state.data5;
    let data6 = this.state.data6;
    let data7 = this.state.data7;
    let data8 = this.state.data8;
    let angle_row = [];
    if (temp.btn_row_data.length) {
      let last_num = temp.btn_row_data.length - 1;
      let last_position = 0;
      for (let btn_index2 = last_num; btn_index2 >= 0; btn_index2--) {
        if (btn_position[last_position] === btn_position[temp.btn_row_data[btn_index2]]) {
          angle_row.splice(0, 0, angle_array[0]);
        } else {
          let btn_index3 = Math.abs(btn_position[temp.btn_row_data[btn_index2]] - btn_position[last_position]) - 1;
          if (btn_index3 >= 18) {
            btn_index3 = Math.abs(btn_index3 - 35);
          }
          angle_row.splice(0, 0, angle_array[btn_index3]);
        }
        last_position = temp.btn_row_data[btn_index2];
      }
    }
    for (var index = 0; index < temp.pie_row_data.length; index++) {
      pie_row[index] = temp.pie_row_data[index] * range1;
      if (pie_row[index] > 119) {
        pie_row[index] = 119;
      }
    }
    for (let zone_group_data_index = 0; zone_group_data_index < temp.zone_group_data.length; zone_group_data_index++) {
      zone_group[zone_group_data_index] = temp.zone_group_data[zone_group_data_index] * range2;
    }
    for (let data1_index = 0; data1_index < temp.bar_data1.length; data1_index++) {
      data1.datasets[0].data[data1_index] = temp.bar_data1[data1_index] * range2;
    }
    for (let data2_index = 0; data2_index < temp.bar_data2.length; data2_index++) {
      data2.datasets[0].data[data2_index] = temp.bar_data2[data2_index] * range2;
    }
    for (let data3_index = 0; data3_index < temp.bar_data3.length; data3_index++) {
      data3.datasets[0].data[data3_index] = temp.bar_data3[data3_index] * range2;
    }
    for (let data4_index = 0; data4_index < temp.bar_data4.length; data4_index++) {
      data4.datasets[0].data[data4_index] = temp.bar_data4[data4_index] * range2;
    }
    for (let data5_index = 0; data5_index < temp.bar_data5.length; data5_index++) {
      data5.datasets[0].data[data5_index] = temp.bar_data5[data5_index] * range2;
    }
    for (let data6_index = 0; data6_index < temp.bar_data6.length; data6_index++) {
      data6.datasets[0].data[data6_index] = temp.bar_data6[data6_index] * range2;
    }
    for (let data7_index = 0; data7_index < temp.bar_data7.length; data7_index++) {
      data7.datasets[0].data[data7_index] = temp.bar_data7[data7_index] * range2;
    }
    for (let data8_index = 0; data8_index < temp.bar_data8.length; data8_index++) {
      data8.datasets[0].data[data8_index] = temp.bar_data8[data8_index] * range2;
    }
    this.setState({
      pie_row_data: temp.pie_row_data,
      zone_group_data: temp.zone_group_data,
      bar_data1: temp.bar_data1,
      bar_data2: temp.bar_data2,
      bar_data3: temp.bar_data3,
      bar_data4: temp.bar_data4,
      bar_data5: temp.bar_data5,
      bar_data6: temp.bar_data6,
      bar_data7: temp.bar_data7,
      bar_data8: temp.bar_data8,
      angle_row: angle_row,
      cSelected: [],
      cSelected_status: false,
      undo_status: false,
      type: ''
    })

    if (!this.state.isFilter) {
      this.setState({
        btn_row: temp.btn_row_data,
        btn_row_data: temp.btn_row_data,
        pie_row: pie_row,
        zone_group: zone_group,
        data1: data1,
        data2: data2,
        data3: data3,
        data4: data4,
        data5: data5,
        data6: data6,
        data7: data7,
        data8: data8,
        bar_status: true,
        type: ''
      })
      if (temp.btn_row_data.length) {
        this.setState({
          last_position: temp.btn_row_data[0],
          type: ''
        })
      } else {
        this.setState({
          last_position: 0,
          type: ''
        })
      }
      this.updatePieCanvas();
      this.updateRotateCanvas();
      this.updateLineCanvas();
    } else {
      let btn_row_data = [];
      let bar_data1 = [0, 0];
      let bar_data2 = [0, 0];
      let bar_data3 = [0, 0];
      let bar_data4 = [0, 0, 0];
      let bar_data5 = [0, 0, 0, 0];
      let bar_data6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
      let bar_data7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
      let bar_data8 = [0, 0, 0];
      let pie_row_data = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
      let zone_group_data = [0, 0, 0, 0];
      let btn_row = temp.btn_row_data;
      if (!this.state.isCheckedAllData) {
        if (btn_row.length) {
          let filter_length = parseInt(this.state.filterNumber, 10) < btn_row.length ? parseInt(this.state.filterNumber, 10) : btn_row.length;
          for (let index1 = 0; index1 < filter_length; index1++) {
            // zone 1
            if (btn_row[index1] === 0) {
              pie_row_data[0] += 5;
              if (pie_row_data[0] > 119) {
                pie_row_data[0] = 119;
              }
              zone_group_data[0] += 1;
              bar_data5[0] += 1;
              bar_data6[0] += 1;
            }

            if (btn_row[index1] === 32) {
              pie_row_data[32] += 5;
              if (pie_row_data[32] > 119) {
                pie_row_data[32] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[0] += 1;
              bar_data6[1] += 1;
              bar_data8[1] += 1;
              zone_group_data[0] += 1;
            }

            if (btn_row[index1] === 15) {
              pie_row_data[15] += 5;
              if (pie_row_data[15] > 119) {
                pie_row_data[15] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[0] += 1;
              bar_data6[2] += 1;
              bar_data8[0] += 1;
              zone_group_data[0] += 1;
            }

            if (btn_row[index1] === 19) {
              pie_row_data[19] += 5;
              if (pie_row_data[19] > 119) {
                pie_row_data[19] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[0] += 1;
              bar_data6[3] += 1;
              bar_data8[2] += 1;
              zone_group_data[0] += 1;
            }

            if (btn_row[index1] === 4) {
              pie_row_data[4] += 5;
              if (pie_row_data[4] > 119) {
                pie_row_data[4] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[0] += 1;
              bar_data6[4] += 1;
              bar_data8[2] += 1;
              zone_group_data[0] += 1;
            }

            if (btn_row[index1] === 21) {
              pie_row_data[21] += 5;
              if (pie_row_data[21] > 119) {
                pie_row_data[21] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[0] += 1;
              bar_data6[5] += 1;
              bar_data8[0] += 1;
              zone_group_data[0] += 1;
            }

            if (btn_row[index1] === 2) {
              pie_row_data[2] += 5;
              if (pie_row_data[2] > 119) {
                pie_row_data[2] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[0] += 1;
              bar_data6[6] += 1;
              bar_data8[1] += 1;
              zone_group_data[0] += 1;
            }

            if (btn_row[index1] === 25) {
              pie_row_data[25] += 5;
              if (pie_row_data[25] > 119) {
                pie_row_data[25] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[0] += 1;
              bar_data7[6] += 1;
              bar_data8[2] += 1;
              zone_group_data[0] += 1;
            }

            if (btn_row[index1] === 17) {
              pie_row_data[17] += 5;
              if (pie_row_data[17] > 119) {
                pie_row_data[17] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[0] += 1;
              bar_data6[8] += 1;
              bar_data8[1] += 1;
              zone_group_data[0] += 1;
            }
              
            // zone 2
            if (btn_row[index1] === 34) {
              pie_row_data[34] += 5;
              if (pie_row_data[34] > 119) {
                pie_row_data[34] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[1] += 1;
              bar_data6[9] += 1;
              bar_data8[2] += 1;
              zone_group_data[1] += 1;
            }

            if (btn_row[index1] === 6) {
              pie_row_data[6] += 5;
              if (pie_row_data[6] > 119) {
                pie_row_data[6] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[1] += 1;
              bar_data6[10] += 1;
              bar_data8[0] += 1;
              zone_group_data[1] += 1;
            }

            if (btn_row[index1] === 27) {
              pie_row_data[27] += 5;
              if (pie_row_data[27] > 119) {
                pie_row_data[27] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[1] += 1;
              bar_data6[11] += 1;
              bar_data8[0] += 1;
              zone_group_data[1] += 1;
            }

            if (btn_row[index1] === 13) {
              pie_row_data[13] += 5;
              if (pie_row_data[13] > 119) {
                pie_row_data[13] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[1] += 1;
              bar_data6[12] += 1;
              bar_data8[2] += 1;
              zone_group_data[1] += 1;
            }

            if (btn_row[index1] === 36) {
              pie_row_data[36] += 5;
              if (pie_row_data[36] > 119) {
                pie_row_data[36] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[1] += 1;
              bar_data6[13] += 1;
              bar_data8[0] += 1;
              zone_group_data[1] += 1;
            }

            if (btn_row[index1] === 11) {
              pie_row_data[11] += 5;
              if (pie_row_data[11] > 119) {
                pie_row_data[11] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[1] += 1;
              bar_data6[14] += 1;
              bar_data8[1] += 1;
              zone_group_data[1] += 1;
            }

            if (btn_row[index1] === 30) {
              pie_row_data[30] += 5;
              if (pie_row_data[30] > 119) {
                pie_row_data[30] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[1] += 1;
              bar_data6[15] += 1;
              bar_data8[0] += 1;
              zone_group_data[1] += 1;
            }

            if (btn_row[index1] === 8) {
              pie_row_data[8] += 5;
              if (pie_row_data[8] > 119) {
                pie_row_data[8] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[1] += 1;
              bar_data6[16] += 1;
              bar_data8[1] += 1;
              zone_group_data[1] += 1;
            }

            if (btn_row[index1] === 23) {
              pie_row_data[23] += 5;
              if (pie_row_data[23] > 119) {
                pie_row_data[23] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[1] += 1;
              bar_data6[17] += 1;
              bar_data8[1] += 1;
              zone_group_data[1] += 1;
            }

            if (btn_row[index1] === 10) {
              pie_row_data[10] += 5;
              if (pie_row_data[10] > 119) {
                pie_row_data[10] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[1] += 1;
              bar_data6[18] += 1;
              bar_data8[2] += 1;
              zone_group_data[1] += 1;
            }

            // zone 3
            if (btn_row[index1] === 5) {
              pie_row_data[5] += 5;
              if (pie_row_data[5] > 119) {
                pie_row_data[5] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[2] += 1;
              bar_data6[19] += 1;
              bar_data8[1] += 1;
              zone_group_data[2] += 1;
            }

            if (btn_row[index1] === 24) {
              pie_row_data[24] += 5;
              if (pie_row_data[24] > 119) {
                pie_row_data[24] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[2] += 1;
              bar_data6[20] += 1;
              bar_data8[0] += 1;
              zone_group_data[2] += 1;
            }

            if (btn_row[index1] === 16) {
              pie_row_data[16] += 5;
              if (pie_row_data[16] > 119) {
                pie_row_data[16] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[2] += 1;
              bar_data6[21] += 1;
              bar_data8[2] += 1;
              zone_group_data[2] += 1;
            }

            if (btn_row[index1] === 33) {
              pie_row_data[33] += 5;
              if (pie_row_data[33] > 119) {
                pie_row_data[33] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[2] += 1;
              bar_data6[22] += 1;
              bar_data8[0] += 1;
              zone_group_data[2] += 1;
            }

            if (btn_row[index1] === 1) {
              pie_row_data[1] += 5;
              if (pie_row_data[1] > 119) {
                pie_row_data[1] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[2] += 1;
              bar_data6[23] += 1;
              bar_data8[2] += 1;
              zone_group_data[2] += 1;
            }

            if (btn_row[index1] === 20) {
              pie_row_data[20] += 5;
              if (pie_row_data[20] > 119) {
                pie_row_data[20] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[2] += 1;
              bar_data6[24] += 1;
              bar_data8[1] += 1;
              zone_group_data[2] += 1;
            }

            if (btn_row[index1] === 14) {
              pie_row_data[14] += 5;
              if (pie_row_data[14] > 119) {
                pie_row_data[14] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[2] += 1;
              bar_data6[25] += 1;
              bar_data8[1] += 1;
              zone_group_data[2] += 1;
            }

            if (btn_row[index1] === 31) {
              pie_row_data[31] += 5;
              if (pie_row_data[31] > 119) {
                pie_row_data[31] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[2] += 1;
              bar_data6[26] += 1;
              bar_data8[2] += 1;
              zone_group_data[2] += 1;
            }

            if (btn_row[index1] === 9) {
              pie_row_data[9] += 5;
              if (pie_row_data[9] > 119) {
                pie_row_data[9] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[2] += 1;
              bar_data6[27] += 1;
              bar_data8[0] += 1;
              zone_group_data[2] += 1;
            }

            // zone 4
            if (btn_row[index1] === 22) {
              pie_row_data[22] += 5;
              if (pie_row_data[22] > 119) {
                pie_row_data[22] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[3] += 1;
              bar_data6[28] += 1;
              bar_data8[2] += 1;
              zone_group_data[3] += 1;
            }

            if (btn_row[index1] === 18) {
              pie_row_data[18] += 5;
              if (pie_row_data[18] > 119) {
                pie_row_data[18] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[3] += 1;
              bar_data6[29] += 1;
              zone_group_data[3] += 1;
            }

            if (btn_row[index1] === 29) {
              pie_row_data[29] += 5;
              if (pie_row_data[29] > 119) {
                pie_row_data[29] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[3] += 1;
              bar_data6[30] += 1;
              bar_data8[1] += 1;
              zone_group_data[3] += 1;
            }

            if (btn_row[index1] === 7) {
              pie_row_data[7] += 5;
              if (pie_row_data[7] > 119) {
                pie_row_data[7] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[3] += 1;
              bar_data6[31] += 1;
              bar_data8[2] += 1;
              zone_group_data[3] += 1;
            }

            if (btn_row[index1] === 28) {
              pie_row_data[28] += 5;
              if (pie_row_data[28] > 119) {
                pie_row_data[28] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[3] += 1;
              bar_data6[32] += 1;
              zone_group_data[3] += 1;
            }

            if (btn_row[index1] === 12) {
              pie_row_data[12] += 5;
              if (pie_row_data[12] > 119) {
                pie_row_data[12] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[3] += 1;
              bar_data6[33] += 1;
              bar_data8[0] += 1;
              zone_group_data[3] += 1;
            }

            if (btn_row[index1] === 35) {
              pie_row_data[35] += 5;
              if (pie_row_data[35] > 119) {
                pie_row_data[35] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[3] += 1;
              bar_data6[34] += 1;
              bar_data8[1] += 1;
              zone_group_data[3] += 1;
            }

            if (btn_row[index1] === 3) {
              pie_row_data[3] += 5;
              if (pie_row_data[3] > 119) {
                pie_row_data[3] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[3] += 1;
              bar_data6[35] += 1;
              bar_data8[0] += 1;
              zone_group_data[3] += 1;
            }

            if (btn_row[index1] === 26) {
              pie_row_data[26] += 5;
              if (pie_row_data[26] > 119) {
                pie_row_data[26] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[3] += 1;
              bar_data6[36] += 1;
              bar_data8[1] += 1;
              zone_group_data[3] += 1;
            }
          }

          let last_num = filter_length - 1;
          let last_position = parseInt(this.state.filterNumber, 10) < btn_row.length ? btn_row[filter_length] : 0;
          for (let btn_index = last_num; btn_index >= 0; btn_index--) {
            btn_row_data.splice(0, 0, btn_row[btn_index]);
            if (btn_position[last_position] === btn_position[btn_row[btn_index]]) {
              bar_data7[0] += 1;
            } else {
              let btn_index1 = Math.abs(btn_position[btn_row[btn_index]] - btn_position[last_position]) - 1;
              if (btn_index1 >= 18) {
                btn_index1 = Math.abs(btn_index1 - 35);
              }
              bar_data7[btn_index1] += 1;
            }
            last_position = btn_row[btn_index];
          }
        }
      } else {
        if (btn_row.length) {
          let filter_length = parseInt(this.state.filterNumber, 10) < btn_row.length ? parseInt(this.state.filterNumber, 10) : btn_row.length;

          for (let index = 0; index < filter_length; index++) {
            pie_row_data[btn_row[index]] += 5;
            if (pie_row_data[btn_row[index]] > 119) {
              pie_row_data[btn_row[index]] = 119;
            }
          }
          for (let index1 = 0; index1 < btn_row.length; index1++) {
            // zone 1
            if (btn_row[index1] === 0) {
              zone_group_data[0] += 1;
              bar_data5[0] += 1;
              bar_data6[0] += 1;
            }
  
            if (btn_row[index1] === 32) {
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[0] += 1;
              bar_data6[1] += 1;
              bar_data8[1] += 1;
              zone_group_data[0] += 1;
            }
  
            if (btn_row[index1] === 15) {
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[0] += 1;
              bar_data6[2] += 1;
              bar_data8[0] += 1;
              zone_group_data[0] += 1;
            }
  
            if (btn_row[index1] === 19) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[0] += 1;
              bar_data6[3] += 1;
              bar_data8[2] += 1;
              zone_group_data[0] += 1;
            }
  
            if (btn_row[index1] === 4) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[0] += 1;
              bar_data6[4] += 1;
              bar_data8[2] += 1;
              zone_group_data[0] += 1;
            }
  
            if (btn_row[index1] === 21) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[0] += 1;
              bar_data6[5] += 1;
              bar_data8[0] += 1;
              zone_group_data[0] += 1;
            }
  
            if (btn_row[index1] === 2) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[0] += 1;
              bar_data6[6] += 1;
              bar_data8[1] += 1;
              zone_group_data[0] += 1;
            }
  
            if (btn_row[index1] === 25) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[0] += 1;
              bar_data7[6] += 1;
              bar_data8[2] += 1;
              zone_group_data[0] += 1;
            }
  
            if (btn_row[index1] === 17) {
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[0] += 1;
              bar_data6[8] += 1;
              bar_data8[1] += 1;
              zone_group_data[0] += 1;
            }
              
            // zone 2
            if (btn_row[index1] === 34) {
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[1] += 1;
              bar_data6[9] += 1;
              bar_data8[2] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 6) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[1] += 1;
              bar_data6[10] += 1;
              bar_data8[0] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 27) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[1] += 1;
              bar_data6[11] += 1;
              bar_data8[0] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 13) {
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[1] += 1;
              bar_data6[12] += 1;
              bar_data8[2] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 36) {
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[1] += 1;
              bar_data6[13] += 1;
              bar_data8[0] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 11) {
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[1] += 1;
              bar_data6[14] += 1;
              bar_data8[1] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 30) {
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[1] += 1;
              bar_data6[15] += 1;
              bar_data8[0] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 8) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[1] += 1;
              bar_data6[16] += 1;
              bar_data8[1] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 23) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[1] += 1;
              bar_data6[17] += 1;
              bar_data8[1] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 10) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[1] += 1;
              bar_data6[18] += 1;
              bar_data8[2] += 1;
              zone_group_data[1] += 1;
            }
  
            // zone 3
            if (btn_row[index1] === 5) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[2] += 1;
              bar_data6[19] += 1;
              bar_data8[1] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 24) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[2] += 1;
              bar_data6[20] += 1;
              bar_data8[0] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 16) {
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[2] += 1;
              bar_data6[21] += 1;
              bar_data8[2] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 33) {
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[2] += 1;
              bar_data6[22] += 1;
              bar_data8[0] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 1) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[2] += 1;
              bar_data6[23] += 1;
              bar_data8[2] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 20) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[2] += 1;
              bar_data6[24] += 1;
              bar_data8[1] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 14) {
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[2] += 1;
              bar_data6[25] += 1;
              bar_data8[1] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 31) {
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[2] += 1;
              bar_data6[26] += 1;
              bar_data8[2] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 9) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[2] += 1;
              bar_data6[27] += 1;
              bar_data8[0] += 1;
              zone_group_data[2] += 1;
            }
  
            // zone 4
            if (btn_row[index1] === 22) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[3] += 1;
              bar_data6[28] += 1;
              bar_data8[2] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 18) {
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[3] += 1;
              bar_data6[29] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 29) {
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[3] += 1;
              bar_data6[30] += 1;
              bar_data8[1] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 7) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[3] += 1;
              bar_data6[31] += 1;
              bar_data8[2] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 28) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[3] += 1;
              bar_data6[32] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 12) {
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[3] += 1;
              bar_data6[33] += 1;
              bar_data8[0] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 35) {
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[3] += 1;
              bar_data6[34] += 1;
              bar_data8[1] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 3) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[3] += 1;
              bar_data6[35] += 1;
              bar_data8[0] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 26) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[3] += 1;
              bar_data6[36] += 1;
              bar_data8[1] += 1;
              zone_group_data[3] += 1;
            }
          }
          
          let last_num = filter_length - 1;
          let last_position = parseInt(this.state.filterNumber, 10) < btn_row.length ? btn_row[filter_length] : 0;
          for (let btn_index = last_num; btn_index >= 0; btn_index--) {
            btn_row_data.splice(0, 0, btn_row[btn_index]);
            if (btn_position[last_position] === btn_position[btn_row[btn_index]]) {
              // bar_data7[0] += 1;
            } else {
              let btn_index1 = Math.abs(btn_position[btn_row[btn_index]] - btn_position[last_position]) - 1;
              if (btn_index1 >= 18) {
                btn_index1 = Math.abs(btn_index1 - 35);
              }
              // bar_data7[btn_index1] += 1;
            }
            last_position = btn_row[btn_index];
          }
  
          last_num = btn_row.length - 1;
          last_position = 0;
          for (let btn_index2 = last_num; btn_index2 >= 0; btn_index2--) {
            // btn_row_data.splice(0, 0, btn_row[btn_index2]);
            if (btn_position[last_position] === btn_position[btn_row[btn_index2]]) {
              bar_data7[0] += 1;
            } else {
              let btn_index3 = Math.abs(btn_position[btn_row[btn_index2]] - btn_position[last_position]) - 1;
              if (btn_index3 >= 18) {
                btn_index3 = Math.abs(btn_index3 - 35);
              }
              bar_data7[btn_index3] += 1;
            }
            last_position = btn_row[btn_index2];
          }
        }
      }

      for (let pie_index = 0; pie_index < pie_row_data.length; pie_index++) {
        pie_row[pie_index] = pie_row_data[pie_index] * range1;
        if (pie_row[pie_index] > 119) {
          pie_row[pie_index] = 119;
        }
      }
      for (let zone_group_data_index = 0; zone_group_data_index < zone_group_data.length; zone_group_data_index++) {
        zone_group[zone_group_data_index] = zone_group_data[zone_group_data_index] * range2;
      }
      for (let data1_index = 0; data1_index < bar_data1.length; data1_index++) {
        data1.datasets[0].data[data1_index] = bar_data1[data1_index] * range2;
      }
      for (let data2_index = 0; data2_index < bar_data2.length; data2_index++) {
        data2.datasets[0].data[data2_index] = bar_data2[data2_index] * range2;
      }
      for (let data3_index = 0; data3_index < bar_data3.length; data3_index++) {
        data3.datasets[0].data[data3_index] = bar_data3[data3_index] * range2;
      }
      for (let data4_index = 0; data4_index < bar_data4.length; data4_index++) {
        data4.datasets[0].data[data4_index] = bar_data4[data4_index] * range2;
      }
      for (let data5_index = 0; data5_index < bar_data5.length; data5_index++) {
        data5.datasets[0].data[data5_index] = bar_data5[data5_index] * range2;
      }
      for (let data6_index = 0; data6_index < bar_data6.length; data6_index++) {
        data6.datasets[0].data[data6_index] = bar_data6[data6_index] * range2;
      }
      for (let data7_index = 0; data7_index < bar_data7.length; data7_index++) {
        data7.datasets[0].data[data7_index] = bar_data7[data7_index] * range2;
      }
      for (let data8_index = 0; data8_index < bar_data8.length; data8_index++) {
        data8.datasets[0].data[data8_index] = bar_data8[data8_index] * range2;
      }
      
      this.setState({
        btn_row: btn_row_data,
        btn_row_data: btn_row,
        last_position: btn_row[0],
        pie_row: pie_row,
        zone_group: zone_group,
        data1: data1,
        data2: data2,
        data3: data3,
        data4: data4,
        data5: data5,
        data6: data6,
        data7: data7,
        data8: data8,
        bar_status: true,
        type: ''
      })
      if (btn_row.length) {
        this.setState({
          last_position: btn_row[0],
          type: ''
        })
      } else {
        this.setState({
          last_position: 0,
          type: ''
        })
      }
      this.updatePieCanvas();
      this.updateRotateCanvas();
      this.updateLineCanvas();
      
    }

    let page_row = this.state.page_row;
    for (var page_index = 0; page_index < page_row.length; page_index++) {
      if (page_row[page_index]['active'] === 1) {
        let data = {};
        data['dev'] = 0;
        data['page_id'] = page_row[page_index]['id'];
        data['times'] = [this.state.minutes, this.state.seconds];
        data['btn_row'] = temp.btn_row_data;
        data['pie_row'] = temp.pie_row_data;
        data['zone_group'] = temp.zone_group_data;
        data['bar_data1'] = temp.bar_data1;
        data['bar_data2'] = temp.bar_data2;
        data['bar_data3'] = temp.bar_data3;
        data['bar_data4'] = temp.bar_data4;
        data['bar_data5'] = temp.bar_data5;
        data['bar_data6'] = temp.bar_data6;
        data['bar_data7'] = temp.bar_data7;
        data['bar_data8'] = temp.bar_data8;
        
        PageService.save_page(data).then(function(res) {
          if (res.data.success) {
            // console.log('success');
          } else {
            console.log('fail');
          }
        })
      }
    }
  }

  addFilterNum = () => {
    let filterNumber = (!this.state.filterNumber || !Number(parseInt(this.state.filterNumber, 10))) ? 1 : parseInt(this.state.filterNumber, 10) + 1;
    this.setState({
      filterNumber: filterNumber,
      isSetFilter: false,
      type: ''
    })
    let page_row = this.state.page_row;
    if (page_row) {
      for (var index = 0; index < page_row.length; index++) {
        if (page_row[index]['active'] === 1) {
          page_row[index]['filter_num'] = filterNumber;
        }
      }
      this.setState({
        page_row: page_row,
        type: ''
      })
      window.localStorage.setItem('page_row', JSON.stringify(page_row));
    }
    if (this.state.isFilter) {
      this.filter_status = true;
    }
  }

  decFilterNum = () => {
    let filterNumber = (parseInt(this.state.filterNumber, 10) === 1 || !this.state.filterNumber || !Number(parseInt(this.state.filterNumber, 10))) ? 1 : parseInt(this.state.filterNumber, 10) - 1;
    this.setState({
      filterNumber: filterNumber,
      isSetFilter: false,
      type: ''
    })
    let page_row = this.state.page_row;
    if (page_row) {
      for (var index = 0; index < page_row.length; index++) {
        if (page_row[index]['active'] === 1) {
          page_row[index]['filter_num'] = filterNumber;
        }
      }
      this.setState({
        page_row: page_row,
        type: ''
      })
      window.localStorage.setItem('page_row', JSON.stringify(page_row));
    }
    if (this.state.isFilter) {
      this.filter_status = true;
    }
  }

  updateByFilter = () => {
    let page_row = this.state.page_row;
    if (page_row) {
      for (var index = 0; index < page_row.length; index++) {
        if (page_row[index]['active'] === 1) {
          page_row[index]['filter_status'] = true;
        }
      }
      this.setState({
        page_row: page_row,
        type: ''
      })
      window.localStorage.setItem('page_row', JSON.stringify(page_row));
      let btn_row_data = [];
      let bar_data1 = [0, 0];
      let bar_data2 = [0, 0];
      let bar_data3 = [0, 0];
      let bar_data4 = [0, 0, 0];
      let bar_data5 = [0, 0, 0, 0];
      let bar_data6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
      let bar_data7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
      let bar_data8 = [0, 0, 0];
      let pie_row_data = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
      let zone_group_data = [0, 0, 0, 0];
      var range1 = parseInt(this.state.range_1, 10);
      var range2 = parseInt(this.state.range_2, 10);
      let btn_row = this.state.btn_row_data;
      let pie_row = this.state.pie_row;
      let zone_group = this.state.zone_group;
      let data1 = this.state.data1;
      let data2 = this.state.data2;
      let data3 = this.state.data3;
      let data4 = this.state.data4;
      let data5 = this.state.data5;
      let data6 = this.state.data6;
      let data7 = this.state.data7;
      let data8 = this.state.data8;
      let angle_row = [];
      if (!this.state.isCheckedAllData) {
        if (btn_row.length) {
          let filter_length = parseInt(this.state.filterNumber, 10) < btn_row.length ? parseInt(this.state.filterNumber, 10) : btn_row.length;
          for (let index1 = 0; index1 < filter_length; index1++) {
            // zone 1
            if (btn_row[index1] === 0) {
              pie_row_data[0] += 5;
              if (pie_row_data[0] > 119) {
                pie_row_data[0] = 119;
              }
              zone_group_data[0] += 1;
              bar_data5[0] += 1;
              bar_data6[0] += 1;
            }

            if (btn_row[index1] === 32) {
              pie_row_data[32] += 5;
              if (pie_row_data[32] > 119) {
                pie_row_data[32] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[0] += 1;
              bar_data6[1] += 1;
              bar_data8[1] += 1;
              zone_group_data[0] += 1;
            }

            if (btn_row[index1] === 15) {
              pie_row_data[15] += 5;
              if (pie_row_data[15] > 119) {
                pie_row_data[15] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[0] += 1;
              bar_data6[2] += 1;
              bar_data8[0] += 1;
              zone_group_data[0] += 1;
            }

            if (btn_row[index1] === 19) {
              pie_row_data[19] += 5;
              if (pie_row_data[19] > 119) {
                pie_row_data[19] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[0] += 1;
              bar_data6[3] += 1;
              bar_data8[2] += 1;
              zone_group_data[0] += 1;
            }

            if (btn_row[index1] === 4) {
              pie_row_data[4] += 5;
              if (pie_row_data[4] > 119) {
                pie_row_data[4] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[0] += 1;
              bar_data6[4] += 1;
              bar_data8[2] += 1;
              zone_group_data[0] += 1;
            }

            if (btn_row[index1] === 21) {
              pie_row_data[21] += 5;
              if (pie_row_data[21] > 119) {
                pie_row_data[21] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[0] += 1;
              bar_data6[5] += 1;
              bar_data8[0] += 1;
              zone_group_data[0] += 1;
            }

            if (btn_row[index1] === 2) {
              pie_row_data[2] += 5;
              if (pie_row_data[2] > 119) {
                pie_row_data[2] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[0] += 1;
              bar_data6[6] += 1;
              bar_data8[1] += 1;
              zone_group_data[0] += 1;
            }

            if (btn_row[index1] === 25) {
              pie_row_data[25] += 5;
              if (pie_row_data[25] > 119) {
                pie_row_data[25] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[0] += 1;
              bar_data7[6] += 1;
              bar_data8[2] += 1;
              zone_group_data[0] += 1;
            }

            if (btn_row[index1] === 17) {
              pie_row_data[17] += 5;
              if (pie_row_data[17] > 119) {
                pie_row_data[17] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[0] += 1;
              bar_data6[8] += 1;
              bar_data8[1] += 1;
              zone_group_data[0] += 1;
            }
              
            // zone 2
            if (btn_row[index1] === 34) {
              pie_row_data[34] += 5;
              if (pie_row_data[34] > 119) {
                pie_row_data[34] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[1] += 1;
              bar_data6[9] += 1;
              bar_data8[2] += 1;
              zone_group_data[1] += 1;
            }

            if (btn_row[index1] === 6) {
              pie_row_data[6] += 5;
              if (pie_row_data[6] > 119) {
                pie_row_data[6] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[1] += 1;
              bar_data6[10] += 1;
              bar_data8[0] += 1;
              zone_group_data[1] += 1;
            }

            if (btn_row[index1] === 27) {
              pie_row_data[27] += 5;
              if (pie_row_data[27] > 119) {
                pie_row_data[27] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[1] += 1;
              bar_data6[11] += 1;
              bar_data8[0] += 1;
              zone_group_data[1] += 1;
            }

            if (btn_row[index1] === 13) {
              pie_row_data[13] += 5;
              if (pie_row_data[13] > 119) {
                pie_row_data[13] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[1] += 1;
              bar_data6[12] += 1;
              bar_data8[2] += 1;
              zone_group_data[1] += 1;
            }

            if (btn_row[index1] === 36) {
              pie_row_data[36] += 5;
              if (pie_row_data[36] > 119) {
                pie_row_data[36] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[1] += 1;
              bar_data6[13] += 1;
              bar_data8[0] += 1;
              zone_group_data[1] += 1;
            }

            if (btn_row[index1] === 11) {
              pie_row_data[11] += 5;
              if (pie_row_data[11] > 119) {
                pie_row_data[11] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[1] += 1;
              bar_data6[14] += 1;
              bar_data8[1] += 1;
              zone_group_data[1] += 1;
            }

            if (btn_row[index1] === 30) {
              pie_row_data[30] += 5;
              if (pie_row_data[30] > 119) {
                pie_row_data[30] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[1] += 1;
              bar_data6[15] += 1;
              bar_data8[0] += 1;
              zone_group_data[1] += 1;
            }

            if (btn_row[index1] === 8) {
              pie_row_data[8] += 5;
              if (pie_row_data[8] > 119) {
                pie_row_data[8] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[1] += 1;
              bar_data6[16] += 1;
              bar_data8[1] += 1;
              zone_group_data[1] += 1;
            }

            if (btn_row[index1] === 23) {
              pie_row_data[23] += 5;
              if (pie_row_data[23] > 119) {
                pie_row_data[23] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[1] += 1;
              bar_data6[17] += 1;
              bar_data8[1] += 1;
              zone_group_data[1] += 1;
            }

            if (btn_row[index1] === 10) {
              pie_row_data[10] += 5;
              if (pie_row_data[10] > 119) {
                pie_row_data[10] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[1] += 1;
              bar_data6[18] += 1;
              bar_data8[2] += 1;
              zone_group_data[1] += 1;
            }

            // zone 3
            if (btn_row[index1] === 5) {
              pie_row_data[5] += 5;
              if (pie_row_data[5] > 119) {
                pie_row_data[5] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[2] += 1;
              bar_data6[19] += 1;
              bar_data8[1] += 1;
              zone_group_data[2] += 1;
            }

            if (btn_row[index1] === 24) {
              pie_row_data[24] += 5;
              if (pie_row_data[24] > 119) {
                pie_row_data[24] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[2] += 1;
              bar_data6[20] += 1;
              bar_data8[0] += 1;
              zone_group_data[2] += 1;
            }

            if (btn_row[index1] === 16) {
              pie_row_data[16] += 5;
              if (pie_row_data[16] > 119) {
                pie_row_data[16] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[2] += 1;
              bar_data6[21] += 1;
              bar_data8[2] += 1;
              zone_group_data[2] += 1;
            }

            if (btn_row[index1] === 33) {
              pie_row_data[33] += 5;
              if (pie_row_data[33] > 119) {
                pie_row_data[33] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[2] += 1;
              bar_data6[22] += 1;
              bar_data8[0] += 1;
              zone_group_data[2] += 1;
            }

            if (btn_row[index1] === 1) {
              pie_row_data[1] += 5;
              if (pie_row_data[1] > 119) {
                pie_row_data[1] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[2] += 1;
              bar_data6[23] += 1;
              bar_data8[2] += 1;
              zone_group_data[2] += 1;
            }

            if (btn_row[index1] === 20) {
              pie_row_data[20] += 5;
              if (pie_row_data[20] > 119) {
                pie_row_data[20] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[2] += 1;
              bar_data6[24] += 1;
              bar_data8[1] += 1;
              zone_group_data[2] += 1;
            }

            if (btn_row[index1] === 14) {
              pie_row_data[14] += 5;
              if (pie_row_data[14] > 119) {
                pie_row_data[14] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[2] += 1;
              bar_data6[25] += 1;
              bar_data8[1] += 1;
              zone_group_data[2] += 1;
            }

            if (btn_row[index1] === 31) {
              pie_row_data[31] += 5;
              if (pie_row_data[31] > 119) {
                pie_row_data[31] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[2] += 1;
              bar_data6[26] += 1;
              bar_data8[2] += 1;
              zone_group_data[2] += 1;
            }

            if (btn_row[index1] === 9) {
              pie_row_data[9] += 5;
              if (pie_row_data[9] > 119) {
                pie_row_data[9] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[2] += 1;
              bar_data6[27] += 1;
              bar_data8[0] += 1;
              zone_group_data[2] += 1;
            }

            // zone 4
            if (btn_row[index1] === 22) {
              pie_row_data[22] += 5;
              if (pie_row_data[22] > 119) {
                pie_row_data[22] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[3] += 1;
              bar_data6[28] += 1;
              bar_data8[2] += 1;
              zone_group_data[3] += 1;
            }

            if (btn_row[index1] === 18) {
              pie_row_data[18] += 5;
              if (pie_row_data[18] > 119) {
                pie_row_data[18] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[3] += 1;
              bar_data6[29] += 1;
              zone_group_data[3] += 1;
            }

            if (btn_row[index1] === 29) {
              pie_row_data[29] += 5;
              if (pie_row_data[29] > 119) {
                pie_row_data[29] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[3] += 1;
              bar_data6[30] += 1;
              bar_data8[1] += 1;
              zone_group_data[3] += 1;
            }

            if (btn_row[index1] === 7) {
              pie_row_data[7] += 5;
              if (pie_row_data[7] > 119) {
                pie_row_data[7] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[3] += 1;
              bar_data6[31] += 1;
              bar_data8[2] += 1;
              zone_group_data[3] += 1;
            }

            if (btn_row[index1] === 28) {
              pie_row_data[28] += 5;
              if (pie_row_data[28] > 119) {
                pie_row_data[28] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[3] += 1;
              bar_data6[32] += 1;
              zone_group_data[3] += 1;
            }

            if (btn_row[index1] === 12) {
              pie_row_data[12] += 5;
              if (pie_row_data[12] > 119) {
                pie_row_data[12] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[3] += 1;
              bar_data6[33] += 1;
              bar_data8[0] += 1;
              zone_group_data[3] += 1;
            }

            if (btn_row[index1] === 35) {
              pie_row_data[35] += 5;
              if (pie_row_data[35] > 119) {
                pie_row_data[35] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[3] += 1;
              bar_data6[34] += 1;
              bar_data8[1] += 1;
              zone_group_data[3] += 1;
            }

            if (btn_row[index1] === 3) {
              pie_row_data[3] += 5;
              if (pie_row_data[3] > 119) {
                pie_row_data[3] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[3] += 1;
              bar_data6[35] += 1;
              bar_data8[0] += 1;
              zone_group_data[3] += 1;
            }

            if (btn_row[index1] === 26) {
              pie_row_data[26] += 5;
              if (pie_row_data[26] > 119) {
                pie_row_data[26] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[3] += 1;
              bar_data6[36] += 1;
              bar_data8[1] += 1;
              zone_group_data[3] += 1;
            }
          }

          let last_num = filter_length - 1;
          let last_position = parseInt(this.state.filterNumber, 10) < btn_row.length ? btn_row[filter_length] : 0;
          for (let btn_index = last_num; btn_index >= 0; btn_index--) {
            btn_row_data.splice(0, 0, btn_row[btn_index]);
            if (btn_position[last_position] === btn_position[btn_row[btn_index]]) {
              bar_data7[0] += 1;
            } else {
              let btn_index1 = Math.abs(btn_position[btn_row[btn_index]] - btn_position[last_position]) - 1;
              if (btn_index1 >= 18) {
                btn_index1 = Math.abs(btn_index1 - 35);
              }
              bar_data7[btn_index1] += 1;
            }
            last_position = btn_row[btn_index];
          }
        }
      } else {
        if (btn_row.length) {
          let filter_length = parseInt(this.state.filterNumber, 10) < btn_row.length ? parseInt(this.state.filterNumber, 10) : btn_row.length;

          for (let index = 0; index < filter_length; index++) {
            pie_row_data[btn_row[index]] += 5;
            if (pie_row_data[btn_row[index]] > 119) {
              pie_row_data[btn_row[index]] = 119;
            }
          }
          for (let index1 = 0; index1 < btn_row.length; index1++) {
            // zone 1
            if (btn_row[index1] === 0) {
              zone_group_data[0] += 1;
              bar_data5[0] += 1;
              bar_data6[0] += 1;
            }
  
            if (btn_row[index1] === 32) {
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[0] += 1;
              bar_data6[1] += 1;
              bar_data8[1] += 1;
              zone_group_data[0] += 1;
            }
  
            if (btn_row[index1] === 15) {
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[0] += 1;
              bar_data6[2] += 1;
              bar_data8[0] += 1;
              zone_group_data[0] += 1;
            }
  
            if (btn_row[index1] === 19) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[0] += 1;
              bar_data6[3] += 1;
              bar_data8[2] += 1;
              zone_group_data[0] += 1;
            }
  
            if (btn_row[index1] === 4) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[0] += 1;
              bar_data6[4] += 1;
              bar_data8[2] += 1;
              zone_group_data[0] += 1;
            }
  
            if (btn_row[index1] === 21) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[0] += 1;
              bar_data6[5] += 1;
              bar_data8[0] += 1;
              zone_group_data[0] += 1;
            }
  
            if (btn_row[index1] === 2) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[0] += 1;
              bar_data6[6] += 1;
              bar_data8[1] += 1;
              zone_group_data[0] += 1;
            }
  
            if (btn_row[index1] === 25) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[0] += 1;
              bar_data7[6] += 1;
              bar_data8[2] += 1;
              zone_group_data[0] += 1;
            }
  
            if (btn_row[index1] === 17) {
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[0] += 1;
              bar_data6[8] += 1;
              bar_data8[1] += 1;
              zone_group_data[0] += 1;
            }
              
            // zone 2
            if (btn_row[index1] === 34) {
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[1] += 1;
              bar_data6[9] += 1;
              bar_data8[2] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 6) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[1] += 1;
              bar_data6[10] += 1;
              bar_data8[0] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 27) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[1] += 1;
              bar_data6[11] += 1;
              bar_data8[0] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 13) {
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[1] += 1;
              bar_data6[12] += 1;
              bar_data8[2] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 36) {
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[1] += 1;
              bar_data6[13] += 1;
              bar_data8[0] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 11) {
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[1] += 1;
              bar_data6[14] += 1;
              bar_data8[1] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 30) {
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[1] += 1;
              bar_data6[15] += 1;
              bar_data8[0] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 8) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[1] += 1;
              bar_data6[16] += 1;
              bar_data8[1] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 23) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[1] += 1;
              bar_data6[17] += 1;
              bar_data8[1] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 10) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[1] += 1;
              bar_data6[18] += 1;
              bar_data8[2] += 1;
              zone_group_data[1] += 1;
            }
  
            // zone 3
            if (btn_row[index1] === 5) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[2] += 1;
              bar_data6[19] += 1;
              bar_data8[1] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 24) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[2] += 1;
              bar_data6[20] += 1;
              bar_data8[0] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 16) {
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[2] += 1;
              bar_data6[21] += 1;
              bar_data8[2] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 33) {
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[2] += 1;
              bar_data6[22] += 1;
              bar_data8[0] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 1) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[2] += 1;
              bar_data6[23] += 1;
              bar_data8[2] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 20) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[2] += 1;
              bar_data6[24] += 1;
              bar_data8[1] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 14) {
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[2] += 1;
              bar_data6[25] += 1;
              bar_data8[1] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 31) {
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[2] += 1;
              bar_data6[26] += 1;
              bar_data8[2] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 9) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[2] += 1;
              bar_data6[27] += 1;
              bar_data8[0] += 1;
              zone_group_data[2] += 1;
            }
  
            // zone 4
            if (btn_row[index1] === 22) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[3] += 1;
              bar_data6[28] += 1;
              bar_data8[2] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 18) {
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[3] += 1;
              bar_data6[29] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 29) {
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[3] += 1;
              bar_data6[30] += 1;
              bar_data8[1] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 7) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[3] += 1;
              bar_data6[31] += 1;
              bar_data8[2] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 28) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[3] += 1;
              bar_data6[32] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 12) {
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[3] += 1;
              bar_data6[33] += 1;
              bar_data8[0] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 35) {
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[3] += 1;
              bar_data6[34] += 1;
              bar_data8[1] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 3) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[3] += 1;
              bar_data6[35] += 1;
              bar_data8[0] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 26) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[3] += 1;
              bar_data6[36] += 1;
              bar_data8[1] += 1;
              zone_group_data[3] += 1;
            }
          }
          
          let last_num = filter_length - 1;
          let last_position = parseInt(this.state.filterNumber, 10) < btn_row.length ? btn_row[filter_length] : 0;
          for (let btn_index = last_num; btn_index >= 0; btn_index--) {
            btn_row_data.splice(0, 0, btn_row[btn_index]);
            if (btn_position[last_position] === btn_position[btn_row[btn_index]]) {
              // bar_data7[0] += 1;
            } else {
              let btn_index1 = Math.abs(btn_position[btn_row[btn_index]] - btn_position[last_position]) - 1;
              if (btn_index1 >= 18) {
                btn_index1 = Math.abs(btn_index1 - 35);
              }
              // bar_data7[btn_index1] += 1;
            }
            last_position = btn_row[btn_index];
          }
  
          last_num = btn_row.length - 1;
          last_position = 0;
          for (let btn_index2 = last_num; btn_index2 >= 0; btn_index2--) {
            // btn_row_data.splice(0, 0, btn_row[btn_index2]);
            if (btn_position[last_position] === btn_position[btn_row[btn_index2]]) {
              bar_data7[0] += 1;
            } else {
              let btn_index3 = Math.abs(btn_position[btn_row[btn_index2]] - btn_position[last_position]) - 1;
              if (btn_index3 >= 18) {
                btn_index3 = Math.abs(btn_index3 - 35);
              }
              bar_data7[btn_index3] += 1;
            }
            last_position = btn_row[btn_index2];
          }
        }
      }
      if (btn_row.length) {
        let last_num = btn_row.length - 1;
        let last_position = 0;
        for (let btn_index2 = last_num; btn_index2 >= 0; btn_index2--) {
          if (btn_position[last_position] === btn_position[btn_row[btn_index2]]) {
            angle_row.splice(0, 0, angle_array[0]);
          } else {
            let btn_index3 = Math.abs(btn_position[btn_row[btn_index2]] - btn_position[last_position]) - 1;
            if (btn_index3 >= 18) {
              btn_index3 = Math.abs(btn_index3 - 35);
            }
            angle_row.splice(0, 0, angle_array[btn_index3]);
          }
          last_position = btn_row[btn_index2];
        }
      }
      for (let pie_index = 0; pie_index < pie_row_data.length; pie_index++) {
        pie_row[pie_index] = pie_row_data[pie_index] * range1;
        if (pie_row[pie_index] > 119) {
          pie_row[pie_index] = 119;
        }
      }
      for (let zone_group_data_index = 0; zone_group_data_index < zone_group_data.length; zone_group_data_index++) {
        zone_group[zone_group_data_index] = zone_group_data[zone_group_data_index] * range2;
      }
      for (let data1_index = 0; data1_index < bar_data1.length; data1_index++) {
        data1.datasets[0].data[data1_index] = bar_data1[data1_index] * range2;
      }
      for (let data2_index = 0; data2_index < bar_data2.length; data2_index++) {
        data2.datasets[0].data[data2_index] = bar_data2[data2_index] * range2;
      }
      for (let data3_index = 0; data3_index < bar_data3.length; data3_index++) {
        data3.datasets[0].data[data3_index] = bar_data3[data3_index] * range2;
      }
      for (let data4_index = 0; data4_index < bar_data4.length; data4_index++) {
        data4.datasets[0].data[data4_index] = bar_data4[data4_index] * range2;
      }
      for (let data5_index = 0; data5_index < bar_data5.length; data5_index++) {
        data5.datasets[0].data[data5_index] = bar_data5[data5_index] * range2;
      }
      for (let data6_index = 0; data6_index < bar_data6.length; data6_index++) {
        data6.datasets[0].data[data6_index] = bar_data6[data6_index] * range2;
      }
      for (let data7_index = 0; data7_index < bar_data7.length; data7_index++) {
        data7.datasets[0].data[data7_index] = bar_data7[data7_index] * range2;
      }
      for (let data8_index = 0; data8_index < bar_data8.length; data8_index++) {
        data8.datasets[0].data[data8_index] = bar_data8[data8_index] * range2;
      }
      
      this.setState({
        btn_row: btn_row_data,
        btn_row_data: btn_row,
        pie_row: pie_row,
        zone_group: zone_group,
        data1: data1,
        data2: data2,
        data3: data3,
        data4: data4,
        data5: data5,
        data6: data6,
        data7: data7,
        data8: data8,
        angle_row: angle_row,
        bar_status: true,
        type: ''
      })
      if (btn_row.length) {
        this.setState({
          last_position: btn_row[0],
          type: ''
        })
      } else {
        this.setState({
          last_position: 0,
          type: ''
        })
      }
      
      this.updatePieCanvas();
      this.updateRotateCanvas();
      this.updateLineCanvas();
    }
  }

  undoByFilter = () => {
    let page_row = this.state.page_row;
    if (page_row) {
      for (var index = 0; index < page_row.length; index++) {
        if (page_row[index]['active'] === 1) {
          page_row[index]['filter_status'] = false;
        }
      }
      this.setState({
        page_row: page_row,
        type: ''
      })
      window.localStorage.setItem('page_row', JSON.stringify(page_row));
      let btn_row_data = [];
      let bar_data1 = [0, 0];
      let bar_data2 = [0, 0];
      let bar_data3 = [0, 0];
      let bar_data4 = [0, 0, 0];
      let bar_data5 = [0, 0, 0, 0];
      let bar_data6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
      let bar_data7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
      let bar_data8 = [0, 0, 0];
      let pie_row_data = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
      let zone_group_data = [0, 0, 0, 0];
      var range1 = parseInt(this.state.range_1, 10);
      var range2 = parseInt(this.state.range_2, 10);
      let btn_row = this.state.btn_row_data;
      let pie_row = this.state.pie_row;
      let zone_group = this.state.zone_group;
      let data1 = this.state.data1;
      let data2 = this.state.data2;
      let data3 = this.state.data3;
      let data4 = this.state.data4;
      let data5 = this.state.data5;
      let data6 = this.state.data6;
      let data7 = this.state.data7;
      let data8 = this.state.data8;
      let angle_row = [];
      if (btn_row.length) {
        for (var index1 = 0; index1 < btn_row.length; index1++) {
          // zone 1
          if (btn_row[index1] === 0) {
            pie_row_data[0] += 5;
            if (pie_row_data[0] > 119) {
              pie_row_data[0] = 119;
            }
            zone_group_data[0] += 1;
            bar_data5[0] += 1;
            bar_data6[0] += 1;
          }

          if (btn_row[index1] === 32) {
            pie_row_data[32] += 5;
            if (pie_row_data[32] > 119) {
              pie_row_data[32] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[0] += 1;
            bar_data6[1] += 1;
            bar_data8[1] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 15) {
            pie_row_data[15] += 5;
            if (pie_row_data[15] > 119) {
              pie_row_data[15] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[0] += 1;
            bar_data6[2] += 1;
            bar_data8[0] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 19) {
            pie_row_data[19] += 5;
            if (pie_row_data[19] > 119) {
              pie_row_data[19] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[0] += 1;
            bar_data6[3] += 1;
            bar_data8[2] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 4) {
            pie_row_data[4] += 5;
            if (pie_row_data[4] > 119) {
              pie_row_data[4] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[0] += 1;
            bar_data6[4] += 1;
            bar_data8[2] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 21) {
            pie_row_data[21] += 5;
            if (pie_row_data[21] > 119) {
              pie_row_data[21] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[0] += 1;
            bar_data6[5] += 1;
            bar_data8[0] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 2) {
            pie_row_data[2] += 5;
            if (pie_row_data[2] > 119) {
              pie_row_data[2] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[0] += 1;
            bar_data6[6] += 1;
            bar_data8[1] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 25) {
            pie_row_data[25] += 5;
            if (pie_row_data[25] > 119) {
              pie_row_data[25] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[0] += 1;
            bar_data7[6] += 1;
            bar_data8[2] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 17) {
            pie_row_data[17] += 5;
            if (pie_row_data[17] > 119) {
              pie_row_data[17] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[0] += 1;
            bar_data6[8] += 1;
            bar_data8[1] += 1;
            zone_group_data[0] += 1;
          }
            
          // zone 2
          if (btn_row[index1] === 34) {
            pie_row_data[34] += 5;
            if (pie_row_data[34] > 119) {
              pie_row_data[34] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[1] += 1;
            bar_data6[9] += 1;
            bar_data8[2] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 6) {
            pie_row_data[6] += 5;
            if (pie_row_data[6] > 119) {
              pie_row_data[6] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[1] += 1;
            bar_data6[10] += 1;
            bar_data8[0] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 27) {
            pie_row_data[27] += 5;
            if (pie_row_data[27] > 119) {
              pie_row_data[27] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[1] += 1;
            bar_data6[11] += 1;
            bar_data8[0] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 13) {
            pie_row_data[13] += 5;
            if (pie_row_data[13] > 119) {
              pie_row_data[13] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[1] += 1;
            bar_data6[12] += 1;
            bar_data8[2] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 36) {
            pie_row_data[36] += 5;
            if (pie_row_data[36] > 119) {
              pie_row_data[36] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[1] += 1;
            bar_data6[13] += 1;
            bar_data8[0] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 11) {
            pie_row_data[11] += 5;
            if (pie_row_data[11] > 119) {
              pie_row_data[11] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[1] += 1;
            bar_data6[14] += 1;
            bar_data8[1] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 30) {
            pie_row_data[30] += 5;
            if (pie_row_data[30] > 119) {
              pie_row_data[30] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[1] += 1;
            bar_data6[15] += 1;
            bar_data8[0] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 8) {
            pie_row_data[8] += 5;
            if (pie_row_data[8] > 119) {
              pie_row_data[8] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[1] += 1;
            bar_data6[16] += 1;
            bar_data8[1] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 23) {
            pie_row_data[23] += 5;
            if (pie_row_data[23] > 119) {
              pie_row_data[23] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[1] += 1;
            bar_data6[17] += 1;
            bar_data8[1] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 10) {
            pie_row_data[10] += 5;
            if (pie_row_data[10] > 119) {
              pie_row_data[10] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[1] += 1;
            bar_data6[18] += 1;
            bar_data8[2] += 1;
            zone_group_data[1] += 1;
          }

          // zone 3
          if (btn_row[index1] === 5) {
            pie_row_data[5] += 5;
            if (pie_row_data[5] > 119) {
              pie_row_data[5] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[2] += 1;
            bar_data6[19] += 1;
            bar_data8[1] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 24) {
            pie_row_data[24] += 5;
            if (pie_row_data[24] > 119) {
              pie_row_data[24] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[2] += 1;
            bar_data6[20] += 1;
            bar_data8[0] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 16) {
            pie_row_data[16] += 5;
            if (pie_row_data[16] > 119) {
              pie_row_data[16] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[2] += 1;
            bar_data6[21] += 1;
            bar_data8[2] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 33) {
            pie_row_data[33] += 5;
            if (pie_row_data[33] > 119) {
              pie_row_data[33] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[2] += 1;
            bar_data6[22] += 1;
            bar_data8[0] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 1) {
            pie_row_data[1] += 5;
            if (pie_row_data[1] > 119) {
              pie_row_data[1] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[2] += 1;
            bar_data6[23] += 1;
            bar_data8[2] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 20) {
            pie_row_data[20] += 5;
            if (pie_row_data[20] > 119) {
              pie_row_data[20] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[2] += 1;
            bar_data6[24] += 1;
            bar_data8[1] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 14) {
            pie_row_data[14] += 5;
            if (pie_row_data[14] > 119) {
              pie_row_data[14] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[2] += 1;
            bar_data6[25] += 1;
            bar_data8[1] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 31) {
            pie_row_data[31] += 5;
            if (pie_row_data[31] > 119) {
              pie_row_data[31] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[2] += 1;
            bar_data6[26] += 1;
            bar_data8[2] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 9) {
            pie_row_data[9] += 5;
            if (pie_row_data[9] > 119) {
              pie_row_data[9] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[2] += 1;
            bar_data6[27] += 1;
            bar_data8[0] += 1;
            zone_group_data[2] += 1;
          }

          // zone 4
          if (btn_row[index1] === 22) {
            pie_row_data[22] += 5;
            if (pie_row_data[22] > 119) {
              pie_row_data[22] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[3] += 1;
            bar_data6[28] += 1;
            bar_data8[2] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 18) {
            pie_row_data[18] += 5;
            if (pie_row_data[18] > 119) {
              pie_row_data[18] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[3] += 1;
            bar_data6[29] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 29) {
            pie_row_data[29] += 5;
            if (pie_row_data[29] > 119) {
              pie_row_data[29] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[3] += 1;
            bar_data6[30] += 1;
            bar_data8[1] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 7) {
            pie_row_data[7] += 5;
            if (pie_row_data[7] > 119) {
              pie_row_data[7] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[3] += 1;
            bar_data6[31] += 1;
            bar_data8[2] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 28) {
            pie_row_data[28] += 5;
            if (pie_row_data[28] > 119) {
              pie_row_data[28] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[3] += 1;
            bar_data6[32] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 12) {
            pie_row_data[12] += 5;
            if (pie_row_data[12] > 119) {
              pie_row_data[12] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[3] += 1;
            bar_data6[33] += 1;
            bar_data8[0] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 35) {
            pie_row_data[35] += 5;
            if (pie_row_data[35] > 119) {
              pie_row_data[35] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[3] += 1;
            bar_data6[34] += 1;
            bar_data8[1] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 3) {
            pie_row_data[3] += 5;
            if (pie_row_data[3] > 119) {
              pie_row_data[3] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[3] += 1;
            bar_data6[35] += 1;
            bar_data8[0] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 26) {
            pie_row_data[26] += 5;
            if (pie_row_data[26] > 119) {
              pie_row_data[26] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[3] += 1;
            bar_data6[36] += 1;
            bar_data8[1] += 1;
            zone_group_data[3] += 1;
          }
        }

        let last_num = btn_row.length - 1;
        let last_position = 0;
        for (var btn_index = last_num; btn_index >= 0; btn_index--) {
          btn_row_data.splice(0, 0, btn_row[btn_index]);
          if (btn_position[last_position] === btn_position[btn_row[btn_index]]) {
            bar_data7[0] += 1;
            angle_row.splice(0, 0, angle_array[0]);
          } else {
            let btn_index1 = Math.abs(btn_position[btn_row[btn_index]] - btn_position[last_position]) - 1;
            if (btn_index1 >= 18) {
              btn_index1 = Math.abs(btn_index1 - 35);
            }
            bar_data7[btn_index1] += 1;
            angle_row.splice(0, 0, angle_array[btn_index1]);
          }
          last_position = btn_row[btn_index];
        }

        for (var pie_index = 0; pie_index < pie_row_data.length; pie_index++) {
          pie_row[pie_index] = pie_row_data[pie_index] * range1;
          if (pie_row[pie_index] > 119) {
            pie_row[pie_index] = 119;
          }
        }
        for (var zone_group_data_index = 0; zone_group_data_index < zone_group_data.length; zone_group_data_index++) {
          zone_group[zone_group_data_index] = zone_group_data[zone_group_data_index] * range2;
        }
        for (var data1_index = 0; data1_index < bar_data1.length; data1_index++) {
          data1.datasets[0].data[data1_index] = bar_data1[data1_index] * range2;
        }
        for (var data2_index = 0; data2_index < bar_data2.length; data2_index++) {
          data2.datasets[0].data[data2_index] = bar_data2[data2_index] * range2;
        }
        for (var data3_index = 0; data3_index < bar_data3.length; data3_index++) {
          data3.datasets[0].data[data3_index] = bar_data3[data3_index] * range2;
        }
        for (var data4_index = 0; data4_index < bar_data4.length; data4_index++) {
          data4.datasets[0].data[data4_index] = bar_data4[data4_index] * range2;
        }
        for (var data5_index = 0; data5_index < bar_data5.length; data5_index++) {
          data5.datasets[0].data[data5_index] = bar_data5[data5_index] * range2;
        }
        for (var data6_index = 0; data6_index < bar_data6.length; data6_index++) {
          data6.datasets[0].data[data6_index] = bar_data6[data6_index] * range2;
        }
        for (var data7_index = 0; data7_index < bar_data7.length; data7_index++) {
          data7.datasets[0].data[data7_index] = bar_data7[data7_index] * range2;
        }
        for (var data8_index = 0; data8_index < bar_data8.length; data8_index++) {
          data8.datasets[0].data[data8_index] = bar_data8[data8_index] * range2;
        }
        
        this.setState({
          btn_row: btn_row_data,
          btn_row_data: btn_row,
          pie_row: pie_row,
          zone_group: zone_group,
          data1: data1,
          data2: data2,
          data3: data3,
          data4: data4,
          data5: data5,
          data6: data6,
          data7: data7,
          data8: data8,
          angle_row: angle_row,
          bar_status: true,
          type: ''
        })
        if (btn_row.length) {
          this.setState({
            last_position: btn_row[0],
            type: ''
          })
        } else {
          this.setState({
            last_position: 0,
            type: ''
          })
        }
        this.updatePieCanvas();
        this.updateRotateCanvas();
        this.updateLineCanvas();
      }
    }
  }

  filter_toggle = () => {
    if (!this.state.isFilter) {
      this.updateByFilter();
    } else {
      this.undoByFilter();
    }
    this.setState({
      isFilter: !this.state.isFilter,
      isSetFilter: false,
      type: ''
    })
  }

  setFilterNum = () => {
    this.setState({
      isSetFilter: true,
      type: ''
    })
  }

  checkAllData = () => {
    this.setState({
      isCheckedAllData: !this.state.isCheckedAllData,
      type: ''
    })
    this.isCheckedAllData = true;
  }

  arrow_toggle = () => {
    this.setState({
      isArrow: !this.state.isArrow,
      type: ''
    })
  }

  rotateBoard = () => {
    let rotate = this.state.rotate + 90;
    if (rotate === 360) {
      rotate = 0;
    }
    this.setState({
      rotate: rotate,
      type: ''
    })
    this.isRotate = true;
  }

  tick1 = () => {
    
    if (this.max_index <= 0) {
      clearInterval(this.timer);
      this.setState({
        isPlay: false,
        page_status: true,
        type: ''
      })
    }
    let btn_row = [];
    let btn_row_data = [];
    let bar_data1 = [0, 0];
    let bar_data2 = [0, 0];
    let bar_data3 = [0, 0];
    let bar_data4 = [0, 0, 0];
    let bar_data5 = [0, 0, 0, 0];
    let bar_data6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    let bar_data7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    let bar_data8 = [0, 0, 0];
    let pie_row_data = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    let zone_group_data = [0, 0, 0, 0];
    let angle_row = [];
    var range1 = parseInt(this.state.range_1, 10);
    var range2 = parseInt(this.state.range_2, 10);
    let pie_row = this.state.pie_row;
    let zone_group = this.state.zone_group;
    let data1 = this.state.data1;
    let data2 = this.state.data2;
    let data3 = this.state.data3;
    let data4 = this.state.data4;
    let data5 = this.state.data5;
    let data6 = this.state.data6;
    let data7 = this.state.data7;
    let data8 = this.state.data8;
    for (var btn_row_data_index = this.btn_row_temp.length - 1; btn_row_data_index >= this.max_index;  btn_row_data_index--) {
      btn_row.splice(0, 0, this.btn_row_temp[btn_row_data_index]);
    }
    this.max_index = this.max_index - 1;

    if (!this.state.isFilter) {
      for (let index1 = 0; index1 < btn_row.length; index1++) {
        // zone 1
        if (btn_row[index1] === 0) {
          pie_row_data[0] += 5;
          if (pie_row_data[0] > 119) {
            pie_row_data[0] = 119;
          }
          zone_group_data[0] += 1;
          bar_data5[0] += 1;
          bar_data6[0] += 1;
        }
  
        if (btn_row[index1] === 32) {
          pie_row_data[32] += 5;
          if (pie_row_data[32] > 119) {
            pie_row_data[32] = 119;
          }
          bar_data1[0] += 1;
          bar_data2[0] += 1;
          bar_data3[1] += 1;
          bar_data4[2] += 1;
          bar_data5[0] += 1;
          bar_data6[1] += 1;
          bar_data8[1] += 1;
          zone_group_data[0] += 1;
        }
  
        if (btn_row[index1] === 15) {
          pie_row_data[15] += 5;
          if (pie_row_data[15] > 119) {
            pie_row_data[15] = 119;
          }
          bar_data1[1] += 1;
          bar_data2[1] += 1;
          bar_data3[0] += 1;
          bar_data4[1] += 1;
          bar_data5[0] += 1;
          bar_data6[2] += 1;
          bar_data8[0] += 1;
          zone_group_data[0] += 1;
        }
  
        if (btn_row[index1] === 19) {
          pie_row_data[19] += 5;
          if (pie_row_data[19] > 119) {
            pie_row_data[19] = 119;
          }
          bar_data1[0] += 1;
          bar_data2[1] += 1;
          bar_data3[1] += 1;
          bar_data4[1] += 1;
          bar_data5[0] += 1;
          bar_data6[3] += 1;
          bar_data8[2] += 1;
          zone_group_data[0] += 1;
        }
  
        if (btn_row[index1] === 4) {
          pie_row_data[4] += 5;
          if (pie_row_data[4] > 119) {
            pie_row_data[4] = 119;
          }
          bar_data1[1] += 1;
          bar_data2[0] += 1;
          bar_data3[0] += 1;
          bar_data4[0] += 1;
          bar_data5[0] += 1;
          bar_data6[4] += 1;
          bar_data8[2] += 1;
          zone_group_data[0] += 1;
        }
  
        if (btn_row[index1] === 21) {
          pie_row_data[21] += 5;
          if (pie_row_data[21] > 119) {
            pie_row_data[21] = 119;
          }
          bar_data1[0] += 1;
          bar_data2[1] += 1;
          bar_data3[1] += 1;
          bar_data4[1] += 1;
          bar_data5[0] += 1;
          bar_data6[5] += 1;
          bar_data8[0] += 1;
          zone_group_data[0] += 1;
        }
  
        if (btn_row[index1] === 2) {
          pie_row_data[2] += 5;
          if (pie_row_data[2] > 119) {
            pie_row_data[2] = 119;
          }
          bar_data1[1] += 1;
          bar_data2[0] += 1;
          bar_data3[0] += 1;
          bar_data4[0] += 1;
          bar_data5[0] += 1;
          bar_data6[6] += 1;
          bar_data8[1] += 1;
          zone_group_data[0] += 1;
        }
  
        if (btn_row[index1] === 25) {
          pie_row_data[25] += 5;
          if (pie_row_data[25] > 119) {
            pie_row_data[25] = 119;
          }
          bar_data1[0] += 1;
          bar_data2[1] += 1;
          bar_data3[1] += 1;
          bar_data4[2] += 1;
          bar_data5[0] += 1;
          bar_data7[6] += 1;
          bar_data8[2] += 1;
          zone_group_data[0] += 1;
        }
  
        if (btn_row[index1] === 17) {
          pie_row_data[17] += 5;
          if (pie_row_data[17] > 119) {
            pie_row_data[17] = 119;
          }
          bar_data1[1] += 1;
          bar_data2[1] += 1;
          bar_data3[0] += 1;
          bar_data4[1] += 1;
          bar_data5[0] += 1;
          bar_data6[8] += 1;
          bar_data8[1] += 1;
          zone_group_data[0] += 1;
        }
          
        // zone 2
        if (btn_row[index1] === 34) {
          pie_row_data[34] += 5;
          if (pie_row_data[34] > 119) {
            pie_row_data[34] = 119;
          }
          bar_data1[0] += 1;
          bar_data2[0] += 1;
          bar_data3[1] += 1;
          bar_data4[2] += 1;
          bar_data5[1] += 1;
          bar_data6[9] += 1;
          bar_data8[2] += 1;
          zone_group_data[1] += 1;
        }
  
        if (btn_row[index1] === 6) {
          pie_row_data[6] += 5;
          if (pie_row_data[6] > 119) {
            pie_row_data[6] = 119;
          }
          bar_data1[1] += 1;
          bar_data2[0] += 1;
          bar_data3[0] += 1;
          bar_data4[0] += 1;
          bar_data5[1] += 1;
          bar_data6[10] += 1;
          bar_data8[0] += 1;
          zone_group_data[1] += 1;
        }
  
        if (btn_row[index1] === 27) {
          pie_row_data[27] += 5;
          if (pie_row_data[27] > 119) {
            pie_row_data[27] = 119;
          }
          bar_data1[0] += 1;
          bar_data2[1] += 1;
          bar_data3[1] += 1;
          bar_data4[2] += 1;
          bar_data5[1] += 1;
          bar_data6[11] += 1;
          bar_data8[0] += 1;
          zone_group_data[1] += 1;
        }
  
        if (btn_row[index1] === 13) {
          pie_row_data[13] += 5;
          if (pie_row_data[13] > 119) {
            pie_row_data[13] = 119;
          }
          bar_data1[1] += 1;
          bar_data2[1] += 1;
          bar_data3[0] += 1;
          bar_data4[1] += 1;
          bar_data5[1] += 1;
          bar_data6[12] += 1;
          bar_data8[2] += 1;
          zone_group_data[1] += 1;
        }
  
        if (btn_row[index1] === 36) {
          pie_row_data[36] += 5;
          if (pie_row_data[36] > 119) {
            pie_row_data[36] = 119;
          }
          bar_data1[0] += 1;
          bar_data2[0] += 1;
          bar_data3[1] += 1;
          bar_data4[2] += 1;
          bar_data5[1] += 1;
          bar_data6[13] += 1;
          bar_data8[0] += 1;
          zone_group_data[1] += 1;
        }
  
        if (btn_row[index1] === 11) {
          pie_row_data[11] += 5;
          if (pie_row_data[11] > 119) {
            pie_row_data[11] = 119;
          }
          bar_data1[1] += 1;
          bar_data2[1] += 1;
          bar_data3[0] += 1;
          bar_data4[0] += 1;
          bar_data5[1] += 1;
          bar_data6[14] += 1;
          bar_data8[1] += 1;
          zone_group_data[1] += 1;
        }
  
        if (btn_row[index1] === 30) {
          pie_row_data[30] += 5;
          if (pie_row_data[30] > 119) {
            pie_row_data[30] = 119;
          }
          bar_data1[0] += 1;
          bar_data2[0] += 1;
          bar_data3[1] += 1;
          bar_data4[2] += 1;
          bar_data5[1] += 1;
          bar_data6[15] += 1;
          bar_data8[0] += 1;
          zone_group_data[1] += 1;
        }
  
        if (btn_row[index1] === 8) {
          pie_row_data[8] += 5;
          if (pie_row_data[8] > 119) {
            pie_row_data[8] = 119;
          }
          bar_data1[1] += 1;
          bar_data2[0] += 1;
          bar_data3[0] += 1;
          bar_data4[0] += 1;
          bar_data5[1] += 1;
          bar_data6[16] += 1;
          bar_data8[1] += 1;
          zone_group_data[1] += 1;
        }
  
        if (btn_row[index1] === 23) {
          pie_row_data[23] += 5;
          if (pie_row_data[23] > 119) {
            pie_row_data[23] = 119;
          }
          bar_data1[0] += 1;
          bar_data2[1] += 1;
          bar_data3[1] += 1;
          bar_data4[1] += 1;
          bar_data5[1] += 1;
          bar_data6[17] += 1;
          bar_data8[1] += 1;
          zone_group_data[1] += 1;
        }
  
        if (btn_row[index1] === 10) {
          pie_row_data[10] += 5;
          if (pie_row_data[10] > 119) {
            pie_row_data[10] = 119;
          }
          bar_data1[1] += 1;
          bar_data2[0] += 1;
          bar_data3[0] += 1;
          bar_data4[0] += 1;
          bar_data5[1] += 1;
          bar_data6[18] += 1;
          bar_data8[2] += 1;
          zone_group_data[1] += 1;
        }
  
        // zone 3
        if (btn_row[index1] === 5) {
          pie_row_data[5] += 5;
          if (pie_row_data[5] > 119) {
            pie_row_data[5] = 119;
          }
          bar_data1[0] += 1;
          bar_data2[1] += 1;
          bar_data3[0] += 1;
          bar_data4[0] += 1;
          bar_data5[2] += 1;
          bar_data6[19] += 1;
          bar_data8[1] += 1;
          zone_group_data[2] += 1;
        }
  
        if (btn_row[index1] === 24) {
          pie_row_data[24] += 5;
          if (pie_row_data[24] > 119) {
            pie_row_data[24] = 119;
          }
          bar_data1[1] += 1;
          bar_data2[0] += 1;
          bar_data3[1] += 1;
          bar_data4[1] += 1;
          bar_data5[2] += 1;
          bar_data6[20] += 1;
          bar_data8[0] += 1;
          zone_group_data[2] += 1;
        }
  
        if (btn_row[index1] === 16) {
          pie_row_data[16] += 5;
          if (pie_row_data[16] > 119) {
            pie_row_data[16] = 119;
          }
          bar_data1[0] += 1;
          bar_data2[0] += 1;
          bar_data3[0] += 1;
          bar_data4[1] += 1;
          bar_data5[2] += 1;
          bar_data6[21] += 1;
          bar_data8[2] += 1;
          zone_group_data[2] += 1;
        }
  
        if (btn_row[index1] === 33) {
          pie_row_data[33] += 5;
          if (pie_row_data[33] > 119) {
            pie_row_data[33] = 119;
          }
          bar_data1[1] += 1;
          bar_data2[1] += 1;
          bar_data3[1] += 1;
          bar_data4[2] += 1;
          bar_data5[2] += 1;
          bar_data6[22] += 1;
          bar_data8[0] += 1;
          zone_group_data[2] += 1;
        }
  
        if (btn_row[index1] === 1) {
          pie_row_data[1] += 5;
          if (pie_row_data[1] > 119) {
            pie_row_data[1] = 119;
          }
          bar_data1[0] += 1;
          bar_data2[1] += 1;
          bar_data3[0] += 1;
          bar_data4[0] += 1;
          bar_data5[2] += 1;
          bar_data6[23] += 1;
          bar_data8[2] += 1;
          zone_group_data[2] += 1;
        }
  
        if (btn_row[index1] === 20) {
          pie_row_data[20] += 5;
          if (pie_row_data[20] > 119) {
            pie_row_data[20] = 119;
          }
          bar_data1[1] += 1;
          bar_data2[0] += 1;
          bar_data3[1] += 1;
          bar_data4[1] += 1;
          bar_data5[2] += 1;
          bar_data6[24] += 1;
          bar_data8[1] += 1;
          zone_group_data[2] += 1;
        }
  
        if (btn_row[index1] === 14) {
          pie_row_data[14] += 5;
          if (pie_row_data[14] > 119) {
            pie_row_data[14] = 119;
          }
          bar_data1[0] += 1;
          bar_data2[0] += 1;
          bar_data3[0] += 1;
          bar_data4[1] += 1;
          bar_data5[2] += 1;
          bar_data6[25] += 1;
          bar_data8[1] += 1;
          zone_group_data[2] += 1;
        }
  
        if (btn_row[index1] === 31) {
          pie_row_data[31] += 5;
          if (pie_row_data[31] > 119) {
            pie_row_data[31] = 119;
          }
          bar_data1[1] += 1;
          bar_data2[1] += 1;
          bar_data3[1] += 1;
          bar_data4[2] += 1;
          bar_data5[2] += 1;
          bar_data6[26] += 1;
          bar_data8[2] += 1;
          zone_group_data[2] += 1;
        }
  
        if (btn_row[index1] === 9) {
          pie_row_data[9] += 5;
          if (pie_row_data[9] > 119) {
            pie_row_data[9] = 119;
          }
          bar_data1[0] += 1;
          bar_data2[1] += 1;
          bar_data3[0] += 1;
          bar_data4[0] += 1;
          bar_data5[2] += 1;
          bar_data6[27] += 1;
          bar_data8[0] += 1;
          zone_group_data[2] += 1;
        }
  
        // zone 4
        if (btn_row[index1] === 22) {
          pie_row_data[22] += 5;
          if (pie_row_data[22] > 119) {
            pie_row_data[22] = 119;
          }
          bar_data1[1] += 1;
          bar_data2[0] += 1;
          bar_data3[1] += 1;
          bar_data4[1] += 1;
          bar_data5[3] += 1;
          bar_data6[28] += 1;
          bar_data8[2] += 1;
          zone_group_data[3] += 1;
        }
  
        if (btn_row[index1] === 18) {
          pie_row_data[18] += 5;
          if (pie_row_data[18] > 119) {
            pie_row_data[18] = 119;
          }
          bar_data1[0] += 1;
          bar_data2[0] += 1;
          bar_data3[0] += 1;
          bar_data4[1] += 1;
          bar_data5[3] += 1;
          bar_data6[29] += 1;
          zone_group_data[3] += 1;
        }
  
        if (btn_row[index1] === 29) {
          pie_row_data[29] += 5;
          if (pie_row_data[29] > 119) {
            pie_row_data[29] = 119;
          }
          bar_data1[1] += 1;
          bar_data2[1] += 1;
          bar_data3[1] += 1;
          bar_data4[2] += 1;
          bar_data5[3] += 1;
          bar_data6[30] += 1;
          bar_data8[1] += 1;
          zone_group_data[3] += 1;
        }
  
        if (btn_row[index1] === 7) {
          pie_row_data[7] += 5;
          if (pie_row_data[7] > 119) {
            pie_row_data[7] = 119;
          }
          bar_data1[0] += 1;
          bar_data2[1] += 1;
          bar_data3[0] += 1;
          bar_data4[0] += 1;
          bar_data5[3] += 1;
          bar_data6[31] += 1;
          bar_data8[2] += 1;
          zone_group_data[3] += 1;
        }
  
        if (btn_row[index1] === 28) {
          pie_row_data[28] += 5;
          if (pie_row_data[28] > 119) {
            pie_row_data[28] = 119;
          }
          bar_data1[1] += 1;
          bar_data2[0] += 1;
          bar_data3[1] += 1;
          bar_data4[2] += 1;
          bar_data5[3] += 1;
          bar_data6[32] += 1;
          zone_group_data[3] += 1;
        }
  
        if (btn_row[index1] === 12) {
          pie_row_data[12] += 5;
          if (pie_row_data[12] > 119) {
            pie_row_data[12] = 119;
          }
          bar_data1[0] += 1;
          bar_data2[0] += 1;
          bar_data3[0] += 1;
          bar_data4[0] += 1;
          bar_data5[3] += 1;
          bar_data6[33] += 1;
          bar_data8[0] += 1;
          zone_group_data[3] += 1;
        }
  
        if (btn_row[index1] === 35) {
          pie_row_data[35] += 5;
          if (pie_row_data[35] > 119) {
            pie_row_data[35] = 119;
          }
          bar_data1[1] += 1;
          bar_data2[1] += 1;
          bar_data3[1] += 1;
          bar_data4[2] += 1;
          bar_data5[3] += 1;
          bar_data6[34] += 1;
          bar_data8[1] += 1;
          zone_group_data[3] += 1;
        }
  
        if (btn_row[index1] === 3) {
          pie_row_data[3] += 5;
          if (pie_row_data[3] > 119) {
            pie_row_data[3] = 119;
          }
          bar_data1[0] += 1;
          bar_data2[1] += 1;
          bar_data3[0] += 1;
          bar_data4[0] += 1;
          bar_data5[3] += 1;
          bar_data6[35] += 1;
          bar_data8[0] += 1;
          zone_group_data[3] += 1;
        }
  
        if (btn_row[index1] === 26) {
          pie_row_data[26] += 5;
          if (pie_row_data[26] > 119) {
            pie_row_data[26] = 119;
          }
          bar_data1[1] += 1;
          bar_data2[0] += 1;
          bar_data3[1] += 1;
          bar_data4[2] += 1;
          bar_data5[3] += 1;
          bar_data6[36] += 1;
          bar_data8[1] += 1;
          zone_group_data[3] += 1;
        }
      }
  
      let last_num = btn_row.length - 1;
      let last_position = 0;
      for (let btn_index = last_num; btn_index >= 0; btn_index--) {
        btn_row_data.splice(0, 0, btn_row[btn_index]);
        if (btn_position[last_position] === btn_position[btn_row[btn_index]]) {
          bar_data7[0] += 1;
          angle_row.splice(0, 0, angle_array[0]);
        } else {
          let btn_index1 = Math.abs(btn_position[btn_row[btn_index]] - btn_position[last_position]) - 1;
          if (btn_index1 >= 18) {
            btn_index1 = Math.abs(btn_index1 - 35);
          }
          bar_data7[btn_index1] += 1;
          angle_row.splice(0, 0, angle_array[btn_index1]);
        }
        last_position = btn_row[btn_index];
      }
    } else {
      if (!this.state.isCheckedAllData) {
        let filter_length = parseInt(this.state.filterNumber, 10) < btn_row.length ? parseInt(this.state.filterNumber, 10) : btn_row.length;
        for (let index1 = 0; index1 < filter_length; index1++) {
          // zone 1
          if (btn_row[index1] === 0) {
            pie_row_data[0] += 5;
            if (pie_row_data[0] > 119) {
              pie_row_data[0] = 119;
            }
            zone_group_data[0] += 1;
            bar_data5[0] += 1;
            bar_data6[0] += 1;
          }

          if (btn_row[index1] === 32) {
            pie_row_data[32] += 5;
            if (pie_row_data[32] > 119) {
              pie_row_data[32] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[0] += 1;
            bar_data6[1] += 1;
            bar_data8[1] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 15) {
            pie_row_data[15] += 5;
            if (pie_row_data[15] > 119) {
              pie_row_data[15] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[0] += 1;
            bar_data6[2] += 1;
            bar_data8[0] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 19) {
            pie_row_data[19] += 5;
            if (pie_row_data[19] > 119) {
              pie_row_data[19] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[0] += 1;
            bar_data6[3] += 1;
            bar_data8[2] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 4) {
            pie_row_data[4] += 5;
            if (pie_row_data[4] > 119) {
              pie_row_data[4] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[0] += 1;
            bar_data6[4] += 1;
            bar_data8[2] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 21) {
            pie_row_data[21] += 5;
            if (pie_row_data[21] > 119) {
              pie_row_data[21] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[0] += 1;
            bar_data6[5] += 1;
            bar_data8[0] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 2) {
            pie_row_data[2] += 5;
            if (pie_row_data[2] > 119) {
              pie_row_data[2] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[0] += 1;
            bar_data6[6] += 1;
            bar_data8[1] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 25) {
            pie_row_data[25] += 5;
            if (pie_row_data[25] > 119) {
              pie_row_data[25] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[0] += 1;
            bar_data7[6] += 1;
            bar_data8[2] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 17) {
            pie_row_data[17] += 5;
            if (pie_row_data[17] > 119) {
              pie_row_data[17] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[0] += 1;
            bar_data6[8] += 1;
            bar_data8[1] += 1;
            zone_group_data[0] += 1;
          }
            
          // zone 2
          if (btn_row[index1] === 34) {
            pie_row_data[34] += 5;
            if (pie_row_data[34] > 119) {
              pie_row_data[34] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[1] += 1;
            bar_data6[9] += 1;
            bar_data8[2] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 6) {
            pie_row_data[6] += 5;
            if (pie_row_data[6] > 119) {
              pie_row_data[6] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[1] += 1;
            bar_data6[10] += 1;
            bar_data8[0] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 27) {
            pie_row_data[27] += 5;
            if (pie_row_data[27] > 119) {
              pie_row_data[27] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[1] += 1;
            bar_data6[11] += 1;
            bar_data8[0] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 13) {
            pie_row_data[13] += 5;
            if (pie_row_data[13] > 119) {
              pie_row_data[13] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[1] += 1;
            bar_data6[12] += 1;
            bar_data8[2] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 36) {
            pie_row_data[36] += 5;
            if (pie_row_data[36] > 119) {
              pie_row_data[36] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[1] += 1;
            bar_data6[13] += 1;
            bar_data8[0] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 11) {
            pie_row_data[11] += 5;
            if (pie_row_data[11] > 119) {
              pie_row_data[11] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[1] += 1;
            bar_data6[14] += 1;
            bar_data8[1] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 30) {
            pie_row_data[30] += 5;
            if (pie_row_data[30] > 119) {
              pie_row_data[30] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[1] += 1;
            bar_data6[15] += 1;
            bar_data8[0] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 8) {
            pie_row_data[8] += 5;
            if (pie_row_data[8] > 119) {
              pie_row_data[8] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[1] += 1;
            bar_data6[16] += 1;
            bar_data8[1] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 23) {
            pie_row_data[23] += 5;
            if (pie_row_data[23] > 119) {
              pie_row_data[23] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[1] += 1;
            bar_data6[17] += 1;
            bar_data8[1] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 10) {
            pie_row_data[10] += 5;
            if (pie_row_data[10] > 119) {
              pie_row_data[10] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[1] += 1;
            bar_data6[18] += 1;
            bar_data8[2] += 1;
            zone_group_data[1] += 1;
          }

          // zone 3
          if (btn_row[index1] === 5) {
            pie_row_data[5] += 5;
            if (pie_row_data[5] > 119) {
              pie_row_data[5] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[2] += 1;
            bar_data6[19] += 1;
            bar_data8[1] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 24) {
            pie_row_data[24] += 5;
            if (pie_row_data[24] > 119) {
              pie_row_data[24] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[2] += 1;
            bar_data6[20] += 1;
            bar_data8[0] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 16) {
            pie_row_data[16] += 5;
            if (pie_row_data[16] > 119) {
              pie_row_data[16] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[2] += 1;
            bar_data6[21] += 1;
            bar_data8[2] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 33) {
            pie_row_data[33] += 5;
            if (pie_row_data[33] > 119) {
              pie_row_data[33] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[2] += 1;
            bar_data6[22] += 1;
            bar_data8[0] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 1) {
            pie_row_data[1] += 5;
            if (pie_row_data[1] > 119) {
              pie_row_data[1] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[2] += 1;
            bar_data6[23] += 1;
            bar_data8[2] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 20) {
            pie_row_data[20] += 5;
            if (pie_row_data[20] > 119) {
              pie_row_data[20] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[2] += 1;
            bar_data6[24] += 1;
            bar_data8[1] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 14) {
            pie_row_data[14] += 5;
            if (pie_row_data[14] > 119) {
              pie_row_data[14] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[2] += 1;
            bar_data6[25] += 1;
            bar_data8[1] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 31) {
            pie_row_data[31] += 5;
            if (pie_row_data[31] > 119) {
              pie_row_data[31] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[2] += 1;
            bar_data6[26] += 1;
            bar_data8[2] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 9) {
            pie_row_data[9] += 5;
            if (pie_row_data[9] > 119) {
              pie_row_data[9] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[2] += 1;
            bar_data6[27] += 1;
            bar_data8[0] += 1;
            zone_group_data[2] += 1;
          }

          // zone 4
          if (btn_row[index1] === 22) {
            pie_row_data[22] += 5;
            if (pie_row_data[22] > 119) {
              pie_row_data[22] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[3] += 1;
            bar_data6[28] += 1;
            bar_data8[2] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 18) {
            pie_row_data[18] += 5;
            if (pie_row_data[18] > 119) {
              pie_row_data[18] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[3] += 1;
            bar_data6[29] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 29) {
            pie_row_data[29] += 5;
            if (pie_row_data[29] > 119) {
              pie_row_data[29] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[3] += 1;
            bar_data6[30] += 1;
            bar_data8[1] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 7) {
            pie_row_data[7] += 5;
            if (pie_row_data[7] > 119) {
              pie_row_data[7] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[3] += 1;
            bar_data6[31] += 1;
            bar_data8[2] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 28) {
            pie_row_data[28] += 5;
            if (pie_row_data[28] > 119) {
              pie_row_data[28] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[3] += 1;
            bar_data6[32] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 12) {
            pie_row_data[12] += 5;
            if (pie_row_data[12] > 119) {
              pie_row_data[12] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[3] += 1;
            bar_data6[33] += 1;
            bar_data8[0] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 35) {
            pie_row_data[35] += 5;
            if (pie_row_data[35] > 119) {
              pie_row_data[35] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[3] += 1;
            bar_data6[34] += 1;
            bar_data8[1] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 3) {
            pie_row_data[3] += 5;
            if (pie_row_data[3] > 119) {
              pie_row_data[3] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[3] += 1;
            bar_data6[35] += 1;
            bar_data8[0] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 26) {
            pie_row_data[26] += 5;
            if (pie_row_data[26] > 119) {
              pie_row_data[26] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[3] += 1;
            bar_data6[36] += 1;
            bar_data8[1] += 1;
            zone_group_data[3] += 1;
          }
        }

        let last_num = filter_length - 1;
        let last_position = parseInt(this.state.filterNumber, 10) < btn_row.length ? btn_row[filter_length] : 0;
        for (let btn_index = last_num; btn_index >= 0; btn_index--) {
          btn_row_data.splice(0, 0, btn_row[btn_index]);
          if (btn_position[last_position] === btn_position[btn_row[btn_index]]) {
            bar_data7[0] += 1;
          } else {
            let btn_index1 = Math.abs(btn_position[btn_row[btn_index]] - btn_position[last_position]) - 1;
            if (btn_index1 >= 18) {
              btn_index1 = Math.abs(btn_index1 - 35);
            }
            bar_data7[btn_index1] += 1;
          }
          last_position = btn_row[btn_index];
        }
      } else {
        let filter_length = parseInt(this.state.filterNumber, 10) < btn_row.length ? parseInt(this.state.filterNumber, 10) : btn_row.length;

        for (let index = 0; index < filter_length; index++) {
          pie_row_data[btn_row[index]] += 5;
          if (pie_row_data[btn_row[index]] > 119) {
            pie_row_data[btn_row[index]] = 119;
          }
        }
        for (let index1 = 0; index1 < btn_row.length; index1++) {
          // zone 1
          if (btn_row[index1] === 0) {
            zone_group_data[0] += 1;
            bar_data5[0] += 1;
            bar_data6[0] += 1;
          }

          if (btn_row[index1] === 32) {
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[0] += 1;
            bar_data6[1] += 1;
            bar_data8[1] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 15) {
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[0] += 1;
            bar_data6[2] += 1;
            bar_data8[0] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 19) {
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[0] += 1;
            bar_data6[3] += 1;
            bar_data8[2] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 4) {
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[0] += 1;
            bar_data6[4] += 1;
            bar_data8[2] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 21) {
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[0] += 1;
            bar_data6[5] += 1;
            bar_data8[0] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 2) {
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[0] += 1;
            bar_data6[6] += 1;
            bar_data8[1] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 25) {
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[0] += 1;
            bar_data7[6] += 1;
            bar_data8[2] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 17) {
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[0] += 1;
            bar_data6[8] += 1;
            bar_data8[1] += 1;
            zone_group_data[0] += 1;
          }
            
          // zone 2
          if (btn_row[index1] === 34) {
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[1] += 1;
            bar_data6[9] += 1;
            bar_data8[2] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 6) {
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[1] += 1;
            bar_data6[10] += 1;
            bar_data8[0] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 27) {
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[1] += 1;
            bar_data6[11] += 1;
            bar_data8[0] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 13) {
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[1] += 1;
            bar_data6[12] += 1;
            bar_data8[2] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 36) {
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[1] += 1;
            bar_data6[13] += 1;
            bar_data8[0] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 11) {
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[1] += 1;
            bar_data6[14] += 1;
            bar_data8[1] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 30) {
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[1] += 1;
            bar_data6[15] += 1;
            bar_data8[0] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 8) {
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[1] += 1;
            bar_data6[16] += 1;
            bar_data8[1] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 23) {
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[1] += 1;
            bar_data6[17] += 1;
            bar_data8[1] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 10) {
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[1] += 1;
            bar_data6[18] += 1;
            bar_data8[2] += 1;
            zone_group_data[1] += 1;
          }

          // zone 3
          if (btn_row[index1] === 5) {
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[2] += 1;
            bar_data6[19] += 1;
            bar_data8[1] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 24) {
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[2] += 1;
            bar_data6[20] += 1;
            bar_data8[0] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 16) {
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[2] += 1;
            bar_data6[21] += 1;
            bar_data8[2] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 33) {
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[2] += 1;
            bar_data6[22] += 1;
            bar_data8[0] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 1) {
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[2] += 1;
            bar_data6[23] += 1;
            bar_data8[2] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 20) {
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[2] += 1;
            bar_data6[24] += 1;
            bar_data8[1] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 14) {
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[2] += 1;
            bar_data6[25] += 1;
            bar_data8[1] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 31) {
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[2] += 1;
            bar_data6[26] += 1;
            bar_data8[2] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 9) {
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[2] += 1;
            bar_data6[27] += 1;
            bar_data8[0] += 1;
            zone_group_data[2] += 1;
          }

          // zone 4
          if (btn_row[index1] === 22) {
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[3] += 1;
            bar_data6[28] += 1;
            bar_data8[2] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 18) {
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[3] += 1;
            bar_data6[29] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 29) {
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[3] += 1;
            bar_data6[30] += 1;
            bar_data8[1] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 7) {
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[3] += 1;
            bar_data6[31] += 1;
            bar_data8[2] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 28) {
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[3] += 1;
            bar_data6[32] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 12) {
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[3] += 1;
            bar_data6[33] += 1;
            bar_data8[0] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 35) {
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[3] += 1;
            bar_data6[34] += 1;
            bar_data8[1] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 3) {
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[3] += 1;
            bar_data6[35] += 1;
            bar_data8[0] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 26) {
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[3] += 1;
            bar_data6[36] += 1;
            bar_data8[1] += 1;
            zone_group_data[3] += 1;
          }
        }
        
        let last_num = filter_length - 1;
        let last_position = parseInt(this.state.filterNumber, 10) < btn_row.length ? btn_row[filter_length] : 0;
        for (let btn_index = last_num; btn_index >= 0; btn_index--) {
          btn_row_data.splice(0, 0, btn_row[btn_index]);
          if (btn_position[last_position] === btn_position[btn_row[btn_index]]) {
          } else {
            let btn_index1 = Math.abs(btn_position[btn_row[btn_index]] - btn_position[last_position]) - 1;
            if (btn_index1 >= 18) {
              btn_index1 = Math.abs(btn_index1 - 35);
            }
          }
          last_position = btn_row[btn_index];
        }

        last_num = btn_row.length - 1;
        last_position = 0;
        for (let btn_index2 = last_num; btn_index2 >= 0; btn_index2--) {
          if (btn_position[last_position] === btn_position[btn_row[btn_index2]]) {
            bar_data7[0] += 1;
          } else {
            let btn_index3 = Math.abs(btn_position[btn_row[btn_index2]] - btn_position[last_position]) - 1;
            if (btn_index3 >= 18) {
              btn_index3 = Math.abs(btn_index3 - 35);
            }
            bar_data7[btn_index3] += 1;
          }
          last_position = btn_row[btn_index2];
        }
      }
      if (btn_row.length) {
        let last_num = btn_row.length - 1;
        let last_position = 0;
        for (let btn_index2 = last_num; btn_index2 >= 0; btn_index2--) {
          if (btn_position[last_position] === btn_position[btn_row[btn_index2]]) {
            angle_row.splice(0, 0, angle_array[0]);
          } else {
            let btn_index3 = Math.abs(btn_position[btn_row[btn_index2]] - btn_position[last_position]) - 1;
            if (btn_index3 >= 18) {
              btn_index3 = Math.abs(btn_index3 - 35);
            }
            angle_row.splice(0, 0, angle_array[btn_index3]);
          }
          last_position = btn_row[btn_index2];
        }
      }
    }

    for (var pie_index = 0; pie_index < pie_row_data.length; pie_index++) {
      pie_row[pie_index] = pie_row_data[pie_index] * range1;
      if (pie_row[pie_index] > 119) {
        pie_row[pie_index] = 119;
      }
    }
    for (var zone_group_data_index = 0; zone_group_data_index < zone_group_data.length; zone_group_data_index++) {
      zone_group[zone_group_data_index] = zone_group_data[zone_group_data_index] * range2;
    }
    for (var data1_index = 0; data1_index < bar_data1.length; data1_index++) {
      data1.datasets[0].data[data1_index] = bar_data1[data1_index] * range2;
    }
    for (var data2_index = 0; data2_index < bar_data2.length; data2_index++) {
      data2.datasets[0].data[data2_index] = bar_data2[data2_index] * range2;
    }
    for (var data3_index = 0; data3_index < bar_data3.length; data3_index++) {
      data3.datasets[0].data[data3_index] = bar_data3[data3_index] * range2;
    }
    for (var data4_index = 0; data4_index < bar_data4.length; data4_index++) {
      data4.datasets[0].data[data4_index] = bar_data4[data4_index] * range2;
    }
    for (var data5_index = 0; data5_index < bar_data5.length; data5_index++) {
      data5.datasets[0].data[data5_index] = bar_data5[data5_index] * range2;
    }
    for (var data6_index = 0; data6_index < bar_data6.length; data6_index++) {
      data6.datasets[0].data[data6_index] = bar_data6[data6_index] * range2;
    }
    for (var data7_index = 0; data7_index < bar_data7.length; data7_index++) {
      data7.datasets[0].data[data7_index] = bar_data7[data7_index] * range2;
    }
    for (var data8_index = 0; data8_index < bar_data8.length; data8_index++) {
      data8.datasets[0].data[data8_index] = bar_data8[data8_index] * range2;
    }
    
    this.setState({
      btn_row: btn_row_data,
      btn_row_data: btn_row,
      pie_row: pie_row,
      zone_group: zone_group,
      data1: data1,
      data2: data2,
      data3: data3,
      data4: data4,
      data5: data5,
      data6: data6,
      data7: data7,
      data8: data8,
      angle_row: angle_row,
      last_position: btn_row[0],
      cSelected: [],
      cSelected_status: false,
      undo_status: false,
      bar_status: true,
      page_status: false,
      type: ''
    })
    this.updatePieCanvas();
    this.updateRotateCanvas();
    this.updateLineCanvas();
    if (this.max_index < 0) {

      this.setState({
        isPlay: false,
        page_status: true,
        type: ''
      })
    }
  }

  play_toggle = () => {
    if (this.state.btn_row_data.length) {
      this.setState({
        isPlay: true,
        type: ''
      })
      this.btn_row_temp = this.state.btn_row_data;
      let btn_row = [];
      let btn_row_data = [];
      let bar_data1 = [0, 0];
      let bar_data2 = [0, 0];
      let bar_data3 = [0, 0];
      let bar_data4 = [0, 0, 0];
      let bar_data5 = [0, 0, 0, 0];
      let bar_data6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
      let bar_data7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
      let bar_data8 = [0, 0, 0];
      let pie_row_data = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
      let zone_group_data = [0, 0, 0, 0];
      let angle_row = [];
      var range1 = parseInt(this.state.range_1, 10);
      var range2 = parseInt(this.state.range_2, 10);
      let pie_row = this.state.pie_row;
      let zone_group = this.state.zone_group;
      let data1 = this.state.data1;
      let data2 = this.state.data2;
      let data3 = this.state.data3;
      let data4 = this.state.data4;
      let data5 = this.state.data5;
      let data6 = this.state.data6;
      let data7 = this.state.data7;
      let data8 = this.state.data8;
      if (this.state.cSelected.length) {
        this.max_index = this.state.cSelected[0];
        for (let index = 0; index < this.state.cSelected.length; index++) {
          if (this.max_index < this.state.cSelected[index]) {
            this.max_index = this.state.cSelected[index];
          }
        }
      } else {
        this.max_index = this.state.btn_row_data.length - 1;
      }
      for (var btn_row_data_index = this.state.btn_row_data.length - 1; btn_row_data_index >= this.max_index;  btn_row_data_index--) {
        btn_row.splice(0, 0, this.state.btn_row_data[btn_row_data_index]);
      }
      this.max_index = this.max_index - 1;
      
      if (!this.state.isFilter) {
        for (let index1 = 0; index1 < btn_row.length; index1++) {
          // zone 1
          if (btn_row[index1] === 0) {
            pie_row_data[0] += 5;
            if (pie_row_data[0] > 119) {
              pie_row_data[0] = 119;
            }
            zone_group_data[0] += 1;
            bar_data5[0] += 1;
            bar_data6[0] += 1;
          }
    
          if (btn_row[index1] === 32) {
            pie_row_data[32] += 5;
            if (pie_row_data[32] > 119) {
              pie_row_data[32] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[0] += 1;
            bar_data6[1] += 1;
            bar_data8[1] += 1;
            zone_group_data[0] += 1;
          }
    
          if (btn_row[index1] === 15) {
            pie_row_data[15] += 5;
            if (pie_row_data[15] > 119) {
              pie_row_data[15] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[0] += 1;
            bar_data6[2] += 1;
            bar_data8[0] += 1;
            zone_group_data[0] += 1;
          }
    
          if (btn_row[index1] === 19) {
            pie_row_data[19] += 5;
            if (pie_row_data[19] > 119) {
              pie_row_data[19] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[0] += 1;
            bar_data6[3] += 1;
            bar_data8[2] += 1;
            zone_group_data[0] += 1;
          }
    
          if (btn_row[index1] === 4) {
            pie_row_data[4] += 5;
            if (pie_row_data[4] > 119) {
              pie_row_data[4] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[0] += 1;
            bar_data6[4] += 1;
            bar_data8[2] += 1;
            zone_group_data[0] += 1;
          }
    
          if (btn_row[index1] === 21) {
            pie_row_data[21] += 5;
            if (pie_row_data[21] > 119) {
              pie_row_data[21] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[0] += 1;
            bar_data6[5] += 1;
            bar_data8[0] += 1;
            zone_group_data[0] += 1;
          }
    
          if (btn_row[index1] === 2) {
            pie_row_data[2] += 5;
            if (pie_row_data[2] > 119) {
              pie_row_data[2] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[0] += 1;
            bar_data6[6] += 1;
            bar_data8[1] += 1;
            zone_group_data[0] += 1;
          }
    
          if (btn_row[index1] === 25) {
            pie_row_data[25] += 5;
            if (pie_row_data[25] > 119) {
              pie_row_data[25] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[0] += 1;
            bar_data7[6] += 1;
            bar_data8[2] += 1;
            zone_group_data[0] += 1;
          }
    
          if (btn_row[index1] === 17) {
            pie_row_data[17] += 5;
            if (pie_row_data[17] > 119) {
              pie_row_data[17] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[0] += 1;
            bar_data6[8] += 1;
            bar_data8[1] += 1;
            zone_group_data[0] += 1;
          }
            
          // zone 2
          if (btn_row[index1] === 34) {
            pie_row_data[34] += 5;
            if (pie_row_data[34] > 119) {
              pie_row_data[34] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[1] += 1;
            bar_data6[9] += 1;
            bar_data8[2] += 1;
            zone_group_data[1] += 1;
          }
    
          if (btn_row[index1] === 6) {
            pie_row_data[6] += 5;
            if (pie_row_data[6] > 119) {
              pie_row_data[6] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[1] += 1;
            bar_data6[10] += 1;
            bar_data8[0] += 1;
            zone_group_data[1] += 1;
          }
    
          if (btn_row[index1] === 27) {
            pie_row_data[27] += 5;
            if (pie_row_data[27] > 119) {
              pie_row_data[27] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[1] += 1;
            bar_data6[11] += 1;
            bar_data8[0] += 1;
            zone_group_data[1] += 1;
          }
    
          if (btn_row[index1] === 13) {
            pie_row_data[13] += 5;
            if (pie_row_data[13] > 119) {
              pie_row_data[13] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[1] += 1;
            bar_data6[12] += 1;
            bar_data8[2] += 1;
            zone_group_data[1] += 1;
          }
    
          if (btn_row[index1] === 36) {
            pie_row_data[36] += 5;
            if (pie_row_data[36] > 119) {
              pie_row_data[36] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[1] += 1;
            bar_data6[13] += 1;
            bar_data8[0] += 1;
            zone_group_data[1] += 1;
          }
    
          if (btn_row[index1] === 11) {
            pie_row_data[11] += 5;
            if (pie_row_data[11] > 119) {
              pie_row_data[11] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[1] += 1;
            bar_data6[14] += 1;
            bar_data8[1] += 1;
            zone_group_data[1] += 1;
          }
    
          if (btn_row[index1] === 30) {
            pie_row_data[30] += 5;
            if (pie_row_data[30] > 119) {
              pie_row_data[30] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[1] += 1;
            bar_data6[15] += 1;
            bar_data8[0] += 1;
            zone_group_data[1] += 1;
          }
    
          if (btn_row[index1] === 8) {
            pie_row_data[8] += 5;
            if (pie_row_data[8] > 119) {
              pie_row_data[8] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[1] += 1;
            bar_data6[16] += 1;
            bar_data8[1] += 1;
            zone_group_data[1] += 1;
          }
    
          if (btn_row[index1] === 23) {
            pie_row_data[23] += 5;
            if (pie_row_data[23] > 119) {
              pie_row_data[23] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[1] += 1;
            bar_data6[17] += 1;
            bar_data8[1] += 1;
            zone_group_data[1] += 1;
          }
    
          if (btn_row[index1] === 10) {
            pie_row_data[10] += 5;
            if (pie_row_data[10] > 119) {
              pie_row_data[10] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[1] += 1;
            bar_data6[18] += 1;
            bar_data8[2] += 1;
            zone_group_data[1] += 1;
          }
    
          // zone 3
          if (btn_row[index1] === 5) {
            pie_row_data[5] += 5;
            if (pie_row_data[5] > 119) {
              pie_row_data[5] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[2] += 1;
            bar_data6[19] += 1;
            bar_data8[1] += 1;
            zone_group_data[2] += 1;
          }
    
          if (btn_row[index1] === 24) {
            pie_row_data[24] += 5;
            if (pie_row_data[24] > 119) {
              pie_row_data[24] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[2] += 1;
            bar_data6[20] += 1;
            bar_data8[0] += 1;
            zone_group_data[2] += 1;
          }
    
          if (btn_row[index1] === 16) {
            pie_row_data[16] += 5;
            if (pie_row_data[16] > 119) {
              pie_row_data[16] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[2] += 1;
            bar_data6[21] += 1;
            bar_data8[2] += 1;
            zone_group_data[2] += 1;
          }
    
          if (btn_row[index1] === 33) {
            pie_row_data[33] += 5;
            if (pie_row_data[33] > 119) {
              pie_row_data[33] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[2] += 1;
            bar_data6[22] += 1;
            bar_data8[0] += 1;
            zone_group_data[2] += 1;
          }
    
          if (btn_row[index1] === 1) {
            pie_row_data[1] += 5;
            if (pie_row_data[1] > 119) {
              pie_row_data[1] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[2] += 1;
            bar_data6[23] += 1;
            bar_data8[2] += 1;
            zone_group_data[2] += 1;
          }
    
          if (btn_row[index1] === 20) {
            pie_row_data[20] += 5;
            if (pie_row_data[20] > 119) {
              pie_row_data[20] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[2] += 1;
            bar_data6[24] += 1;
            bar_data8[1] += 1;
            zone_group_data[2] += 1;
          }
    
          if (btn_row[index1] === 14) {
            pie_row_data[14] += 5;
            if (pie_row_data[14] > 119) {
              pie_row_data[14] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[2] += 1;
            bar_data6[25] += 1;
            bar_data8[1] += 1;
            zone_group_data[2] += 1;
          }
    
          if (btn_row[index1] === 31) {
            pie_row_data[31] += 5;
            if (pie_row_data[31] > 119) {
              pie_row_data[31] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[2] += 1;
            bar_data6[26] += 1;
            bar_data8[2] += 1;
            zone_group_data[2] += 1;
          }
    
          if (btn_row[index1] === 9) {
            pie_row_data[9] += 5;
            if (pie_row_data[9] > 119) {
              pie_row_data[9] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[2] += 1;
            bar_data6[27] += 1;
            bar_data8[0] += 1;
            zone_group_data[2] += 1;
          }
    
          // zone 4
          if (btn_row[index1] === 22) {
            pie_row_data[22] += 5;
            if (pie_row_data[22] > 119) {
              pie_row_data[22] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[3] += 1;
            bar_data6[28] += 1;
            bar_data8[2] += 1;
            zone_group_data[3] += 1;
          }
    
          if (btn_row[index1] === 18) {
            pie_row_data[18] += 5;
            if (pie_row_data[18] > 119) {
              pie_row_data[18] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[3] += 1;
            bar_data6[29] += 1;
            zone_group_data[3] += 1;
          }
    
          if (btn_row[index1] === 29) {
            pie_row_data[29] += 5;
            if (pie_row_data[29] > 119) {
              pie_row_data[29] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[3] += 1;
            bar_data6[30] += 1;
            bar_data8[1] += 1;
            zone_group_data[3] += 1;
          }
    
          if (btn_row[index1] === 7) {
            pie_row_data[7] += 5;
            if (pie_row_data[7] > 119) {
              pie_row_data[7] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[3] += 1;
            bar_data6[31] += 1;
            bar_data8[2] += 1;
            zone_group_data[3] += 1;
          }
    
          if (btn_row[index1] === 28) {
            pie_row_data[28] += 5;
            if (pie_row_data[28] > 119) {
              pie_row_data[28] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[3] += 1;
            bar_data6[32] += 1;
            zone_group_data[3] += 1;
          }
    
          if (btn_row[index1] === 12) {
            pie_row_data[12] += 5;
            if (pie_row_data[12] > 119) {
              pie_row_data[12] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[3] += 1;
            bar_data6[33] += 1;
            bar_data8[0] += 1;
            zone_group_data[3] += 1;
          }
    
          if (btn_row[index1] === 35) {
            pie_row_data[35] += 5;
            if (pie_row_data[35] > 119) {
              pie_row_data[35] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[3] += 1;
            bar_data6[34] += 1;
            bar_data8[1] += 1;
            zone_group_data[3] += 1;
          }
    
          if (btn_row[index1] === 3) {
            pie_row_data[3] += 5;
            if (pie_row_data[3] > 119) {
              pie_row_data[3] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[3] += 1;
            bar_data6[35] += 1;
            bar_data8[0] += 1;
            zone_group_data[3] += 1;
          }
    
          if (btn_row[index1] === 26) {
            pie_row_data[26] += 5;
            if (pie_row_data[26] > 119) {
              pie_row_data[26] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[3] += 1;
            bar_data6[36] += 1;
            bar_data8[1] += 1;
            zone_group_data[3] += 1;
          }
        }
    
        let last_num = btn_row.length - 1;
        let last_position = 0;
        for (let btn_index = last_num; btn_index >= 0; btn_index--) {
          btn_row_data.splice(0, 0, btn_row[btn_index]);
          if (btn_position[last_position] === btn_position[btn_row[btn_index]]) {
            bar_data7[0] += 1;
            angle_row.splice(0, 0, angle_array[0]);
          } else {
            let btn_index1 = Math.abs(btn_position[btn_row[btn_index]] - btn_position[last_position]) - 1;
            if (btn_index1 >= 18) {
              btn_index1 = Math.abs(btn_index1 - 35);
            }
            bar_data7[btn_index1] += 1;
            angle_row.splice(0, 0, angle_array[btn_index1]);
          }
          last_position = btn_row[btn_index];
        }
      } else {
        if (!this.state.isCheckedAllData) {
          let filter_length = parseInt(this.state.filterNumber, 10) < btn_row.length ? parseInt(this.state.filterNumber, 10) : btn_row.length;
          for (let index1 = 0; index1 < filter_length; index1++) {
            // zone 1
            if (btn_row[index1] === 0) {
              pie_row_data[0] += 5;
              if (pie_row_data[0] > 119) {
                pie_row_data[0] = 119;
              }
              zone_group_data[0] += 1;
              bar_data5[0] += 1;
              bar_data6[0] += 1;
            }
  
            if (btn_row[index1] === 32) {
              pie_row_data[32] += 5;
              if (pie_row_data[32] > 119) {
                pie_row_data[32] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[0] += 1;
              bar_data6[1] += 1;
              bar_data8[1] += 1;
              zone_group_data[0] += 1;
            }
  
            if (btn_row[index1] === 15) {
              pie_row_data[15] += 5;
              if (pie_row_data[15] > 119) {
                pie_row_data[15] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[0] += 1;
              bar_data6[2] += 1;
              bar_data8[0] += 1;
              zone_group_data[0] += 1;
            }
  
            if (btn_row[index1] === 19) {
              pie_row_data[19] += 5;
              if (pie_row_data[19] > 119) {
                pie_row_data[19] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[0] += 1;
              bar_data6[3] += 1;
              bar_data8[2] += 1;
              zone_group_data[0] += 1;
            }
  
            if (btn_row[index1] === 4) {
              pie_row_data[4] += 5;
              if (pie_row_data[4] > 119) {
                pie_row_data[4] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[0] += 1;
              bar_data6[4] += 1;
              bar_data8[2] += 1;
              zone_group_data[0] += 1;
            }
  
            if (btn_row[index1] === 21) {
              pie_row_data[21] += 5;
              if (pie_row_data[21] > 119) {
                pie_row_data[21] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[0] += 1;
              bar_data6[5] += 1;
              bar_data8[0] += 1;
              zone_group_data[0] += 1;
            }
  
            if (btn_row[index1] === 2) {
              pie_row_data[2] += 5;
              if (pie_row_data[2] > 119) {
                pie_row_data[2] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[0] += 1;
              bar_data6[6] += 1;
              bar_data8[1] += 1;
              zone_group_data[0] += 1;
            }
  
            if (btn_row[index1] === 25) {
              pie_row_data[25] += 5;
              if (pie_row_data[25] > 119) {
                pie_row_data[25] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[0] += 1;
              bar_data7[6] += 1;
              bar_data8[2] += 1;
              zone_group_data[0] += 1;
            }
  
            if (btn_row[index1] === 17) {
              pie_row_data[17] += 5;
              if (pie_row_data[17] > 119) {
                pie_row_data[17] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[0] += 1;
              bar_data6[8] += 1;
              bar_data8[1] += 1;
              zone_group_data[0] += 1;
            }
              
            // zone 2
            if (btn_row[index1] === 34) {
              pie_row_data[34] += 5;
              if (pie_row_data[34] > 119) {
                pie_row_data[34] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[1] += 1;
              bar_data6[9] += 1;
              bar_data8[2] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 6) {
              pie_row_data[6] += 5;
              if (pie_row_data[6] > 119) {
                pie_row_data[6] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[1] += 1;
              bar_data6[10] += 1;
              bar_data8[0] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 27) {
              pie_row_data[27] += 5;
              if (pie_row_data[27] > 119) {
                pie_row_data[27] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[1] += 1;
              bar_data6[11] += 1;
              bar_data8[0] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 13) {
              pie_row_data[13] += 5;
              if (pie_row_data[13] > 119) {
                pie_row_data[13] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[1] += 1;
              bar_data6[12] += 1;
              bar_data8[2] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 36) {
              pie_row_data[36] += 5;
              if (pie_row_data[36] > 119) {
                pie_row_data[36] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[1] += 1;
              bar_data6[13] += 1;
              bar_data8[0] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 11) {
              pie_row_data[11] += 5;
              if (pie_row_data[11] > 119) {
                pie_row_data[11] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[1] += 1;
              bar_data6[14] += 1;
              bar_data8[1] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 30) {
              pie_row_data[30] += 5;
              if (pie_row_data[30] > 119) {
                pie_row_data[30] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[1] += 1;
              bar_data6[15] += 1;
              bar_data8[0] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 8) {
              pie_row_data[8] += 5;
              if (pie_row_data[8] > 119) {
                pie_row_data[8] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[1] += 1;
              bar_data6[16] += 1;
              bar_data8[1] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 23) {
              pie_row_data[23] += 5;
              if (pie_row_data[23] > 119) {
                pie_row_data[23] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[1] += 1;
              bar_data6[17] += 1;
              bar_data8[1] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 10) {
              pie_row_data[10] += 5;
              if (pie_row_data[10] > 119) {
                pie_row_data[10] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[1] += 1;
              bar_data6[18] += 1;
              bar_data8[2] += 1;
              zone_group_data[1] += 1;
            }
  
            // zone 3
            if (btn_row[index1] === 5) {
              pie_row_data[5] += 5;
              if (pie_row_data[5] > 119) {
                pie_row_data[5] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[2] += 1;
              bar_data6[19] += 1;
              bar_data8[1] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 24) {
              pie_row_data[24] += 5;
              if (pie_row_data[24] > 119) {
                pie_row_data[24] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[2] += 1;
              bar_data6[20] += 1;
              bar_data8[0] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 16) {
              pie_row_data[16] += 5;
              if (pie_row_data[16] > 119) {
                pie_row_data[16] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[2] += 1;
              bar_data6[21] += 1;
              bar_data8[2] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 33) {
              pie_row_data[33] += 5;
              if (pie_row_data[33] > 119) {
                pie_row_data[33] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[2] += 1;
              bar_data6[22] += 1;
              bar_data8[0] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 1) {
              pie_row_data[1] += 5;
              if (pie_row_data[1] > 119) {
                pie_row_data[1] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[2] += 1;
              bar_data6[23] += 1;
              bar_data8[2] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 20) {
              pie_row_data[20] += 5;
              if (pie_row_data[20] > 119) {
                pie_row_data[20] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[2] += 1;
              bar_data6[24] += 1;
              bar_data8[1] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 14) {
              pie_row_data[14] += 5;
              if (pie_row_data[14] > 119) {
                pie_row_data[14] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[2] += 1;
              bar_data6[25] += 1;
              bar_data8[1] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 31) {
              pie_row_data[31] += 5;
              if (pie_row_data[31] > 119) {
                pie_row_data[31] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[2] += 1;
              bar_data6[26] += 1;
              bar_data8[2] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 9) {
              pie_row_data[9] += 5;
              if (pie_row_data[9] > 119) {
                pie_row_data[9] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[2] += 1;
              bar_data6[27] += 1;
              bar_data8[0] += 1;
              zone_group_data[2] += 1;
            }
  
            // zone 4
            if (btn_row[index1] === 22) {
              pie_row_data[22] += 5;
              if (pie_row_data[22] > 119) {
                pie_row_data[22] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[3] += 1;
              bar_data6[28] += 1;
              bar_data8[2] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 18) {
              pie_row_data[18] += 5;
              if (pie_row_data[18] > 119) {
                pie_row_data[18] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[3] += 1;
              bar_data6[29] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 29) {
              pie_row_data[29] += 5;
              if (pie_row_data[29] > 119) {
                pie_row_data[29] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[3] += 1;
              bar_data6[30] += 1;
              bar_data8[1] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 7) {
              pie_row_data[7] += 5;
              if (pie_row_data[7] > 119) {
                pie_row_data[7] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[3] += 1;
              bar_data6[31] += 1;
              bar_data8[2] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 28) {
              pie_row_data[28] += 5;
              if (pie_row_data[28] > 119) {
                pie_row_data[28] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[3] += 1;
              bar_data6[32] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 12) {
              pie_row_data[12] += 5;
              if (pie_row_data[12] > 119) {
                pie_row_data[12] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[3] += 1;
              bar_data6[33] += 1;
              bar_data8[0] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 35) {
              pie_row_data[35] += 5;
              if (pie_row_data[35] > 119) {
                pie_row_data[35] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[3] += 1;
              bar_data6[34] += 1;
              bar_data8[1] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 3) {
              pie_row_data[3] += 5;
              if (pie_row_data[3] > 119) {
                pie_row_data[3] = 119;
              }
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[3] += 1;
              bar_data6[35] += 1;
              bar_data8[0] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 26) {
              pie_row_data[26] += 5;
              if (pie_row_data[26] > 119) {
                pie_row_data[26] = 119;
              }
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[3] += 1;
              bar_data6[36] += 1;
              bar_data8[1] += 1;
              zone_group_data[3] += 1;
            }
          }
  
          let last_num = filter_length - 1;
          let last_position = parseInt(this.state.filterNumber, 10) < btn_row.length ? btn_row[filter_length] : 0;
          for (let btn_index = last_num; btn_index >= 0; btn_index--) {
            btn_row_data.splice(0, 0, btn_row[btn_index]);
            if (btn_position[last_position] === btn_position[btn_row[btn_index]]) {
              bar_data7[0] += 1;
            } else {
              let btn_index1 = Math.abs(btn_position[btn_row[btn_index]] - btn_position[last_position]) - 1;
              if (btn_index1 >= 18) {
                btn_index1 = Math.abs(btn_index1 - 35);
              }
              bar_data7[btn_index1] += 1;
            }
            last_position = btn_row[btn_index];
          }
        } else {
          let filter_length = parseInt(this.state.filterNumber, 10) < btn_row.length ? parseInt(this.state.filterNumber, 10) : btn_row.length;
  
          for (let index = 0; index < filter_length; index++) {
            pie_row_data[btn_row[index]] += 5;
            if (pie_row_data[btn_row[index]] > 119) {
              pie_row_data[btn_row[index]] = 119;
            }
          }
          for (let index1 = 0; index1 < btn_row.length; index1++) {
            // zone 1
            if (btn_row[index1] === 0) {
              zone_group_data[0] += 1;
              bar_data5[0] += 1;
              bar_data6[0] += 1;
            }
  
            if (btn_row[index1] === 32) {
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[0] += 1;
              bar_data6[1] += 1;
              bar_data8[1] += 1;
              zone_group_data[0] += 1;
            }
  
            if (btn_row[index1] === 15) {
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[0] += 1;
              bar_data6[2] += 1;
              bar_data8[0] += 1;
              zone_group_data[0] += 1;
            }
  
            if (btn_row[index1] === 19) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[0] += 1;
              bar_data6[3] += 1;
              bar_data8[2] += 1;
              zone_group_data[0] += 1;
            }
  
            if (btn_row[index1] === 4) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[0] += 1;
              bar_data6[4] += 1;
              bar_data8[2] += 1;
              zone_group_data[0] += 1;
            }
  
            if (btn_row[index1] === 21) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[0] += 1;
              bar_data6[5] += 1;
              bar_data8[0] += 1;
              zone_group_data[0] += 1;
            }
  
            if (btn_row[index1] === 2) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[0] += 1;
              bar_data6[6] += 1;
              bar_data8[1] += 1;
              zone_group_data[0] += 1;
            }
  
            if (btn_row[index1] === 25) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[0] += 1;
              bar_data7[6] += 1;
              bar_data8[2] += 1;
              zone_group_data[0] += 1;
            }
  
            if (btn_row[index1] === 17) {
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[0] += 1;
              bar_data6[8] += 1;
              bar_data8[1] += 1;
              zone_group_data[0] += 1;
            }
              
            // zone 2
            if (btn_row[index1] === 34) {
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[1] += 1;
              bar_data6[9] += 1;
              bar_data8[2] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 6) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[1] += 1;
              bar_data6[10] += 1;
              bar_data8[0] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 27) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[1] += 1;
              bar_data6[11] += 1;
              bar_data8[0] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 13) {
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[1] += 1;
              bar_data6[12] += 1;
              bar_data8[2] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 36) {
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[1] += 1;
              bar_data6[13] += 1;
              bar_data8[0] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 11) {
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[1] += 1;
              bar_data6[14] += 1;
              bar_data8[1] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 30) {
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[1] += 1;
              bar_data6[15] += 1;
              bar_data8[0] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 8) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[1] += 1;
              bar_data6[16] += 1;
              bar_data8[1] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 23) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[1] += 1;
              bar_data6[17] += 1;
              bar_data8[1] += 1;
              zone_group_data[1] += 1;
            }
  
            if (btn_row[index1] === 10) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[1] += 1;
              bar_data6[18] += 1;
              bar_data8[2] += 1;
              zone_group_data[1] += 1;
            }
  
            // zone 3
            if (btn_row[index1] === 5) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[2] += 1;
              bar_data6[19] += 1;
              bar_data8[1] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 24) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[2] += 1;
              bar_data6[20] += 1;
              bar_data8[0] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 16) {
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[2] += 1;
              bar_data6[21] += 1;
              bar_data8[2] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 33) {
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[2] += 1;
              bar_data6[22] += 1;
              bar_data8[0] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 1) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[2] += 1;
              bar_data6[23] += 1;
              bar_data8[2] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 20) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[2] += 1;
              bar_data6[24] += 1;
              bar_data8[1] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 14) {
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[2] += 1;
              bar_data6[25] += 1;
              bar_data8[1] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 31) {
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[2] += 1;
              bar_data6[26] += 1;
              bar_data8[2] += 1;
              zone_group_data[2] += 1;
            }
  
            if (btn_row[index1] === 9) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[2] += 1;
              bar_data6[27] += 1;
              bar_data8[0] += 1;
              zone_group_data[2] += 1;
            }
  
            // zone 4
            if (btn_row[index1] === 22) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[1] += 1;
              bar_data5[3] += 1;
              bar_data6[28] += 1;
              bar_data8[2] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 18) {
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[1] += 1;
              bar_data5[3] += 1;
              bar_data6[29] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 29) {
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[3] += 1;
              bar_data6[30] += 1;
              bar_data8[1] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 7) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[3] += 1;
              bar_data6[31] += 1;
              bar_data8[2] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 28) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[3] += 1;
              bar_data6[32] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 12) {
              bar_data1[0] += 1;
              bar_data2[0] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[3] += 1;
              bar_data6[33] += 1;
              bar_data8[0] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 35) {
              bar_data1[1] += 1;
              bar_data2[1] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[3] += 1;
              bar_data6[34] += 1;
              bar_data8[1] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 3) {
              bar_data1[0] += 1;
              bar_data2[1] += 1;
              bar_data3[0] += 1;
              bar_data4[0] += 1;
              bar_data5[3] += 1;
              bar_data6[35] += 1;
              bar_data8[0] += 1;
              zone_group_data[3] += 1;
            }
  
            if (btn_row[index1] === 26) {
              bar_data1[1] += 1;
              bar_data2[0] += 1;
              bar_data3[1] += 1;
              bar_data4[2] += 1;
              bar_data5[3] += 1;
              bar_data6[36] += 1;
              bar_data8[1] += 1;
              zone_group_data[3] += 1;
            }
          }
          
          let last_num = filter_length - 1;
          let last_position = parseInt(this.state.filterNumber, 10) < btn_row.length ? btn_row[filter_length] : 0;
          for (let btn_index = last_num; btn_index >= 0; btn_index--) {
            btn_row_data.splice(0, 0, btn_row[btn_index]);
            if (btn_position[last_position] === btn_position[btn_row[btn_index]]) {
            } else {
              let btn_index1 = Math.abs(btn_position[btn_row[btn_index]] - btn_position[last_position]) - 1;
              if (btn_index1 >= 18) {
                btn_index1 = Math.abs(btn_index1 - 35);
              }
            }
            last_position = btn_row[btn_index];
          }
  
          last_num = btn_row.length - 1;
          last_position = 0;
          for (let btn_index2 = last_num; btn_index2 >= 0; btn_index2--) {
            if (btn_position[last_position] === btn_position[btn_row[btn_index2]]) {
              bar_data7[0] += 1;
            } else {
              let btn_index3 = Math.abs(btn_position[btn_row[btn_index2]] - btn_position[last_position]) - 1;
              if (btn_index3 >= 18) {
                btn_index3 = Math.abs(btn_index3 - 35);
              }
              bar_data7[btn_index3] += 1;
            }
            last_position = btn_row[btn_index2];
          }
        }
        if (btn_row.length) {
          let last_num = btn_row.length - 1;
          let last_position = 0;
          for (let btn_index2 = last_num; btn_index2 >= 0; btn_index2--) {
            if (btn_position[last_position] === btn_position[btn_row[btn_index2]]) {
              angle_row.splice(0, 0, angle_array[0]);
            } else {
              let btn_index3 = Math.abs(btn_position[btn_row[btn_index2]] - btn_position[last_position]) - 1;
              if (btn_index3 >= 18) {
                btn_index3 = Math.abs(btn_index3 - 35);
              }
              angle_row.splice(0, 0, angle_array[btn_index3]);
            }
            last_position = btn_row[btn_index2];
          }
        }
      }

      for (var pie_index = 0; pie_index < pie_row_data.length; pie_index++) {
        pie_row[pie_index] = pie_row_data[pie_index] * range1;
        if (pie_row[pie_index] > 119) {
          pie_row[pie_index] = 119;
        }
      }
      for (var zone_group_data_index = 0; zone_group_data_index < zone_group_data.length; zone_group_data_index++) {
        zone_group[zone_group_data_index] = zone_group_data[zone_group_data_index] * range2;
      }
      for (var data1_index = 0; data1_index < bar_data1.length; data1_index++) {
        data1.datasets[0].data[data1_index] = bar_data1[data1_index] * range2;
      }
      for (var data2_index = 0; data2_index < bar_data2.length; data2_index++) {
        data2.datasets[0].data[data2_index] = bar_data2[data2_index] * range2;
      }
      for (var data3_index = 0; data3_index < bar_data3.length; data3_index++) {
        data3.datasets[0].data[data3_index] = bar_data3[data3_index] * range2;
      }
      for (var data4_index = 0; data4_index < bar_data4.length; data4_index++) {
        data4.datasets[0].data[data4_index] = bar_data4[data4_index] * range2;
      }
      for (var data5_index = 0; data5_index < bar_data5.length; data5_index++) {
        data5.datasets[0].data[data5_index] = bar_data5[data5_index] * range2;
      }
      for (var data6_index = 0; data6_index < bar_data6.length; data6_index++) {
        data6.datasets[0].data[data6_index] = bar_data6[data6_index] * range2;
      }
      for (var data7_index = 0; data7_index < bar_data7.length; data7_index++) {
        data7.datasets[0].data[data7_index] = bar_data7[data7_index] * range2;
      }
      for (var data8_index = 0; data8_index < bar_data8.length; data8_index++) {
        data8.datasets[0].data[data8_index] = bar_data8[data8_index] * range2;
      }
      this.setState({
        btn_row: btn_row_data,
        btn_row_data: btn_row,
        pie_row: pie_row,
        zone_group: zone_group,
        data1: data1,
        data2: data2,
        data3: data3,
        data4: data4,
        data5: data5,
        data6: data6,
        data7: data7,
        data8: data8,
        angle_row: angle_row,
        last_position: btn_row[0],
        cSelected: [],
        cSelected_status: false,
        undo_status: false,
        bar_status: true,
        page_status: false,
        type: ''
      })
      this.updatePieCanvas();
      this.updateRotateCanvas();
      this.updateLineCanvas();
      clearInterval(this.timer);
      this.timer = setInterval(this.tick1.bind(this), this.state.range_3);
    }
  }

  stop_toggle = () => {
    clearInterval(this.timer);

    this.max_index = 0;
    let btn_row = [];
    let btn_row_data = [];
    let bar_data1 = [0, 0];
    let bar_data2 = [0, 0];
    let bar_data3 = [0, 0];
    let bar_data4 = [0, 0, 0];
    let bar_data5 = [0, 0, 0, 0];
    let bar_data6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    let bar_data7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    let bar_data8 = [0, 0, 0];
    let pie_row_data = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    let zone_group_data = [0, 0, 0, 0];
    let angle_row = [];
    var range1 = parseInt(this.state.range_1, 10);
    var range2 = parseInt(this.state.range_2, 10);
    let pie_row = this.state.pie_row;
    let zone_group = this.state.zone_group;
    let data1 = this.state.data1;
    let data2 = this.state.data2;
    let data3 = this.state.data3;
    let data4 = this.state.data4;
    let data5 = this.state.data5;
    let data6 = this.state.data6;
    let data7 = this.state.data7;
    let data8 = this.state.data8;

    for (var btn_row_data_index = this.btn_row_temp.length - 1; btn_row_data_index >= this.max_index;  btn_row_data_index--) {
      btn_row.splice(0, 0, this.btn_row_temp[btn_row_data_index]);
    }

    if (!this.state.isFilter) {
      for (let index1 = 0; index1 < btn_row.length; index1++) {
        // zone 1
        if (btn_row[index1] === 0) {
          pie_row_data[0] += 5;
          if (pie_row_data[0] > 119) {
            pie_row_data[0] = 119;
          }
          zone_group_data[0] += 1;
          bar_data5[0] += 1;
          bar_data6[0] += 1;
        }
  
        if (btn_row[index1] === 32) {
          pie_row_data[32] += 5;
          if (pie_row_data[32] > 119) {
            pie_row_data[32] = 119;
          }
          bar_data1[0] += 1;
          bar_data2[0] += 1;
          bar_data3[1] += 1;
          bar_data4[2] += 1;
          bar_data5[0] += 1;
          bar_data6[1] += 1;
          bar_data8[1] += 1;
          zone_group_data[0] += 1;
        }
  
        if (btn_row[index1] === 15) {
          pie_row_data[15] += 5;
          if (pie_row_data[15] > 119) {
            pie_row_data[15] = 119;
          }
          bar_data1[1] += 1;
          bar_data2[1] += 1;
          bar_data3[0] += 1;
          bar_data4[1] += 1;
          bar_data5[0] += 1;
          bar_data6[2] += 1;
          bar_data8[0] += 1;
          zone_group_data[0] += 1;
        }
  
        if (btn_row[index1] === 19) {
          pie_row_data[19] += 5;
          if (pie_row_data[19] > 119) {
            pie_row_data[19] = 119;
          }
          bar_data1[0] += 1;
          bar_data2[1] += 1;
          bar_data3[1] += 1;
          bar_data4[1] += 1;
          bar_data5[0] += 1;
          bar_data6[3] += 1;
          bar_data8[2] += 1;
          zone_group_data[0] += 1;
        }
  
        if (btn_row[index1] === 4) {
          pie_row_data[4] += 5;
          if (pie_row_data[4] > 119) {
            pie_row_data[4] = 119;
          }
          bar_data1[1] += 1;
          bar_data2[0] += 1;
          bar_data3[0] += 1;
          bar_data4[0] += 1;
          bar_data5[0] += 1;
          bar_data6[4] += 1;
          bar_data8[2] += 1;
          zone_group_data[0] += 1;
        }
  
        if (btn_row[index1] === 21) {
          pie_row_data[21] += 5;
          if (pie_row_data[21] > 119) {
            pie_row_data[21] = 119;
          }
          bar_data1[0] += 1;
          bar_data2[1] += 1;
          bar_data3[1] += 1;
          bar_data4[1] += 1;
          bar_data5[0] += 1;
          bar_data6[5] += 1;
          bar_data8[0] += 1;
          zone_group_data[0] += 1;
        }
  
        if (btn_row[index1] === 2) {
          pie_row_data[2] += 5;
          if (pie_row_data[2] > 119) {
            pie_row_data[2] = 119;
          }
          bar_data1[1] += 1;
          bar_data2[0] += 1;
          bar_data3[0] += 1;
          bar_data4[0] += 1;
          bar_data5[0] += 1;
          bar_data6[6] += 1;
          bar_data8[1] += 1;
          zone_group_data[0] += 1;
        }
  
        if (btn_row[index1] === 25) {
          pie_row_data[25] += 5;
          if (pie_row_data[25] > 119) {
            pie_row_data[25] = 119;
          }
          bar_data1[0] += 1;
          bar_data2[1] += 1;
          bar_data3[1] += 1;
          bar_data4[2] += 1;
          bar_data5[0] += 1;
          bar_data7[6] += 1;
          bar_data8[2] += 1;
          zone_group_data[0] += 1;
        }
  
        if (btn_row[index1] === 17) {
          pie_row_data[17] += 5;
          if (pie_row_data[17] > 119) {
            pie_row_data[17] = 119;
          }
          bar_data1[1] += 1;
          bar_data2[1] += 1;
          bar_data3[0] += 1;
          bar_data4[1] += 1;
          bar_data5[0] += 1;
          bar_data6[8] += 1;
          bar_data8[1] += 1;
          zone_group_data[0] += 1;
        }
          
        // zone 2
        if (btn_row[index1] === 34) {
          pie_row_data[34] += 5;
          if (pie_row_data[34] > 119) {
            pie_row_data[34] = 119;
          }
          bar_data1[0] += 1;
          bar_data2[0] += 1;
          bar_data3[1] += 1;
          bar_data4[2] += 1;
          bar_data5[1] += 1;
          bar_data6[9] += 1;
          bar_data8[2] += 1;
          zone_group_data[1] += 1;
        }
  
        if (btn_row[index1] === 6) {
          pie_row_data[6] += 5;
          if (pie_row_data[6] > 119) {
            pie_row_data[6] = 119;
          }
          bar_data1[1] += 1;
          bar_data2[0] += 1;
          bar_data3[0] += 1;
          bar_data4[0] += 1;
          bar_data5[1] += 1;
          bar_data6[10] += 1;
          bar_data8[0] += 1;
          zone_group_data[1] += 1;
        }
  
        if (btn_row[index1] === 27) {
          pie_row_data[27] += 5;
          if (pie_row_data[27] > 119) {
            pie_row_data[27] = 119;
          }
          bar_data1[0] += 1;
          bar_data2[1] += 1;
          bar_data3[1] += 1;
          bar_data4[2] += 1;
          bar_data5[1] += 1;
          bar_data6[11] += 1;
          bar_data8[0] += 1;
          zone_group_data[1] += 1;
        }
  
        if (btn_row[index1] === 13) {
          pie_row_data[13] += 5;
          if (pie_row_data[13] > 119) {
            pie_row_data[13] = 119;
          }
          bar_data1[1] += 1;
          bar_data2[1] += 1;
          bar_data3[0] += 1;
          bar_data4[1] += 1;
          bar_data5[1] += 1;
          bar_data6[12] += 1;
          bar_data8[2] += 1;
          zone_group_data[1] += 1;
        }
  
        if (btn_row[index1] === 36) {
          pie_row_data[36] += 5;
          if (pie_row_data[36] > 119) {
            pie_row_data[36] = 119;
          }
          bar_data1[0] += 1;
          bar_data2[0] += 1;
          bar_data3[1] += 1;
          bar_data4[2] += 1;
          bar_data5[1] += 1;
          bar_data6[13] += 1;
          bar_data8[0] += 1;
          zone_group_data[1] += 1;
        }
  
        if (btn_row[index1] === 11) {
          pie_row_data[11] += 5;
          if (pie_row_data[11] > 119) {
            pie_row_data[11] = 119;
          }
          bar_data1[1] += 1;
          bar_data2[1] += 1;
          bar_data3[0] += 1;
          bar_data4[0] += 1;
          bar_data5[1] += 1;
          bar_data6[14] += 1;
          bar_data8[1] += 1;
          zone_group_data[1] += 1;
        }
  
        if (btn_row[index1] === 30) {
          pie_row_data[30] += 5;
          if (pie_row_data[30] > 119) {
            pie_row_data[30] = 119;
          }
          bar_data1[0] += 1;
          bar_data2[0] += 1;
          bar_data3[1] += 1;
          bar_data4[2] += 1;
          bar_data5[1] += 1;
          bar_data6[15] += 1;
          bar_data8[0] += 1;
          zone_group_data[1] += 1;
        }
  
        if (btn_row[index1] === 8) {
          pie_row_data[8] += 5;
          if (pie_row_data[8] > 119) {
            pie_row_data[8] = 119;
          }
          bar_data1[1] += 1;
          bar_data2[0] += 1;
          bar_data3[0] += 1;
          bar_data4[0] += 1;
          bar_data5[1] += 1;
          bar_data6[16] += 1;
          bar_data8[1] += 1;
          zone_group_data[1] += 1;
        }
  
        if (btn_row[index1] === 23) {
          pie_row_data[23] += 5;
          if (pie_row_data[23] > 119) {
            pie_row_data[23] = 119;
          }
          bar_data1[0] += 1;
          bar_data2[1] += 1;
          bar_data3[1] += 1;
          bar_data4[1] += 1;
          bar_data5[1] += 1;
          bar_data6[17] += 1;
          bar_data8[1] += 1;
          zone_group_data[1] += 1;
        }
  
        if (btn_row[index1] === 10) {
          pie_row_data[10] += 5;
          if (pie_row_data[10] > 119) {
            pie_row_data[10] = 119;
          }
          bar_data1[1] += 1;
          bar_data2[0] += 1;
          bar_data3[0] += 1;
          bar_data4[0] += 1;
          bar_data5[1] += 1;
          bar_data6[18] += 1;
          bar_data8[2] += 1;
          zone_group_data[1] += 1;
        }
  
        // zone 3
        if (btn_row[index1] === 5) {
          pie_row_data[5] += 5;
          if (pie_row_data[5] > 119) {
            pie_row_data[5] = 119;
          }
          bar_data1[0] += 1;
          bar_data2[1] += 1;
          bar_data3[0] += 1;
          bar_data4[0] += 1;
          bar_data5[2] += 1;
          bar_data6[19] += 1;
          bar_data8[1] += 1;
          zone_group_data[2] += 1;
        }
  
        if (btn_row[index1] === 24) {
          pie_row_data[24] += 5;
          if (pie_row_data[24] > 119) {
            pie_row_data[24] = 119;
          }
          bar_data1[1] += 1;
          bar_data2[0] += 1;
          bar_data3[1] += 1;
          bar_data4[1] += 1;
          bar_data5[2] += 1;
          bar_data6[20] += 1;
          bar_data8[0] += 1;
          zone_group_data[2] += 1;
        }
  
        if (btn_row[index1] === 16) {
          pie_row_data[16] += 5;
          if (pie_row_data[16] > 119) {
            pie_row_data[16] = 119;
          }
          bar_data1[0] += 1;
          bar_data2[0] += 1;
          bar_data3[0] += 1;
          bar_data4[1] += 1;
          bar_data5[2] += 1;
          bar_data6[21] += 1;
          bar_data8[2] += 1;
          zone_group_data[2] += 1;
        }
  
        if (btn_row[index1] === 33) {
          pie_row_data[33] += 5;
          if (pie_row_data[33] > 119) {
            pie_row_data[33] = 119;
          }
          bar_data1[1] += 1;
          bar_data2[1] += 1;
          bar_data3[1] += 1;
          bar_data4[2] += 1;
          bar_data5[2] += 1;
          bar_data6[22] += 1;
          bar_data8[0] += 1;
          zone_group_data[2] += 1;
        }
  
        if (btn_row[index1] === 1) {
          pie_row_data[1] += 5;
          if (pie_row_data[1] > 119) {
            pie_row_data[1] = 119;
          }
          bar_data1[0] += 1;
          bar_data2[1] += 1;
          bar_data3[0] += 1;
          bar_data4[0] += 1;
          bar_data5[2] += 1;
          bar_data6[23] += 1;
          bar_data8[2] += 1;
          zone_group_data[2] += 1;
        }
  
        if (btn_row[index1] === 20) {
          pie_row_data[20] += 5;
          if (pie_row_data[20] > 119) {
            pie_row_data[20] = 119;
          }
          bar_data1[1] += 1;
          bar_data2[0] += 1;
          bar_data3[1] += 1;
          bar_data4[1] += 1;
          bar_data5[2] += 1;
          bar_data6[24] += 1;
          bar_data8[1] += 1;
          zone_group_data[2] += 1;
        }
  
        if (btn_row[index1] === 14) {
          pie_row_data[14] += 5;
          if (pie_row_data[14] > 119) {
            pie_row_data[14] = 119;
          }
          bar_data1[0] += 1;
          bar_data2[0] += 1;
          bar_data3[0] += 1;
          bar_data4[1] += 1;
          bar_data5[2] += 1;
          bar_data6[25] += 1;
          bar_data8[1] += 1;
          zone_group_data[2] += 1;
        }
  
        if (btn_row[index1] === 31) {
          pie_row_data[31] += 5;
          if (pie_row_data[31] > 119) {
            pie_row_data[31] = 119;
          }
          bar_data1[1] += 1;
          bar_data2[1] += 1;
          bar_data3[1] += 1;
          bar_data4[2] += 1;
          bar_data5[2] += 1;
          bar_data6[26] += 1;
          bar_data8[2] += 1;
          zone_group_data[2] += 1;
        }
  
        if (btn_row[index1] === 9) {
          pie_row_data[9] += 5;
          if (pie_row_data[9] > 119) {
            pie_row_data[9] = 119;
          }
          bar_data1[0] += 1;
          bar_data2[1] += 1;
          bar_data3[0] += 1;
          bar_data4[0] += 1;
          bar_data5[2] += 1;
          bar_data6[27] += 1;
          bar_data8[0] += 1;
          zone_group_data[2] += 1;
        }
  
        // zone 4
        if (btn_row[index1] === 22) {
          pie_row_data[22] += 5;
          if (pie_row_data[22] > 119) {
            pie_row_data[22] = 119;
          }
          bar_data1[1] += 1;
          bar_data2[0] += 1;
          bar_data3[1] += 1;
          bar_data4[1] += 1;
          bar_data5[3] += 1;
          bar_data6[28] += 1;
          bar_data8[2] += 1;
          zone_group_data[3] += 1;
        }
  
        if (btn_row[index1] === 18) {
          pie_row_data[18] += 5;
          if (pie_row_data[18] > 119) {
            pie_row_data[18] = 119;
          }
          bar_data1[0] += 1;
          bar_data2[0] += 1;
          bar_data3[0] += 1;
          bar_data4[1] += 1;
          bar_data5[3] += 1;
          bar_data6[29] += 1;
          zone_group_data[3] += 1;
        }
  
        if (btn_row[index1] === 29) {
          pie_row_data[29] += 5;
          if (pie_row_data[29] > 119) {
            pie_row_data[29] = 119;
          }
          bar_data1[1] += 1;
          bar_data2[1] += 1;
          bar_data3[1] += 1;
          bar_data4[2] += 1;
          bar_data5[3] += 1;
          bar_data6[30] += 1;
          bar_data8[1] += 1;
          zone_group_data[3] += 1;
        }
  
        if (btn_row[index1] === 7) {
          pie_row_data[7] += 5;
          if (pie_row_data[7] > 119) {
            pie_row_data[7] = 119;
          }
          bar_data1[0] += 1;
          bar_data2[1] += 1;
          bar_data3[0] += 1;
          bar_data4[0] += 1;
          bar_data5[3] += 1;
          bar_data6[31] += 1;
          bar_data8[2] += 1;
          zone_group_data[3] += 1;
        }
  
        if (btn_row[index1] === 28) {
          pie_row_data[28] += 5;
          if (pie_row_data[28] > 119) {
            pie_row_data[28] = 119;
          }
          bar_data1[1] += 1;
          bar_data2[0] += 1;
          bar_data3[1] += 1;
          bar_data4[2] += 1;
          bar_data5[3] += 1;
          bar_data6[32] += 1;
          zone_group_data[3] += 1;
        }
  
        if (btn_row[index1] === 12) {
          pie_row_data[12] += 5;
          if (pie_row_data[12] > 119) {
            pie_row_data[12] = 119;
          }
          bar_data1[0] += 1;
          bar_data2[0] += 1;
          bar_data3[0] += 1;
          bar_data4[0] += 1;
          bar_data5[3] += 1;
          bar_data6[33] += 1;
          bar_data8[0] += 1;
          zone_group_data[3] += 1;
        }
  
        if (btn_row[index1] === 35) {
          pie_row_data[35] += 5;
          if (pie_row_data[35] > 119) {
            pie_row_data[35] = 119;
          }
          bar_data1[1] += 1;
          bar_data2[1] += 1;
          bar_data3[1] += 1;
          bar_data4[2] += 1;
          bar_data5[3] += 1;
          bar_data6[34] += 1;
          bar_data8[1] += 1;
          zone_group_data[3] += 1;
        }
  
        if (btn_row[index1] === 3) {
          pie_row_data[3] += 5;
          if (pie_row_data[3] > 119) {
            pie_row_data[3] = 119;
          }
          bar_data1[0] += 1;
          bar_data2[1] += 1;
          bar_data3[0] += 1;
          bar_data4[0] += 1;
          bar_data5[3] += 1;
          bar_data6[35] += 1;
          bar_data8[0] += 1;
          zone_group_data[3] += 1;
        }
  
        if (btn_row[index1] === 26) {
          pie_row_data[26] += 5;
          if (pie_row_data[26] > 119) {
            pie_row_data[26] = 119;
          }
          bar_data1[1] += 1;
          bar_data2[0] += 1;
          bar_data3[1] += 1;
          bar_data4[2] += 1;
          bar_data5[3] += 1;
          bar_data6[36] += 1;
          bar_data8[1] += 1;
          zone_group_data[3] += 1;
        }
      }
  
      let last_num = btn_row.length - 1;
      let last_position = 0;
      for (let btn_index = last_num; btn_index >= 0; btn_index--) {
        btn_row_data.splice(0, 0, btn_row[btn_index]);
        if (btn_position[last_position] === btn_position[btn_row[btn_index]]) {
          bar_data7[0] += 1;
          angle_row.splice(0, 0, angle_array[0]);
        } else {
          let btn_index1 = Math.abs(btn_position[btn_row[btn_index]] - btn_position[last_position]) - 1;
          if (btn_index1 >= 18) {
            btn_index1 = Math.abs(btn_index1 - 35);
          }
          bar_data7[btn_index1] += 1;
          angle_row.splice(0, 0, angle_array[btn_index1]);
        }
        last_position = btn_row[btn_index];
      }
    } else {
      if (!this.state.isCheckedAllData) {
        let filter_length = parseInt(this.state.filterNumber, 10) < btn_row.length ? parseInt(this.state.filterNumber, 10) : btn_row.length;
        for (let index1 = 0; index1 < filter_length; index1++) {
          // zone 1
          if (btn_row[index1] === 0) {
            pie_row_data[0] += 5;
            if (pie_row_data[0] > 119) {
              pie_row_data[0] = 119;
            }
            zone_group_data[0] += 1;
            bar_data5[0] += 1;
            bar_data6[0] += 1;
          }

          if (btn_row[index1] === 32) {
            pie_row_data[32] += 5;
            if (pie_row_data[32] > 119) {
              pie_row_data[32] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[0] += 1;
            bar_data6[1] += 1;
            bar_data8[1] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 15) {
            pie_row_data[15] += 5;
            if (pie_row_data[15] > 119) {
              pie_row_data[15] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[0] += 1;
            bar_data6[2] += 1;
            bar_data8[0] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 19) {
            pie_row_data[19] += 5;
            if (pie_row_data[19] > 119) {
              pie_row_data[19] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[0] += 1;
            bar_data6[3] += 1;
            bar_data8[2] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 4) {
            pie_row_data[4] += 5;
            if (pie_row_data[4] > 119) {
              pie_row_data[4] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[0] += 1;
            bar_data6[4] += 1;
            bar_data8[2] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 21) {
            pie_row_data[21] += 5;
            if (pie_row_data[21] > 119) {
              pie_row_data[21] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[0] += 1;
            bar_data6[5] += 1;
            bar_data8[0] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 2) {
            pie_row_data[2] += 5;
            if (pie_row_data[2] > 119) {
              pie_row_data[2] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[0] += 1;
            bar_data6[6] += 1;
            bar_data8[1] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 25) {
            pie_row_data[25] += 5;
            if (pie_row_data[25] > 119) {
              pie_row_data[25] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[0] += 1;
            bar_data7[6] += 1;
            bar_data8[2] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 17) {
            pie_row_data[17] += 5;
            if (pie_row_data[17] > 119) {
              pie_row_data[17] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[0] += 1;
            bar_data6[8] += 1;
            bar_data8[1] += 1;
            zone_group_data[0] += 1;
          }
            
          // zone 2
          if (btn_row[index1] === 34) {
            pie_row_data[34] += 5;
            if (pie_row_data[34] > 119) {
              pie_row_data[34] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[1] += 1;
            bar_data6[9] += 1;
            bar_data8[2] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 6) {
            pie_row_data[6] += 5;
            if (pie_row_data[6] > 119) {
              pie_row_data[6] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[1] += 1;
            bar_data6[10] += 1;
            bar_data8[0] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 27) {
            pie_row_data[27] += 5;
            if (pie_row_data[27] > 119) {
              pie_row_data[27] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[1] += 1;
            bar_data6[11] += 1;
            bar_data8[0] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 13) {
            pie_row_data[13] += 5;
            if (pie_row_data[13] > 119) {
              pie_row_data[13] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[1] += 1;
            bar_data6[12] += 1;
            bar_data8[2] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 36) {
            pie_row_data[36] += 5;
            if (pie_row_data[36] > 119) {
              pie_row_data[36] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[1] += 1;
            bar_data6[13] += 1;
            bar_data8[0] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 11) {
            pie_row_data[11] += 5;
            if (pie_row_data[11] > 119) {
              pie_row_data[11] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[1] += 1;
            bar_data6[14] += 1;
            bar_data8[1] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 30) {
            pie_row_data[30] += 5;
            if (pie_row_data[30] > 119) {
              pie_row_data[30] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[1] += 1;
            bar_data6[15] += 1;
            bar_data8[0] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 8) {
            pie_row_data[8] += 5;
            if (pie_row_data[8] > 119) {
              pie_row_data[8] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[1] += 1;
            bar_data6[16] += 1;
            bar_data8[1] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 23) {
            pie_row_data[23] += 5;
            if (pie_row_data[23] > 119) {
              pie_row_data[23] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[1] += 1;
            bar_data6[17] += 1;
            bar_data8[1] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 10) {
            pie_row_data[10] += 5;
            if (pie_row_data[10] > 119) {
              pie_row_data[10] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[1] += 1;
            bar_data6[18] += 1;
            bar_data8[2] += 1;
            zone_group_data[1] += 1;
          }

          // zone 3
          if (btn_row[index1] === 5) {
            pie_row_data[5] += 5;
            if (pie_row_data[5] > 119) {
              pie_row_data[5] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[2] += 1;
            bar_data6[19] += 1;
            bar_data8[1] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 24) {
            pie_row_data[24] += 5;
            if (pie_row_data[24] > 119) {
              pie_row_data[24] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[2] += 1;
            bar_data6[20] += 1;
            bar_data8[0] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 16) {
            pie_row_data[16] += 5;
            if (pie_row_data[16] > 119) {
              pie_row_data[16] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[2] += 1;
            bar_data6[21] += 1;
            bar_data8[2] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 33) {
            pie_row_data[33] += 5;
            if (pie_row_data[33] > 119) {
              pie_row_data[33] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[2] += 1;
            bar_data6[22] += 1;
            bar_data8[0] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 1) {
            pie_row_data[1] += 5;
            if (pie_row_data[1] > 119) {
              pie_row_data[1] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[2] += 1;
            bar_data6[23] += 1;
            bar_data8[2] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 20) {
            pie_row_data[20] += 5;
            if (pie_row_data[20] > 119) {
              pie_row_data[20] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[2] += 1;
            bar_data6[24] += 1;
            bar_data8[1] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 14) {
            pie_row_data[14] += 5;
            if (pie_row_data[14] > 119) {
              pie_row_data[14] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[2] += 1;
            bar_data6[25] += 1;
            bar_data8[1] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 31) {
            pie_row_data[31] += 5;
            if (pie_row_data[31] > 119) {
              pie_row_data[31] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[2] += 1;
            bar_data6[26] += 1;
            bar_data8[2] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 9) {
            pie_row_data[9] += 5;
            if (pie_row_data[9] > 119) {
              pie_row_data[9] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[2] += 1;
            bar_data6[27] += 1;
            bar_data8[0] += 1;
            zone_group_data[2] += 1;
          }

          // zone 4
          if (btn_row[index1] === 22) {
            pie_row_data[22] += 5;
            if (pie_row_data[22] > 119) {
              pie_row_data[22] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[3] += 1;
            bar_data6[28] += 1;
            bar_data8[2] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 18) {
            pie_row_data[18] += 5;
            if (pie_row_data[18] > 119) {
              pie_row_data[18] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[3] += 1;
            bar_data6[29] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 29) {
            pie_row_data[29] += 5;
            if (pie_row_data[29] > 119) {
              pie_row_data[29] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[3] += 1;
            bar_data6[30] += 1;
            bar_data8[1] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 7) {
            pie_row_data[7] += 5;
            if (pie_row_data[7] > 119) {
              pie_row_data[7] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[3] += 1;
            bar_data6[31] += 1;
            bar_data8[2] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 28) {
            pie_row_data[28] += 5;
            if (pie_row_data[28] > 119) {
              pie_row_data[28] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[3] += 1;
            bar_data6[32] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 12) {
            pie_row_data[12] += 5;
            if (pie_row_data[12] > 119) {
              pie_row_data[12] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[3] += 1;
            bar_data6[33] += 1;
            bar_data8[0] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 35) {
            pie_row_data[35] += 5;
            if (pie_row_data[35] > 119) {
              pie_row_data[35] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[3] += 1;
            bar_data6[34] += 1;
            bar_data8[1] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 3) {
            pie_row_data[3] += 5;
            if (pie_row_data[3] > 119) {
              pie_row_data[3] = 119;
            }
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[3] += 1;
            bar_data6[35] += 1;
            bar_data8[0] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 26) {
            pie_row_data[26] += 5;
            if (pie_row_data[26] > 119) {
              pie_row_data[26] = 119;
            }
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[3] += 1;
            bar_data6[36] += 1;
            bar_data8[1] += 1;
            zone_group_data[3] += 1;
          }
        }

        let last_num = filter_length - 1;
        let last_position = parseInt(this.state.filterNumber, 10) < btn_row.length ? btn_row[filter_length] : 0;
        for (let btn_index = last_num; btn_index >= 0; btn_index--) {
          btn_row_data.splice(0, 0, btn_row[btn_index]);
          if (btn_position[last_position] === btn_position[btn_row[btn_index]]) {
            bar_data7[0] += 1;
          } else {
            let btn_index1 = Math.abs(btn_position[btn_row[btn_index]] - btn_position[last_position]) - 1;
            if (btn_index1 >= 18) {
              btn_index1 = Math.abs(btn_index1 - 35);
            }
            bar_data7[btn_index1] += 1;
          }
          last_position = btn_row[btn_index];
        }
      } else {
        let filter_length = parseInt(this.state.filterNumber, 10) < btn_row.length ? parseInt(this.state.filterNumber, 10) : btn_row.length;

        for (let index = 0; index < filter_length; index++) {
          pie_row_data[btn_row[index]] += 5;
          if (pie_row_data[btn_row[index]] > 119) {
            pie_row_data[btn_row[index]] = 119;
          }
        }
        for (let index1 = 0; index1 < btn_row.length; index1++) {
          // zone 1
          if (btn_row[index1] === 0) {
            zone_group_data[0] += 1;
            bar_data5[0] += 1;
            bar_data6[0] += 1;
          }

          if (btn_row[index1] === 32) {
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[0] += 1;
            bar_data6[1] += 1;
            bar_data8[1] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 15) {
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[0] += 1;
            bar_data6[2] += 1;
            bar_data8[0] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 19) {
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[0] += 1;
            bar_data6[3] += 1;
            bar_data8[2] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 4) {
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[0] += 1;
            bar_data6[4] += 1;
            bar_data8[2] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 21) {
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[0] += 1;
            bar_data6[5] += 1;
            bar_data8[0] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 2) {
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[0] += 1;
            bar_data6[6] += 1;
            bar_data8[1] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 25) {
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[0] += 1;
            bar_data7[6] += 1;
            bar_data8[2] += 1;
            zone_group_data[0] += 1;
          }

          if (btn_row[index1] === 17) {
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[0] += 1;
            bar_data6[8] += 1;
            bar_data8[1] += 1;
            zone_group_data[0] += 1;
          }
            
          // zone 2
          if (btn_row[index1] === 34) {
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[1] += 1;
            bar_data6[9] += 1;
            bar_data8[2] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 6) {
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[1] += 1;
            bar_data6[10] += 1;
            bar_data8[0] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 27) {
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[1] += 1;
            bar_data6[11] += 1;
            bar_data8[0] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 13) {
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[1] += 1;
            bar_data6[12] += 1;
            bar_data8[2] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 36) {
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[1] += 1;
            bar_data6[13] += 1;
            bar_data8[0] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 11) {
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[1] += 1;
            bar_data6[14] += 1;
            bar_data8[1] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 30) {
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[1] += 1;
            bar_data6[15] += 1;
            bar_data8[0] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 8) {
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[1] += 1;
            bar_data6[16] += 1;
            bar_data8[1] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 23) {
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[1] += 1;
            bar_data6[17] += 1;
            bar_data8[1] += 1;
            zone_group_data[1] += 1;
          }

          if (btn_row[index1] === 10) {
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[1] += 1;
            bar_data6[18] += 1;
            bar_data8[2] += 1;
            zone_group_data[1] += 1;
          }

          // zone 3
          if (btn_row[index1] === 5) {
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[2] += 1;
            bar_data6[19] += 1;
            bar_data8[1] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 24) {
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[2] += 1;
            bar_data6[20] += 1;
            bar_data8[0] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 16) {
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[2] += 1;
            bar_data6[21] += 1;
            bar_data8[2] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 33) {
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[2] += 1;
            bar_data6[22] += 1;
            bar_data8[0] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 1) {
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[2] += 1;
            bar_data6[23] += 1;
            bar_data8[2] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 20) {
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[2] += 1;
            bar_data6[24] += 1;
            bar_data8[1] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 14) {
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[2] += 1;
            bar_data6[25] += 1;
            bar_data8[1] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 31) {
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[2] += 1;
            bar_data6[26] += 1;
            bar_data8[2] += 1;
            zone_group_data[2] += 1;
          }

          if (btn_row[index1] === 9) {
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[2] += 1;
            bar_data6[27] += 1;
            bar_data8[0] += 1;
            zone_group_data[2] += 1;
          }

          // zone 4
          if (btn_row[index1] === 22) {
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[1] += 1;
            bar_data5[3] += 1;
            bar_data6[28] += 1;
            bar_data8[2] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 18) {
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[1] += 1;
            bar_data5[3] += 1;
            bar_data6[29] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 29) {
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[3] += 1;
            bar_data6[30] += 1;
            bar_data8[1] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 7) {
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[3] += 1;
            bar_data6[31] += 1;
            bar_data8[2] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 28) {
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[3] += 1;
            bar_data6[32] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 12) {
            bar_data1[0] += 1;
            bar_data2[0] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[3] += 1;
            bar_data6[33] += 1;
            bar_data8[0] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 35) {
            bar_data1[1] += 1;
            bar_data2[1] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[3] += 1;
            bar_data6[34] += 1;
            bar_data8[1] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 3) {
            bar_data1[0] += 1;
            bar_data2[1] += 1;
            bar_data3[0] += 1;
            bar_data4[0] += 1;
            bar_data5[3] += 1;
            bar_data6[35] += 1;
            bar_data8[0] += 1;
            zone_group_data[3] += 1;
          }

          if (btn_row[index1] === 26) {
            bar_data1[1] += 1;
            bar_data2[0] += 1;
            bar_data3[1] += 1;
            bar_data4[2] += 1;
            bar_data5[3] += 1;
            bar_data6[36] += 1;
            bar_data8[1] += 1;
            zone_group_data[3] += 1;
          }
        }
        
        let last_num = filter_length - 1;
        let last_position = parseInt(this.state.filterNumber, 10) < btn_row.length ? btn_row[filter_length] : 0;
        for (let btn_index = last_num; btn_index >= 0; btn_index--) {
          btn_row_data.splice(0, 0, btn_row[btn_index]);
          if (btn_position[last_position] === btn_position[btn_row[btn_index]]) {
          } else {
            let btn_index1 = Math.abs(btn_position[btn_row[btn_index]] - btn_position[last_position]) - 1;
            if (btn_index1 >= 18) {
              btn_index1 = Math.abs(btn_index1 - 35);
            }
          }
          last_position = btn_row[btn_index];
        }

        last_num = btn_row.length - 1;
        last_position = 0;
        for (let btn_index2 = last_num; btn_index2 >= 0; btn_index2--) {
          if (btn_position[last_position] === btn_position[btn_row[btn_index2]]) {
            bar_data7[0] += 1;
          } else {
            let btn_index3 = Math.abs(btn_position[btn_row[btn_index2]] - btn_position[last_position]) - 1;
            if (btn_index3 >= 18) {
              btn_index3 = Math.abs(btn_index3 - 35);
            }
            bar_data7[btn_index3] += 1;
          }
          last_position = btn_row[btn_index2];
        }
      }
      if (btn_row.length) {
        let last_num = btn_row.length - 1;
        let last_position = 0;
        for (let btn_index2 = last_num; btn_index2 >= 0; btn_index2--) {
          if (btn_position[last_position] === btn_position[btn_row[btn_index2]]) {
            angle_row.splice(0, 0, angle_array[0]);
          } else {
            let btn_index3 = Math.abs(btn_position[btn_row[btn_index2]] - btn_position[last_position]) - 1;
            if (btn_index3 >= 18) {
              btn_index3 = Math.abs(btn_index3 - 35);
            }
            angle_row.splice(0, 0, angle_array[btn_index3]);
          }
          last_position = btn_row[btn_index2];
        }
      }
    }

    for (var pie_index = 0; pie_index < pie_row_data.length; pie_index++) {
      pie_row[pie_index] = pie_row_data[pie_index] * range1;
      if (pie_row[pie_index] > 119) {
        pie_row[pie_index] = 119;
      }
    }
    for (var zone_group_data_index = 0; zone_group_data_index < zone_group_data.length; zone_group_data_index++) {
      zone_group[zone_group_data_index] = zone_group_data[zone_group_data_index] * range2;
    }
    for (var data1_index = 0; data1_index < bar_data1.length; data1_index++) {
      data1.datasets[0].data[data1_index] = bar_data1[data1_index] * range2;
    }
    for (var data2_index = 0; data2_index < bar_data2.length; data2_index++) {
      data2.datasets[0].data[data2_index] = bar_data2[data2_index] * range2;
    }
    for (var data3_index = 0; data3_index < bar_data3.length; data3_index++) {
      data3.datasets[0].data[data3_index] = bar_data3[data3_index] * range2;
    }
    for (var data4_index = 0; data4_index < bar_data4.length; data4_index++) {
      data4.datasets[0].data[data4_index] = bar_data4[data4_index] * range2;
    }
    for (var data5_index = 0; data5_index < bar_data5.length; data5_index++) {
      data5.datasets[0].data[data5_index] = bar_data5[data5_index] * range2;
    }
    for (var data6_index = 0; data6_index < bar_data6.length; data6_index++) {
      data6.datasets[0].data[data6_index] = bar_data6[data6_index] * range2;
    }
    for (var data7_index = 0; data7_index < bar_data7.length; data7_index++) {
      data7.datasets[0].data[data7_index] = bar_data7[data7_index] * range2;
    }
    for (var data8_index = 0; data8_index < bar_data8.length; data8_index++) {
      data8.datasets[0].data[data8_index] = bar_data8[data8_index] * range2;
    }
    
    this.setState({
      btn_row: btn_row_data,
      btn_row_data: btn_row,
      pie_row: pie_row,
      zone_group: zone_group,
      data1: data1,
      data2: data2,
      data3: data3,
      data4: data4,
      data5: data5,
      data6: data6,
      data7: data7,
      data8: data8,
      angle_row: angle_row,
      last_position: btn_row[0],
      cSelected: [],
      cSelected_status: false,
      undo_status: false,
      bar_status: true,
      page_status: true,
      isPlay: false,
      type: ''
    })
    this.updatePieCanvas();
    this.updateRotateCanvas();
    this.updateLineCanvas();

  }

  handleChange = (name, value) => {
    if (name === 'minutes') {
      this.setState({
        minutes: value,
        type: ''
      })
    } else if (name === 'seconds') {
      this.setState({
        seconds: value,
        type: ''
      })
    } else if (name === 'casino_name') {
      this.setState({
        casino_name: value,
        type: ''
      })
    } else if (name === 'dealer_name') {
      this.setState({
        dealer_name: value,
        type: ''
      })
    } else if (name === 'range_1') {
      this.setState({
        range_1: parseInt(value, 10),
        type: ''
      })
      this.range_group[0] = parseInt(value, 10);
      this.updatePie();
      window.localStorage.setItem('range_group', JSON.stringify(this.range_group));
    } else if (name === 'range_2') {
      this.setState({
        range_2: parseInt(value, 10),
        type: ''
      })
      this.range_group[1] = parseInt(value, 10);
      this.updateBar();
      window.localStorage.setItem('range_group', JSON.stringify(this.range_group));
    } else if (name === 'range_3') {
      if (parseInt(value, 10) === 500) {
        this.setState({
          range_3: 1500,
          type: ''
        })
      } else if (parseInt(value, 10) === 1000) {
        this.setState({
          range_3: 1000,
          type: ''
        })
      } else {
        this.setState({
          range_3: 500,
          type: ''
        })
      }
    } else if (name === 'filter_number') {
      this.setState({
        filterNumber: value,
        type: ''
      })
    }
  }

  keyPress = (e) => {
    if (e.keyCode === 13) {
      this.save_name();
    }
  }

  save_name = () => {
    let data = {};
    let self = this;
    let page_row = this.state.page_row;
    for (var index = 0; index < page_row.length; index++) {
      if (page_row[index]['active'] === 1) {
        var position = index;
        data['page_id'] = page_row[index]['id'];
      }
    }
    if (!this.state.casino_name) {
      this.setState({
        type: "error",
        message: "Please Insert Casino Name!"
      });
      return;
    }
    data['casino_name'] = this.state.casino_name;
    data['dealer_name'] = this.state.dealer_name;

    PageService.save_name(data).then(function(res) {
      if (res.data.success) {
        self.setState({
          type: "success",
          message: "Title has updated successful!"
        });
        self.showToastr();
        page_row[position]['casino_name'] = self.state.casino_name;
        page_row[position]['dealer_name'] = self.state.dealer_name;
        self.setState({
          page_row: page_row,
          type: ''
        })
        window.localStorage.setItem('page_row', JSON.stringify(page_row));
        self.refresh_pages();
      } else {
        console.log('fail');
      }
    })
  }

  keyPress1 = (e) => {
    if (e.keyCode === 13) {
      this.save_filter_num();
    }
  }

  save_filter_num = () => {
    if (!this.state.filterNumber) {
      this.setState({
        type: "error",
        message: "Please Insert Filter Number!"
      });
      return;
    }
    if (!Number(parseInt(this.state.filterNumber, 10))) {
      this.setState({
        type: "error",
        message: "Please Insert Number!",
        filterNumber: 1
      });
      return;
    } else if (parseInt(this.state.filterNumber, 10) < 0) {
      this.setState({
        type: "error",
        message: "Please Input Number Bigger Than 0!",
        filterNumber: 1
      });
      return;
    }
    let page_row = this.state.page_row;
    if (page_row) {
      for (var index = 0; index < page_row.length; index++) {
        if (page_row[index]['active'] === 1) {
          page_row[index]['filter_num'] = this.state.filterNumber;
        }
      }
      this.setState({
        page_row: page_row,
        type: ''
      })
      window.localStorage.setItem('page_row', JSON.stringify(page_row));
    }
    this.setState({
      isSetFilter: false
    })
    this.filter_status = true;
  }

  onStarClick = (nextValue, prevValue, name) => {
    this.setState({
      rating: nextValue,
      type: ''
    });
    let self = this;
    let data = {};
    let page_row = this.state.page_row;
    for (var index = 0; index < page_row.length; index++) {
      if (page_row[index]['active'] === 1) {
        data['page_id'] = page_row[index]['id'];
      }
    }
    data['rating'] = nextValue;
    PageService.save_rating(data).then(function(res) {
      if (res.data.success) {
        // console.log('success');
        self.refresh_pages();
      } else {
        console.log('fail');
      }
    })
  }

  upload = () => {
    $('#avatar').click();
  }

  onChange = e => {
    let self = this;
    if (e.target.files.length) {
      const formData = new FormData();
      const types = ['image/png', 'image/jpg', 'image/jpeg', 'image/gif'];
      if (types.every(type => e.target.files[0].type !== type)) {
        this.setState({
          type: "error",
          message: "Please Select Image File!"
        });
        return;
      }

      if (e.target.files[0].size > 1000000) {
        this.setState({
          type: "error",
          message: "'"+ e.target.files[0].name + "' is too large, please pick a smaller file"
        });
        return;
      }
      formData.append("fileImg", e.target.files[0]);

      PageService.dealer_image(formData).then(function(res) {
        if (res.data.success) {
          let data = {};
          let page_row = self.state.page_row;
          for (var page_index = 0; page_index < page_row.length; page_index++) {
            if (page_row[page_index]['active'] === 1) {
              data['page_id'] = page_row[page_index]['id'];
            }
          }
          data['dealer_avatar'] = res.data.file;

          PageService.upload_dealer(data).then(function(res) {
            if (res.data.success) {
              self.setState({
                type: "success",
                message: "Dealer avatar has uploaded successful!",
                isDealerAvatar: true,
                dealer_avatar: APIUrl + data['dealer_avatar']
              });
              self.showToastr();
              self.refresh_pages();
            } else {
              self.setState({
                type: "error",
                message: "Server Error"
              });
            }
          })
        } else {
          self.setState({
            type: "error",
            message: "Server Error"
          });
        }
      })
    }
    
  }

  toggle_out1 = () => {
    this.setState({
      isPieModalOpen: false,
      type: ''
    })
  }

  toggle_in1 = () => {
    this.setState({
      isPieModalOpen: true,
      type: ''
    })
  }

  toggle_out2 = () => {
    this.setState({
      isLineModalOpen: false,
      type: ''
    })
  }

  toggle_in2 = () => {
    this.setState({
      isLineModalOpen: true
    })
  }

  toggle_out3 = () => {
    this.setState({
      isRotateModalOpen: false,
      type: ''
    })
  }

  toggle_in3 = () => {
    this.setState({
      isRotateModalOpen: true,
      type: ''
    })
  }

  toggle_out4 = () => {
    this.setState({
      isBlockBtnModalOpen: false,
      type: ''
    })
  }

  toggle_in4 = () => {
    this.setState({
      isBlockBtnModalOpen: true,
      type: ''
    })
  }

  loadPage_out = () => {
    this.setState({
      isTableModal: false,
      type: ''
    })
  }

  loadPage_in = () => {
    this.setState({
      isTableModal: true,
      type: ''
    })
  }

  onNewPageToggleIn = () => {
    this.setState({
      isPageRowModalOpen: true,
      type: ''
    })
  }

  onNewPageToggleOut = () => {
    this.setState({
      isPageRowModalOpen: false,
      type: ''
    })
  }

  next1 = () => {
    const nextIndex1 = this.state.activeIndex1 === items1.length - 1 ? 0 : this.state.activeIndex1 + 1;
    this.setState({
      activeIndex1: nextIndex1,
      type: ''
    })
  }

  previous1 = () => {
    const nextIndex1 = this.state.activeIndex1 === 0 ? items1.length - 1 : this.state.activeIndex1 - 1;
    this.setState({
      activeIndex1: nextIndex1,
      type: ''
    })
  }

  next2 = () => {
    const nextIndex2 = this.state.activeIndex2 === items2.length - 1 ? 0 : this.state.activeIndex2 + 1;
    this.setState({
      activeIndex2: nextIndex2,
      type: ''
    })
  }

  previous2 = () => {
    const nextIndex2 = this.state.activeIndex2 === 0 ? items2.length - 1 : this.state.activeIndex2 - 1;
    this.setState({
      activeIndex2: nextIndex2,
      type: ''
    })
  }

  next3 = () => {
    const nextIndex3 = this.state.activeIndex3 === items3.length - 1 ? 0 : this.state.activeIndex3 + 1;
    this.setState({
      activeIndex3: nextIndex3,
      type: ''
    })
  }

  previous3 = () => {
    const nextIndex3 = this.state.activeIndex3 === 0 ? items3.length - 1 : this.state.activeIndex3 - 1;
    this.setState({
      activeIndex3: nextIndex3,
      type: ''
    })
  }

  next4 = () => {
    const nextIndex4 = this.state.activeIndex4 === items4.length - 1 ? 0 : this.state.activeIndex4 + 1;
    this.setState({
      activeIndex4: nextIndex4,
      type: ''
    })
  }

  previous4 = () => {
    const nextIndex4 = this.state.activeIndex4 === 0 ? items4.length - 1 : this.state.activeIndex4 - 1;
    this.setState({
      activeIndex4: nextIndex4,
      type: ''
    })
  }

  handleScroll = ()=> {
    if (this.state.window_width > 765) {
      if (window.scrollY >= this.state.top) {
        this.setState({
          scrollingLock: true,
          type: ''
        });
      } else {
        this.setState({
          scrollingLock: false,
          type: ''
        });
      }
      
    } else {
      this.setState({
        scrollingLock: false,
        type: ''
      });
    }
  }

  resize = () => {
    let documentRect = document.body.getBoundingClientRect();
    let width = documentRect.width;
    let top = document.getElementById('keyboard').getBoundingClientRect().top;
    top = top - documentRect.top;
    this.setState({
      window_width: width,
      top: top,
      type: ''
    })

    let pie_group_width = document.getElementById('pie_group').clientWidth;
    if(pie_group_width < 1020) {
      this.setState({
        width_status: true,
        type: ''
      })
    } else {
      this.setState({
        width_status: false,
        type: ''
      })
    }
  }

  load_page = (key, index) => {
    let self = this;
    if (window.localStorage.getItem('page_row')) {
      let stack = {};
      stack['id'] = this.state.pages[key][index]['id'];
      stack['casino_name'] = this.state.pages[key][index]['casino_name'];
      stack['dealer_name'] = this.state.pages[key][index]['dealer_name'];
      stack['filter_status'] = false;
      stack['filter_num'] = 1;
      stack['active'] = 1;

      let page_row = window.localStorage.getItem('page_row');
      page_row = JSON.parse(page_row);
      let add_status = true;
      for (var page_row_index = 0; page_row_index < page_row.length; page_row_index++) {
        if (page_row[page_row_index]['id'] === stack['id']) {
          add_status = false;
          if (page_row[page_row_index]['active'] === 1) {
            break;
          } else {
            page_row[page_row_index]['active'] = 1;
          }
        } else {
          page_row[page_row_index]['active'] = 0;
        }
      }

      if (!add_status) {
        this.setState({
          page_row: page_row
        })
      } else {
        page_row.push(stack);
        this.setState({
          page_row: page_row
        })
      }
      window.localStorage.setItem('page_row', JSON.stringify(page_row));
      
      for (let index1 = 0; index1 < page_row.length; index1++) {
        if (page_row[index1]['active'] === 1) {
          let send_data = {};
          send_data['page_id'] = page_row[index1]['id'];
          PageService.get_page(send_data).then(function(res) {
            if (res.data.success) {
              // console.log('success');
              let rating = parseInt(res.data.historyinfo.rating, 10);
              let times = JSON.parse(res.data.historyinfo.times);
              let minutes = times[0];
              let seconds = times[1];
              let range1 = parseInt(self.state.range_1, 10);
              let range2 = parseInt(self.state.range_2, 10);
              let btn_row = JSON.parse(res.data.historyinfo.btn_row);
              let btn_row_data = JSON.parse(res.data.historyinfo.btn_row);
              let pie_row_data = JSON.parse(res.data.historyinfo.pie_row);
              let zone_group_data = JSON.parse(res.data.historyinfo.zone_group);
              let bar_data1 = JSON.parse(res.data.historyinfo.bar_data1);
              let bar_data2 = JSON.parse(res.data.historyinfo.bar_data2);
              let bar_data3 = JSON.parse(res.data.historyinfo.bar_data3);
              let bar_data4 = JSON.parse(res.data.historyinfo.bar_data4);
              let bar_data5 = JSON.parse(res.data.historyinfo.bar_data5);
              let bar_data6 = JSON.parse(res.data.historyinfo.bar_data6);
              let bar_data7 = JSON.parse(res.data.historyinfo.bar_data7);
              let bar_data8 = JSON.parse(res.data.historyinfo.bar_data8);
              let pie_row = self.state.pie_row;
              let zone_group = self.state.zone_group;
              let data1 = self.state.data1;
              let data2 = self.state.data2;
              let data3 = self.state.data3;
              let data4 = self.state.data4;
              let data5 = self.state.data5;
              let data6 = self.state.data6;
              let data7 = self.state.data7;
              let data8 = self.state.data8;
              let angle_row = [];
              if (page_row[index1]['filter_status']) {
                btn_row_data = [];
                bar_data1 = [0, 0];
                bar_data2 = [0, 0];
                bar_data3 = [0, 0];
                bar_data4 = [0, 0, 0];
                bar_data5 = [0, 0, 0, 0];
                bar_data6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                bar_data7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                bar_data8 = [0, 0, 0];
                pie_row_data = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                zone_group_data = [0, 0, 0, 0];
                if (btn_row.length) {
                  let filter_length = parseInt(page_row[index]['filter_num'], 10) < btn_row.length ? parseInt(page_row[index]['filter_num'], 10) : btn_row.length;
                  for (let index2 = 0; index2 < filter_length; index2++) {
                    // zone 1
                    if (btn_row[index2] === 0) {
                      pie_row_data[0] += 5;
                      if (pie_row_data[0] > 119) {
                        pie_row_data[0] = 119;
                      }
                      zone_group_data[0] += 1;
                      bar_data5[0] += 1;
                      bar_data6[0] += 1;
                    }

                    if (btn_row[index2] === 32) {
                      pie_row_data[32] += 5;
                      if (pie_row_data[32] > 119) {
                        pie_row_data[32] = 119;
                      }
                      bar_data1[0] += 1;
                      bar_data2[0] += 1;
                      bar_data3[1] += 1;
                      bar_data4[2] += 1;
                      bar_data5[0] += 1;
                      bar_data6[1] += 1;
                      bar_data8[1] += 1;
                      zone_group_data[0] += 1;
                    }

                    if (btn_row[index2] === 15) {
                      pie_row_data[15] += 5;
                      if (pie_row_data[15] > 119) {
                        pie_row_data[15] = 119;
                      }
                      bar_data1[1] += 1;
                      bar_data2[1] += 1;
                      bar_data3[0] += 1;
                      bar_data4[1] += 1;
                      bar_data5[0] += 1;
                      bar_data6[2] += 1;
                      bar_data8[0] += 1;
                      zone_group_data[0] += 1;
                    }

                    if (btn_row[index2] === 19) {
                      pie_row_data[19] += 5;
                      if (pie_row_data[19] > 119) {
                        pie_row_data[19] = 119;
                      }
                      bar_data1[0] += 1;
                      bar_data2[1] += 1;
                      bar_data3[1] += 1;
                      bar_data4[1] += 1;
                      bar_data5[0] += 1;
                      bar_data6[3] += 1;
                      bar_data8[2] += 1;
                      zone_group_data[0] += 1;
                    }

                    if (btn_row[index2] === 4) {
                      pie_row_data[4] += 5;
                      if (pie_row_data[4] > 119) {
                        pie_row_data[4] = 119;
                      }
                      bar_data1[1] += 1;
                      bar_data2[0] += 1;
                      bar_data3[0] += 1;
                      bar_data4[0] += 1;
                      bar_data5[0] += 1;
                      bar_data6[4] += 1;
                      bar_data8[2] += 1;
                      zone_group_data[0] += 1;
                    }

                    if (btn_row[index2] === 21) {
                      pie_row_data[21] += 5;
                      if (pie_row_data[21] > 119) {
                        pie_row_data[21] = 119;
                      }
                      bar_data1[0] += 1;
                      bar_data2[1] += 1;
                      bar_data3[1] += 1;
                      bar_data4[1] += 1;
                      bar_data5[0] += 1;
                      bar_data6[5] += 1;
                      bar_data8[0] += 1;
                      zone_group_data[0] += 1;
                    }

                    if (btn_row[index2] === 2) {
                      pie_row_data[2] += 5;
                      if (pie_row_data[2] > 119) {
                        pie_row_data[2] = 119;
                      }
                      bar_data1[1] += 1;
                      bar_data2[0] += 1;
                      bar_data3[0] += 1;
                      bar_data4[0] += 1;
                      bar_data5[0] += 1;
                      bar_data6[6] += 1;
                      bar_data8[1] += 1;
                      zone_group_data[0] += 1;
                    }

                    if (btn_row[index2] === 25) {
                      pie_row_data[25] += 5;
                      if (pie_row_data[25] > 119) {
                        pie_row_data[25] = 119;
                      }
                      bar_data1[0] += 1;
                      bar_data2[1] += 1;
                      bar_data3[1] += 1;
                      bar_data4[2] += 1;
                      bar_data5[0] += 1;
                      bar_data7[6] += 1;
                      bar_data8[2] += 1;
                      zone_group_data[0] += 1;
                    }

                    if (btn_row[index2] === 17) {
                      pie_row_data[17] += 5;
                      if (pie_row_data[17] > 119) {
                        pie_row_data[17] = 119;
                      }
                      bar_data1[1] += 1;
                      bar_data2[1] += 1;
                      bar_data3[0] += 1;
                      bar_data4[1] += 1;
                      bar_data5[0] += 1;
                      bar_data6[8] += 1;
                      bar_data8[1] += 1;
                      zone_group_data[0] += 1;
                    }
                      
                    // zone 2
                    if (btn_row[index2] === 34) {
                      pie_row_data[34] += 5;
                      if (pie_row_data[34] > 119) {
                        pie_row_data[34] = 119;
                      }
                      bar_data1[0] += 1;
                      bar_data2[0] += 1;
                      bar_data3[1] += 1;
                      bar_data4[2] += 1;
                      bar_data5[1] += 1;
                      bar_data6[9] += 1;
                      bar_data8[2] += 1;
                      zone_group_data[1] += 1;
                    }

                    if (btn_row[index2] === 6) {
                      pie_row_data[6] += 5;
                      if (pie_row_data[6] > 119) {
                        pie_row_data[6] = 119;
                      }
                      bar_data1[1] += 1;
                      bar_data2[0] += 1;
                      bar_data3[0] += 1;
                      bar_data4[0] += 1;
                      bar_data5[1] += 1;
                      bar_data6[10] += 1;
                      bar_data8[0] += 1;
                      zone_group_data[1] += 1;
                    }

                    if (btn_row[index2] === 27) {
                      pie_row_data[27] += 5;
                      if (pie_row_data[27] > 119) {
                        pie_row_data[27] = 119;
                      }
                      bar_data1[0] += 1;
                      bar_data2[1] += 1;
                      bar_data3[1] += 1;
                      bar_data4[2] += 1;
                      bar_data5[1] += 1;
                      bar_data6[11] += 1;
                      bar_data8[0] += 1;
                      zone_group_data[1] += 1;
                    }

                    if (btn_row[index2] === 13) {
                      pie_row_data[13] += 5;
                      if (pie_row_data[13] > 119) {
                        pie_row_data[13] = 119;
                      }
                      bar_data1[1] += 1;
                      bar_data2[1] += 1;
                      bar_data3[0] += 1;
                      bar_data4[1] += 1;
                      bar_data5[1] += 1;
                      bar_data6[12] += 1;
                      bar_data8[2] += 1;
                      zone_group_data[1] += 1;
                    }

                    if (btn_row[index2] === 36) {
                      pie_row_data[36] += 5;
                      if (pie_row_data[36] > 119) {
                        pie_row_data[36] = 119;
                      }
                      bar_data1[0] += 1;
                      bar_data2[0] += 1;
                      bar_data3[1] += 1;
                      bar_data4[2] += 1;
                      bar_data5[1] += 1;
                      bar_data6[13] += 1;
                      bar_data8[0] += 1;
                      zone_group_data[1] += 1;
                    }

                    if (btn_row[index2] === 11) {
                      pie_row_data[11] += 5;
                      if (pie_row_data[11] > 119) {
                        pie_row_data[11] = 119;
                      }
                      bar_data1[1] += 1;
                      bar_data2[1] += 1;
                      bar_data3[0] += 1;
                      bar_data4[0] += 1;
                      bar_data5[1] += 1;
                      bar_data6[14] += 1;
                      bar_data8[1] += 1;
                      zone_group_data[1] += 1;
                    }

                    if (btn_row[index2] === 30) {
                      pie_row_data[30] += 5;
                      if (pie_row_data[30] > 119) {
                        pie_row_data[30] = 119;
                      }
                      bar_data1[0] += 1;
                      bar_data2[0] += 1;
                      bar_data3[1] += 1;
                      bar_data4[2] += 1;
                      bar_data5[1] += 1;
                      bar_data6[15] += 1;
                      bar_data8[0] += 1;
                      zone_group_data[1] += 1;
                    }

                    if (btn_row[index2] === 8) {
                      pie_row_data[8] += 5;
                      if (pie_row_data[8] > 119) {
                        pie_row_data[8] = 119;
                      }
                      bar_data1[1] += 1;
                      bar_data2[0] += 1;
                      bar_data3[0] += 1;
                      bar_data4[0] += 1;
                      bar_data5[1] += 1;
                      bar_data6[16] += 1;
                      bar_data8[1] += 1;
                      zone_group_data[1] += 1;
                    }

                    if (btn_row[index2] === 23) {
                      pie_row_data[23] += 5;
                      if (pie_row_data[23] > 119) {
                        pie_row_data[23] = 119;
                      }
                      bar_data1[0] += 1;
                      bar_data2[1] += 1;
                      bar_data3[1] += 1;
                      bar_data4[1] += 1;
                      bar_data5[1] += 1;
                      bar_data6[17] += 1;
                      bar_data8[1] += 1;
                      zone_group_data[1] += 1;
                    }

                    if (btn_row[index2] === 10) {
                      pie_row_data[10] += 5;
                      if (pie_row_data[10] > 119) {
                        pie_row_data[10] = 119;
                      }
                      bar_data1[1] += 1;
                      bar_data2[0] += 1;
                      bar_data3[0] += 1;
                      bar_data4[0] += 1;
                      bar_data5[1] += 1;
                      bar_data6[18] += 1;
                      bar_data8[2] += 1;
                      zone_group_data[1] += 1;
                    }

                    // zone 3
                    if (btn_row[index2] === 5) {
                      pie_row_data[5] += 5;
                      if (pie_row_data[5] > 119) {
                        pie_row_data[5] = 119;
                      }
                      bar_data1[0] += 1;
                      bar_data2[1] += 1;
                      bar_data3[0] += 1;
                      bar_data4[0] += 1;
                      bar_data5[2] += 1;
                      bar_data6[19] += 1;
                      bar_data8[1] += 1;
                      zone_group_data[2] += 1;
                    }

                    if (btn_row[index2] === 24) {
                      pie_row_data[24] += 5;
                      if (pie_row_data[24] > 119) {
                        pie_row_data[24] = 119;
                      }
                      bar_data1[1] += 1;
                      bar_data2[0] += 1;
                      bar_data3[1] += 1;
                      bar_data4[1] += 1;
                      bar_data5[2] += 1;
                      bar_data6[20] += 1;
                      bar_data8[0] += 1;
                      zone_group_data[2] += 1;
                    }

                    if (btn_row[index2] === 16) {
                      pie_row_data[16] += 5;
                      if (pie_row_data[16] > 119) {
                        pie_row_data[16] = 119;
                      }
                      bar_data1[0] += 1;
                      bar_data2[0] += 1;
                      bar_data3[0] += 1;
                      bar_data4[1] += 1;
                      bar_data5[2] += 1;
                      bar_data6[21] += 1;
                      bar_data8[2] += 1;
                      zone_group_data[2] += 1;
                    }

                    if (btn_row[index2] === 33) {
                      pie_row_data[33] += 5;
                      if (pie_row_data[33] > 119) {
                        pie_row_data[33] = 119;
                      }
                      bar_data1[1] += 1;
                      bar_data2[1] += 1;
                      bar_data3[1] += 1;
                      bar_data4[2] += 1;
                      bar_data5[2] += 1;
                      bar_data6[22] += 1;
                      bar_data8[0] += 1;
                      zone_group_data[2] += 1;
                    }

                    if (btn_row[index2] === 1) {
                      pie_row_data[1] += 5;
                      if (pie_row_data[1] > 119) {
                        pie_row_data[1] = 119;
                      }
                      bar_data1[0] += 1;
                      bar_data2[1] += 1;
                      bar_data3[0] += 1;
                      bar_data4[0] += 1;
                      bar_data5[2] += 1;
                      bar_data6[23] += 1;
                      bar_data8[2] += 1;
                      zone_group_data[2] += 1;
                    }

                    if (btn_row[index2] === 20) {
                      pie_row_data[20] += 5;
                      if (pie_row_data[20] > 119) {
                        pie_row_data[20] = 119;
                      }
                      bar_data1[1] += 1;
                      bar_data2[0] += 1;
                      bar_data3[1] += 1;
                      bar_data4[1] += 1;
                      bar_data5[2] += 1;
                      bar_data6[24] += 1;
                      bar_data8[1] += 1;
                      zone_group_data[2] += 1;
                    }

                    if (btn_row[index2] === 14) {
                      pie_row_data[14] += 5;
                      if (pie_row_data[14] > 119) {
                        pie_row_data[14] = 119;
                      }
                      bar_data1[0] += 1;
                      bar_data2[0] += 1;
                      bar_data3[0] += 1;
                      bar_data4[1] += 1;
                      bar_data5[2] += 1;
                      bar_data6[25] += 1;
                      bar_data8[1] += 1;
                      zone_group_data[2] += 1;
                    }

                    if (btn_row[index2] === 31) {
                      pie_row_data[31] += 5;
                      if (pie_row_data[31] > 119) {
                        pie_row_data[31] = 119;
                      }
                      bar_data1[1] += 1;
                      bar_data2[1] += 1;
                      bar_data3[1] += 1;
                      bar_data4[2] += 1;
                      bar_data5[2] += 1;
                      bar_data6[26] += 1;
                      bar_data8[2] += 1;
                      zone_group_data[2] += 1;
                    }

                    if (btn_row[index2] === 9) {
                      pie_row_data[9] += 5;
                      if (pie_row_data[9] > 119) {
                        pie_row_data[9] = 119;
                      }
                      bar_data1[0] += 1;
                      bar_data2[1] += 1;
                      bar_data3[0] += 1;
                      bar_data4[0] += 1;
                      bar_data5[2] += 1;
                      bar_data6[27] += 1;
                      bar_data8[0] += 1;
                      zone_group_data[2] += 1;
                    }

                    // zone 4
                    if (btn_row[index2] === 22) {
                      pie_row_data[22] += 5;
                      if (pie_row_data[22] > 119) {
                        pie_row_data[22] = 119;
                      }
                      bar_data1[1] += 1;
                      bar_data2[0] += 1;
                      bar_data3[1] += 1;
                      bar_data4[1] += 1;
                      bar_data5[3] += 1;
                      bar_data6[28] += 1;
                      bar_data8[2] += 1;
                      zone_group_data[3] += 1;
                    }

                    if (btn_row[index2] === 18) {
                      pie_row_data[18] += 5;
                      if (pie_row_data[18] > 119) {
                        pie_row_data[18] = 119;
                      }
                      bar_data1[0] += 1;
                      bar_data2[0] += 1;
                      bar_data3[0] += 1;
                      bar_data4[1] += 1;
                      bar_data5[3] += 1;
                      bar_data6[29] += 1;
                      zone_group_data[3] += 1;
                    }

                    if (btn_row[index2] === 29) {
                      pie_row_data[29] += 5;
                      if (pie_row_data[29] > 119) {
                        pie_row_data[29] = 119;
                      }
                      bar_data1[1] += 1;
                      bar_data2[1] += 1;
                      bar_data3[1] += 1;
                      bar_data4[2] += 1;
                      bar_data5[3] += 1;
                      bar_data6[30] += 1;
                      bar_data8[1] += 1;
                      zone_group_data[3] += 1;
                    }

                    if (btn_row[index2] === 7) {
                      pie_row_data[7] += 5;
                      if (pie_row_data[7] > 119) {
                        pie_row_data[7] = 119;
                      }
                      bar_data1[0] += 1;
                      bar_data2[1] += 1;
                      bar_data3[0] += 1;
                      bar_data4[0] += 1;
                      bar_data5[3] += 1;
                      bar_data6[31] += 1;
                      bar_data8[2] += 1;
                      zone_group_data[3] += 1;
                    }

                    if (btn_row[index2] === 28) {
                      pie_row_data[28] += 5;
                      if (pie_row_data[28] > 119) {
                        pie_row_data[28] = 119;
                      }
                      bar_data1[1] += 1;
                      bar_data2[0] += 1;
                      bar_data3[1] += 1;
                      bar_data4[2] += 1;
                      bar_data5[3] += 1;
                      bar_data6[32] += 1;
                      zone_group_data[3] += 1;
                    }

                    if (btn_row[index2] === 12) {
                      pie_row_data[12] += 5;
                      if (pie_row_data[12] > 119) {
                        pie_row_data[12] = 119;
                      }
                      bar_data1[0] += 1;
                      bar_data2[0] += 1;
                      bar_data3[0] += 1;
                      bar_data4[0] += 1;
                      bar_data5[3] += 1;
                      bar_data6[33] += 1;
                      bar_data8[0] += 1;
                      zone_group_data[3] += 1;
                    }

                    if (btn_row[index2] === 35) {
                      pie_row_data[35] += 5;
                      if (pie_row_data[35] > 119) {
                        pie_row_data[35] = 119;
                      }
                      bar_data1[1] += 1;
                      bar_data2[1] += 1;
                      bar_data3[1] += 1;
                      bar_data4[2] += 1;
                      bar_data5[3] += 1;
                      bar_data6[34] += 1;
                      bar_data8[1] += 1;
                      zone_group_data[3] += 1;
                    }

                    if (btn_row[index2] === 3) {
                      pie_row_data[3] += 5;
                      if (pie_row_data[3] > 119) {
                        pie_row_data[3] = 119;
                      }
                      bar_data1[0] += 1;
                      bar_data2[1] += 1;
                      bar_data3[0] += 1;
                      bar_data4[0] += 1;
                      bar_data5[3] += 1;
                      bar_data6[35] += 1;
                      bar_data8[0] += 1;
                      zone_group_data[3] += 1;
                    }

                    if (btn_row[index2] === 26) {
                      pie_row_data[26] += 5;
                      if (pie_row_data[26] > 119) {
                        pie_row_data[26] = 119;
                      }
                      bar_data1[1] += 1;
                      bar_data2[0] += 1;
                      bar_data3[1] += 1;
                      bar_data4[2] += 1;
                      bar_data5[3] += 1;
                      bar_data6[36] += 1;
                      bar_data8[1] += 1;
                      zone_group_data[3] += 1;
                    }
                  }

                  let last_num = filter_length - 1;
                  let last_position = parseInt(page_row[index]['filter_num'], 10) < btn_row.length ? btn_row[filter_length] : 0;
                  for (let btn_index = last_num; btn_index >= 0; btn_index--) {
                    btn_row_data.splice(0, 0, btn_row[btn_index]);
                    if (btn_position[last_position] === btn_position[btn_row[btn_index]]) {
                      bar_data7[0] += 1;
                    } else {
                      let btn_index1 = Math.abs(btn_position[btn_row[btn_index]] - btn_position[last_position]) - 1;
                      if (btn_index1 >= 18) {
                        btn_index1 = Math.abs(btn_index1 - 35);
                      }
                      bar_data7[btn_index1] += 1;
                    }
                    last_position = btn_row[btn_index];
                  }
                }
              }
              if (btn_row.length) {
                let last_num = btn_row.length - 1;
                let last_position = 0;
                for (let btn_index2 = last_num; btn_index2 >= 0; btn_index2--) {
                  if (btn_position[last_position] === btn_position[btn_row[btn_index2]]) {
                    angle_row.splice(0, 0, angle_array[0]);
                  } else {
                    let btn_index3 = Math.abs(btn_position[btn_row[btn_index2]] - btn_position[last_position]) - 1;
                    if (btn_index3 >= 18) {
                      btn_index3 = Math.abs(btn_index3 - 35);
                    }
                    angle_row.splice(0, 0, angle_array[btn_index3]);
                  }
                  last_position = btn_row[btn_index2];
                }
              }
              for (var pie_index = 0; pie_index < pie_row_data.length; pie_index++) {
                pie_row[pie_index] = pie_row_data[pie_index] * range1;
                if (pie_row[pie_index] > 119) {
                  pie_row[pie_index] = 119;
                }
              }
              for (var zone_group_data_index1 = 0; zone_group_data_index1 < zone_group_data.length; zone_group_data_index1++) {
                zone_group[zone_group_data_index1] = zone_group_data[zone_group_data_index1] * range2;
              }
              for (var data1_index1 = 0; data1_index1 < bar_data1.length; data1_index1++) {
                data1.datasets[0].data[data1_index1] = bar_data1[data1_index1] * range2;
              }
              for (var data2_index1 = 0; data2_index1 < bar_data2.length; data2_index1++) {
                data2.datasets[0].data[data2_index1] = bar_data2[data2_index1] * range2;
              }
              for (var data3_index1 = 0; data3_index1 < bar_data3.length; data3_index1++) {
                data3.datasets[0].data[data3_index1] = bar_data3[data3_index1] * range2;
              }
              for (var data4_index1 = 0; data4_index1 < bar_data4.length; data4_index1++) {
                data4.datasets[0].data[data4_index1] = bar_data4[data4_index1] * range2;
              }
              for (var data5_index1 = 0; data5_index1 < bar_data5.length; data5_index1++) {
                data5.datasets[0].data[data5_index1] = bar_data5[data5_index1] * range2;
              }
              for (var data6_index1 = 0; data6_index1 < bar_data6.length; data6_index1++) {
                data6.datasets[0].data[data6_index1] = bar_data6[data6_index1] * range2;
              }
              for (var data7_index1 = 0; data7_index1 < bar_data7.length; data7_index1++) {
                data7.datasets[0].data[data7_index1] = bar_data7[data7_index1] * range2;
              }
              for (var data8_index1 = 0; data8_index1 < bar_data8.length; data8_index1++) {
                data8.datasets[0].data[data8_index1] = bar_data8[data8_index1] * range2;
              }

              self.setState({
                running: false,
                is_setTime: false,
                isFilter: page_row[index1]['filter_status'],
                filterNumber: page_row[index1]['filter_num'],
                rating: rating,
                minutes: minutes,
                seconds: seconds,
                page_row: page_row,
                btn_row: btn_row_data,
                btn_row_data: btn_row,
                pie_row: pie_row,
                pie_row_data: pie_row_data,
                zone_group: zone_group,
                zone_group_data: zone_group_data,
                data1: data1,
                bar_data1: bar_data1,
                data2: data2,
                bar_data2: bar_data2,
                data3: data3,
                bar_data3: bar_data3,
                data4: data4,
                bar_data4: bar_data4,
                data5: data5,
                bar_data5: bar_data5,
                data6: data6,
                bar_data6: bar_data6,
                data7: data7,
                bar_data7: bar_data7,
                data8: data8,
                bar_data8: bar_data8,
                angle_row: angle_row,
                bar_status: true,
                cSelected: [],
                cSelected_status: false,
                undo_status: false,
                page_status: true,
                type: ''
              })
              if (btn_row_data.length) {
                self.setState({
                  last_position: btn_row_data[0],
                  type: ''
                })
              } else {
                self.setState({
                  last_position: 0,
                  type: ''
                })
              }
              if (res.data.historyinfo.dealer_avatar) {
                self.setState({
                  isDealerAvatar: true,
                  dealer_avatar: APIUrl + res.data.historyinfo.dealer_avatar,
                  type: ''
                })
              } else {
                self.setState({
                  isDealerAvatar: false,
                  dealer_avatar: null,
                  type: ''
                })
              }
              self.updatePieCanvas();
              self.updateRotateCanvas();
              self.updateLineCanvas();
              
            } else {
              console.log('fail');
            }
          })
        }
      }

      this.loadPage_out();
      
    } else {
      let page_row = [];
      let stack = {};
      stack['id'] = this.state.pages[key][index]['id'];
      stack['casino_name'] = this.state.pages[key][index]['casino_name'];
      stack['dealer_name'] = this.state.pages[key][index]['dealer_name'];
      stack['filter_status'] = false;
      stack['filter_num'] = 1;
      stack['active'] = 1;
      page_row.push(stack);
      this.setState({
        page_row: page_row
      })
      window.localStorage.setItem('page_row', JSON.stringify(page_row));

      let send_data = {};
      send_data['page_id'] = stack['id'];
      PageService.get_page(send_data).then(function(res) {
        if (res.data.success) {
          // console.log('success');
          let rating = parseInt(res.data.historyinfo.rating, 10);
          let times = JSON.parse(res.data.historyinfo.times);
          let minutes = times[0];
          let seconds = times[1];
          let range1 = parseInt(self.state.range_1, 10);
          let range2 = parseInt(self.state.range_2, 10);
          let btn_row = JSON.parse(res.data.historyinfo.btn_row);
          let btn_row_data = JSON.parse(res.data.historyinfo.btn_row);
          let pie_row_data = JSON.parse(res.data.historyinfo.pie_row);
          let zone_group_data = JSON.parse(res.data.historyinfo.zone_group);
          let bar_data1 = JSON.parse(res.data.historyinfo.bar_data1);
          let bar_data2 = JSON.parse(res.data.historyinfo.bar_data2);
          let bar_data3 = JSON.parse(res.data.historyinfo.bar_data3);
          let bar_data4 = JSON.parse(res.data.historyinfo.bar_data4);
          let bar_data5 = JSON.parse(res.data.historyinfo.bar_data5);
          let bar_data6 = JSON.parse(res.data.historyinfo.bar_data6);
          let bar_data7 = JSON.parse(res.data.historyinfo.bar_data7);
          let bar_data8 = JSON.parse(res.data.historyinfo.bar_data8);
          let pie_row = self.state.pie_row;
          let zone_group = self.state.zone_group;
          let data1 = self.state.data1;
          let data2 = self.state.data2;
          let data3 = self.state.data3;
          let data4 = self.state.data4;
          let data5 = self.state.data5;
          let data6 = self.state.data6;
          let data7 = self.state.data7;
          let data8 = self.state.data8;
          let angle_row = [];
          if (btn_row.length) {
            let last_num = btn_row.length - 1;
            let last_position = 0;
            for (let btn_index2 = last_num; btn_index2 >= 0; btn_index2--) {
              if (btn_position[last_position] === btn_position[btn_row[btn_index2]]) {
                angle_row.splice(0, 0, angle_array[0]);
              } else {
                let btn_index3 = Math.abs(btn_position[btn_row[btn_index2]] - btn_position[last_position]) - 1;
                if (btn_index3 >= 18) {
                  btn_index3 = Math.abs(btn_index3 - 35);
                }
                angle_row.splice(0, 0, angle_array[btn_index3]);
              }
              last_position = btn_row[btn_index2];
            }
          }
          for (var index2 = 0; index2 < pie_row_data.length; index2++) {
            pie_row[index2] = pie_row_data[index2] * range1;
            if (pie_row[index2] > 119) {
              pie_row[index2] = 119;
            }
          }
          for (var zone_group_data_index = 0; zone_group_data_index < zone_group_data.length; zone_group_data_index++) {
            zone_group[zone_group_data_index] = zone_group_data[zone_group_data_index] * range2;
          }
          for (var data1_index = 0; data1_index < bar_data1.length; data1_index++) {
            data1.datasets[0].data[data1_index] = bar_data1[data1_index] * range2;
          }
          for (var data2_index = 0; data2_index < bar_data2.length; data2_index++) {
            data2.datasets[0].data[data2_index] = bar_data2[data2_index] * range2;
          }
          for (var data3_index = 0; data3_index < bar_data3.length; data3_index++) {
            data3.datasets[0].data[data3_index] = bar_data3[data3_index] * range2;
          }
          for (var data4_index = 0; data4_index < bar_data4.length; data4_index++) {
            data4.datasets[0].data[data4_index] = bar_data4[data4_index] * range2;
          }
          for (var data5_index = 0; data5_index < bar_data5.length; data5_index++) {
            data5.datasets[0].data[data5_index] = bar_data5[data5_index] * range2;
          }
          for (var data6_index = 0; data6_index < bar_data6.length; data6_index++) {
            data6.datasets[0].data[data6_index] = bar_data6[data6_index] * range2;
          }
          for (var data7_index = 0; data7_index < bar_data7.length; data7_index++) {
            data7.datasets[0].data[data7_index] = bar_data7[data7_index] * range2;
          }
          for (var data8_index = 0; data8_index < bar_data8.length; data8_index++) {
            data8.datasets[0].data[data8_index] = bar_data8[data8_index] * range2;
          }
          self.setState({
            running: false,
            is_setTime: false,
            isFilter: false,
            filterNumber: 1,
            rating: rating,
            minutes: minutes,
            seconds: seconds,
            page_row: page_row,
            btn_row: btn_row_data,
            btn_row_data: btn_row,
            pie_row: pie_row,
            pie_row_data: pie_row_data,
            zone_group: zone_group,
            zone_group_data: zone_group_data,
            data1: data1,
            bar_data1: bar_data1,
            data2: data2,
            bar_data2: bar_data2,
            data3: data3,
            bar_data3: bar_data3,
            data4: data4,
            bar_data4: bar_data4,
            data5: data5,
            bar_data5: bar_data5,
            data6: data6,
            bar_data6: bar_data6,
            data7: data7,
            bar_data7: bar_data7,
            data8: data8,
            bar_data8: bar_data8,
            angle_row: angle_row,
            bar_status: true,
            cSelected: [],
            cSelected_status: false,
            undo_status: false,
            page_status: true,
            type: ''
          })
          if (btn_row_data.length) {
            self.setState({
              last_position: btn_row_data[0],
              type: ''
            })
          } else {
            self.setState({
              last_position: 0,
              type: ''
            })
          }
          if (res.data.historyinfo.dealer_avatar) {
            self.setState({
              isDealerAvatar: true,
              dealer_avatar: APIUrl + res.data.historyinfo.dealer_avatar,
              type: ''
            })
          } else {
            self.setState({
              isDealerAvatar: false,
              dealer_avatar: null,
              type: ''
            })
          }
          self.updatePieCanvas();
          self.updateRotateCanvas();
          self.updateLineCanvas();
          
        } else {
          console.log('fail');
        }
      })

      this.loadPage_out();
    }
  }

  refresh_pages = () => {
    let self = this;
    let userinfo = window.localStorage.getItem('userinfo');
    userinfo = JSON.parse(userinfo);
    let send_data = {};
    send_data['user_id'] = userinfo['id']
    send_data['dev'] = 0;
    PageService.get_histories(send_data).then(function(res) {
      if (res.data.success) {
        // console.log('success');

        let historyinfo = res.data.historyinfo;
        let page_group = {};
        
        if (historyinfo.length) {
          for (var index = 0; index < historyinfo.length; index++) {
            let created_at = new Date(res.data.historyinfo[index].created_at);
            created_at = created_at.getFullYear() + '-' + ('0' + (created_at.getMonth() + 1)).slice(-2) + '-' + created_at.getDate();
            let updated_at = new Date(res.data.historyinfo[index].updated_at);
            updated_at = months[updated_at.getMonth()] + ' '  + updated_at.getDate() + ' ' + updated_at.getFullYear() + ' '  + updated_at.getHours() + ':' + updated_at.getMinutes() + ':' + updated_at.getSeconds();

            let stack = {};
            stack['id'] = res.data.historyinfo[index]['id'];
            stack['casino_name'] = res.data.historyinfo[index]['casino_name'];
            stack['dealer_name'] = res.data.historyinfo[index]['dealer_name'];
            stack['rating'] = res.data.historyinfo[index]['rating'];
            stack['dealer_avatar'] = res.data.historyinfo[index]['dealer_avatar'];
            stack['created_at'] = created_at;
            stack['updated_at'] = updated_at;

            if (!page_group[created_at]) {
              page_group[created_at] = [];
            }
            page_group[created_at].push(stack);
          }
          self.setState({
            pages: page_group,
            status: true,
            type: ''
          })
        }
      } else {
        console.log('fail');
      }
    })
  }

  selectRedBlk = () => {
    this.setState({
      isRB: !this.state.isRB,
      type: ''
    })
  }

  selectEvenOdd = () => {
    this.setState({
      isEO: !this.state.isEO,
      type: ''
    })
  }

  selectTopBot = () => {
    this.setState({
      isTMB: !this.state.isTMB,
      type: ''
    })
  }

  selectThreeGroup = () => {
    this.setState({
      isThreeG: !this.state.isThreeG,
      type: ''
    })
  }

  selectTwoGroup = () => {
    this.setState({
      isTwoG: !this.state.isTwoG
    })
  }

  selectZone = () => {
    this.setState({
      isZone: !this.state.isZone,
      type: ''
    })
  }

  selectAngle = () => {
    this.setState({
      isAngle: !this.state.isAngle,
      type: ''
    })
  }

  none = () => {
    console.log('OK')
  }

  filter = (filter) => {
    if (filter === 'wRed') {
      this.setState({
        isWRed: !this.state.isWRed,
        type: ''
      })
    } else if (filter === 'wBlk') {
      this.setState({
        isWBlk: !this.state.isWBlk,
        type: ''
      })
    } else if (filter === 'wEven') {
      this.setState({
        isWEven: !this.state.isWEven,
        type: ''
      })
    } else if (filter === 'wOdd') {
      this.setState({
        isWOdd: !this.state.isWOdd,
        type: ''
      })
    } else if (filter === 'wTop') {
      this.setState({
        isWTop: !this.state.isWTop,
        type: ''
      })
    } else if (filter === 'wMid') {
      this.setState({
        isWMid: !this.state.isWMid,
        type: ''
      })
    } else if (filter === 'wBottom') {
      this.setState({
        isWBot: !this.state.isWBot,
        type: ''
      })
    } else if (filter === 'w1to12') {
      this.setState({
        isW1to12: !this.state.isW1to12,
        type: ''
      })
    } else if (filter === 'w13to24') {
      this.setState({
        isW13to24: !this.state.isW13to24,
        type: ''
      })
    } else if (filter === 'w25to36') {
      this.setState({
        isW25to36: !this.state.isW25to36,
        type: ''
      })
    } else if (filter === 'w1to18') {
      this.setState({
        isW1to18: !this.state.isW1to18,
        type: ''
      })
    } else if (filter === 'w19to36') {
      this.setState({
        isW19to36: !this.state.isW19to36,
        type: ''
      })
    } else if (filter === 'wZone1') {
      this.setState({
        isWZone1: !this.state.isWZone1,
        type: ''
      })
    } else if (filter === 'wZone1+2') {
      this.setState({
        isWZone1to2: !this.state.isWZone1to2,
        type: ''
      })
    } else if (filter === 'wZone1+3') {
      this.setState({
        isWZone1to3: !this.state.isWZone1to3,
        type: ''
      })
    } else if (filter === 'wZone2') {
      this.setState({
        isWZone2: !this.state.isWZone2,
        type: ''
      })
    } else if (filter === 'wZone2+3') {
      this.setState({
        isWZone2to3: !this.state.isWZone2to3,
        type: ''
      })
    } else if (filter === 'wZone3') {
      this.setState({
        isWZone3: !this.state.isWZone3,
        type: ''
      })
    } else if (filter === 'wZone3+4') {
      this.setState({
        isWZone3to4: !this.state.isWZone3to4,
        type: ''
      })
    } else if (filter === 'wZone4') {
      this.setState({
        isWZone4: !this.state.isWZone4,
        type: ''
      })
    } else if (filter === 'wZone4+1') {
      this.setState({
        isWZone4to1: !this.state.isWZone4to1,
        type: ''
      })
    } else if (filter === 'wZone4+2') {
      this.setState({
        isWZone4to2: !this.state.isWZone4to2,
        type: ''
      })
    }
    this.wheel_filter = false;
  }

  clearAllFilter = () => {
    this.setState({
      isWRed: false,
      isWBlk: false,
      isWEven: false,
      isWOdd: false,
      isWTop: false,
      isWMid: false,
      isWBot: false,
      isW1to12: false,
      isW13to24: false,
      isW25to36: false,
      isW1to18: false,
      isW19to36: false,
      isWZone1: false,
      isWZone1to2: false,
      isWZone1to3: false,
      isWZone2: false,
      isWZone2to3: false,
      isWZone3: false,
      isWZone3to4: false,
      isWZone4: false,
      isWZone4to1: false,
      isWZone4to2: false,
    })
  }

  showFilter = () => {
    this.setState({
      isWFilter: !this.state.isWFilter
    })
  }

  onClickNotify = () => {
    if (this.state.open_in_a_new_tab) {
      window.open(this.state.on_click_go_to, '_blank');
    } else {
      window.open(this.state.on_click_go_to, '_self');
    }
  }

  onHideNotification = (event) => {
    this.setState({
      show_notification: false,
      type: ''
    })
    window.localStorage.setItem('notification_time', this.state.notification_time);
    event.stopPropagation();
  }
  
  render()
  {
    let { page_status, is_setTime, running, bar_status, cSelected, cSelected_status, undo_status, activeIndex1, activeIndex2, activeIndex3, width_status, scrollingLock, pages, status, isDealerAvatar, dealer_avatar, isSubscription, isFilter, isSetFilter, isArrow, isCheckedAllData, isPlay, isRB, isEO, isThreeG, isTwoG, isZone, isAngle, isTMB,
       notification_style, message_style, bar_message, show_discount_code, discount_btn_style, discount_code, show_button, button_style, button_text, close_style, show_notification, enable_bar_click } = this.state;
    let angle = this.state.angle_row;
    return(
      <Container fluid className="pr-3 pl-3">
        {
          show_notification && (
            <div className="w-100 d-flex p-3 mb-1" style={notification_style} onClick={enable_bar_click ? this.onClickNotify : this.none}>
              <div className="mr-auto ml-auto">
                <span className="mt-auto mb-auto mr-3" style={message_style}>{bar_message}</span>
                {
                  show_discount_code && (<Button size="lg" className="mr-3" style={discount_btn_style}>{discount_code}</Button>)
                }
                {
                  show_button && (<Button size="lg" style={button_style} onClick={this.onClickNotify}>{button_text}</Button>)
                }
              </div>
              <XCircle size={20} className="mt-auto mb-auto float-right" style={close_style} onClick={(e) => this.onHideNotification(e)} />
            </div>
          )
        }
        <Row noGutters className="pt-3">
          <Col xl="9" lg="8" md="8">
            <div className="d-flex w-100">
              <div className="chart_body">
                <Row >
                  <Col xl="3" lg="3" md="3" sm="3" xs="6" className="pb-2">
                    <Button size="lg" className="new_page_btn" onClick={this.newPage}  disabled={isPlay} >
                      <Translation>{(t, { i18n }) => <>{t('NewPage')}</>}</Translation>
                      <PlusSquare className="align-middle ml-1" />
                    </Button>
                  </Col>
                  <Col xl="3" lg="3" md="3" sm="3" xs="6" className="pb-2">
                    <Button size="lg" className="float-right filter_btn" onClick={this.clearAllFilter} >
                      <Translation>{(t, { i18n }) => <>{t('ClearAll')}</>}</Translation>
                    </Button>
                  </Col>
                  <Col xl="3" lg="3" md="3" sm="3" xs="6" className="pb-2">
                    {
                      !this.state.isWFilter ? (
                        <Button size="lg" className="filter_btn" onClick={this.showFilter} >
                          <Translation>{(t, { i18n }) => <>{t('FilterShow')}</>}</Translation>
                        </Button>
                      ) : (
                        <Button size="lg" className="filter_btn" onClick={this.showFilter} >
                          <Translation>{(t, { i18n }) => <>{t('FilterHide')}</>}</Translation>
                        </Button>
                      )
                    }
                  </Col>
                  <Col xl="3" lg="3" md="3" sm="3" xs="6" className="pb-2">
                    <Button size="lg" className="float-right load_page_btn" onClick={this.loadPage_in} disabled={isPlay}>
                      <Translation>{(t, { i18n }) => <>{t('LoadPage')}</>}</Translation>
                    </Button>
                  </Col>
                </Row>
                <Row >
                  <Col>
                    <div className="page_slider">
                      <div className="page_group">
                      {
                        this.state.page_row.map((row, index) => {
                          if (index === this.state.page_row.length - 1) {
                            if (row.active === 1) {
                              return (
                                <div className="active_last_page" key={index}><span onClick={() => this.activePage(index)}>{!row.dealer_name ? row.casino_name + row.id : row.casino_name + ' / ' + row.dealer_name}</span><XSquare size={20} className="align-middle ml-2" onClick={() => this.closePage(index)} /></div>
                              )
                            } else {
                              return (
                                <div className="unactive_last_page" key={index}><span onClick={() => this.activePage(index)}>{!row.dealer_name ? row.casino_name + row.id : row.casino_name + ' / ' + row.dealer_name}</span><XSquare size={20} className="align-middle ml-2" onClick={() => this.closePage(index)} /></div>
                              )
                            }
                          } else {
                            if (row.active === 1) {
                              return (
                                <div className="active_middle_page" key={index}><span onClick={() => this.activePage(index)}>{!row.dealer_name ? row.casino_name + row.id : row.casino_name + ' / ' + row.dealer_name}</span><XSquare size={20} className="align-middle ml-2" onClick={() => this.closePage(index)} /></div>
                              )
                            } else {
                              return (
                                <div className="unactive_middle_page" key={index}><span onClick={() => this.activePage(index)}>{!row.dealer_name ? row.casino_name + row.id : row.casino_name + ' / ' + row.dealer_name}</span><XSquare size={20} className="align-middle ml-2" onClick={() => this.closePage(index)} /></div>
                              )
                            }
                          }
                        })
                      }
                      </div>
                    </div>
                  </Col>
                </Row>
                <Row >
                  <Col>
                    {
                      !isFilter ? (
                        <div className=" btn_group_slider">
                          <ButtonGroup>
                            {
                              this.state.btn_row_data.map((value, index) => {
                                if (value === 0) {
                                  return <div key={index}><div><Button className="green_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>XXX</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>XXX</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>XXX</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>XXX</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z1</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>XXX</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                } else if (value === 1) {
                                  return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Bot</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1st</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z3</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                } else if (value === 2) {
                                  return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Mid</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1st</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z1</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                } else if (value === 3) {
                                  return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Top</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1st</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z4</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                } else if (value === 4) {
                                  return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Bot</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1st</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z1</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                } else if (value === 5) {
                                  return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Mid</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1st</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z3</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                } else if (value === 6) {
                                  return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Top</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1st</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z2</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                } else if (value === 7) {
                                  return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Bot</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1st</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z4</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                } else if (value === 8) {
                                  return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Mid</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1st</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z2</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                } else if (value === 9) {
                                  return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Top</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1st</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z3</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                } else if (value === 10) {
                                  return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Bot</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1st</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z2</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                } else if (value === 11) {
                                  return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Mid</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1st</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z2</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                } else if (value === 12) {
                                  return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Top</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1st</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z4</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                } else if (value === 13) {
                                  return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Bot</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>2nd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z2</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                } else if (value === 14) {
                                  return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Mid</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>2nd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z3</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                } else if (value === 15) {
                                  return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Top</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>2nd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z1</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                } else if (value === 16) {
                                  return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Bot</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>2nd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z3</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                } else if (value === 17) {
                                  return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Mid</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>2nd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z1</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                } else if (value === 18) {
                                  return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Top</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>2nd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z4</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                } else if (value === 19) {
                                  return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Bot</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>2nd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z1</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                } else if (value === 20) {
                                  return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Mid</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>2nd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z3</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                } else if (value === 21) {
                                  return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Top</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>2nd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z1</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                } else if (value === 22) {
                                  return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Bot</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>2nd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z4</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                } else if (value === 23) {
                                  return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Mid</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>2nd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z2</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                } else if (value === 24) {
                                  return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Top</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>2nd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z3</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                } else if (value === 25) {
                                  return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Bot</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>3rd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z1</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                } else if (value === 26) {
                                  return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Mid</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>3rd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z4</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                } else if (value === 27) {
                                  return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Top</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>3rd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z2</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                } else if (value === 28) {
                                  return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Bot</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>3rd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z4</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                } else if (value === 29) {
                                  return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Mid</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>3rd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z4</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                } else if (value === 30) {
                                  return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Top</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>3rd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z2</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                } else if (value === 31) {
                                  return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Bot</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>3rd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z3</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                } else if (value === 32) {
                                  return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Mid</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>3rd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z1</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                } else if (value === 33) {
                                  return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Top</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z3</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                } else if (value === 34) {
                                  return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Bot</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>3rd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z2</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                } else if (value === 35) {
                                  return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Mid</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>3rd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z4</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                } else if (value === 36) {
                                  return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Top</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>3rd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z2</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                }
                              })
                            }
                          </ButtonGroup>
                        </div>
                      ) : (
                        <div className=" btn_group_slider">
                          <ButtonGroup>
                            {
                              this.state.btn_row_data.map((value, index) => {
                                if (index < this.state.filterNumber) {
                                  if (value === 0) {
                                    return <div key={index}><div><Button className="green_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>XXX</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>XXX</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>XXX</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>XXX</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z1</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>XXX</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                  } else if (value === 1) {
                                    return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Bot</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1st</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z3</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                  } else if (value === 2) {
                                    return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Mid</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1st</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z1</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                  } else if (value === 3) {
                                    return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Top</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1st</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z4</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                  } else if (value === 4) {
                                    return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Bot</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1st</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z1</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                  } else if (value === 5) {
                                    return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Mid</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1st</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z3</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                  } else if (value === 6) {
                                    return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Top</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1st</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z2</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                  } else if (value === 7) {
                                    return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Bot</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1st</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z4</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                  } else if (value === 8) {
                                    return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Mid</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1st</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z2</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                  } else if (value === 9) {
                                    return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Top</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1st</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z3</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                  } else if (value === 10) {
                                    return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Bot</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1st</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z2</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                  } else if (value === 11) {
                                    return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Mid</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1st</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z2</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                  } else if (value === 12) {
                                    return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Top</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1st</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z4</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                  } else if (value === 13) {
                                    return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Bot</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>2nd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z2</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                  } else if (value === 14) {
                                    return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Mid</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>2nd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z3</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                  } else if (value === 15) {
                                    return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Top</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>2nd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z1</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                  } else if (value === 16) {
                                    return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Bot</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>2nd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z3</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                  } else if (value === 17) {
                                    return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Mid</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>2nd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z1</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                  } else if (value === 18) {
                                    return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Top</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>2nd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z4</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                  } else if (value === 19) {
                                    return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Bot</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>2nd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z1</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                  } else if (value === 20) {
                                    return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Mid</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>2nd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z3</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                  } else if (value === 21) {
                                    return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Top</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>2nd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z1</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                  } else if (value === 22) {
                                    return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Bot</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>2nd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z4</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                  } else if (value === 23) {
                                    return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Mid</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>2nd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z2</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                  } else if (value === 24) {
                                    return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Top</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>2nd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z3</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                  } else if (value === 25) {
                                    return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Bot</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>3rd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z1</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                  } else if (value === 26) {
                                    return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Mid</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>3rd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z4</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                  } else if (value === 27) {
                                    return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Top</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>3rd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z2</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                  } else if (value === 28) {
                                    return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Bot</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>3rd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z4</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                  } else if (value === 29) {
                                    return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Mid</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>3rd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z4</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                  } else if (value === 30) {
                                    return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Top</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>3rd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z2</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                  } else if (value === 31) {
                                    return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Bot</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>3rd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z3</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                  } else if (value === 32) {
                                    return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Mid</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>3rd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z1</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                  } else if (value === 33) {
                                    return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Top</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z3</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                  } else if (value === 34) {
                                    return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Bot</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>3rd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z2</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                  } else if (value === 35) {
                                    return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Mid</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>3rd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z4</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                  } else if (value === 36) {
                                    return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Top</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>3rd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z2</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                  }
                                }
                              })
                            }
                          </ButtonGroup>
                          <div className="filter-select">
                            <ButtonGroup className="filter-btns">
                              {
                                this.state.btn_row_data.map((value, index) => {
                                  if (index >= this.state.filterNumber) {
                                    if (value === 0) {
                                      return <div key={index}><div><Button className="green_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>XXX</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>XXX</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>XXX</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>XXX</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z1</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>XXX</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                    } else if (value === 1) {
                                      return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Bot</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1st</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z3</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                    } else if (value === 2) {
                                      return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Mid</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1st</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z1</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                    } else if (value === 3) {
                                      return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Top</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1st</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z4</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                    } else if (value === 4) {
                                      return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Bot</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1st</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z1</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                    } else if (value === 5) {
                                      return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Mid</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1st</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z3</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                    } else if (value === 6) {
                                      return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Top</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1st</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z2</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                    } else if (value === 7) {
                                      return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Bot</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1st</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z4</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                    } else if (value === 8) {
                                      return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Mid</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1st</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z2</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                    } else if (value === 9) {
                                      return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Top</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1st</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z3</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                    } else if (value === 10) {
                                      return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Bot</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1st</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z2</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                    } else if (value === 11) {
                                      return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Mid</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1st</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z2</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                    } else if (value === 12) {
                                      return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Top</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1st</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z4</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                    } else if (value === 13) {
                                      return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Bot</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>2nd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z2</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                    } else if (value === 14) {
                                      return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Mid</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>2nd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z3</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                    } else if (value === 15) {
                                      return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Top</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>2nd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z1</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                    } else if (value === 16) {
                                      return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Bot</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>2nd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z3</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                    } else if (value === 17) {
                                      return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Mid</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>2nd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z1</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                    } else if (value === 18) {
                                      return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Top</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>2nd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z4</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>1-18</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                    } else if (value === 19) {
                                      return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Bot</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>2nd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z1</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                    } else if (value === 20) {
                                      return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Mid</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>2nd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z3</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                    } else if (value === 21) {
                                      return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Top</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>2nd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z1</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                    } else if (value === 22) {
                                      return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Bot</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>2nd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z4</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                    } else if (value === 23) {
                                      return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Mid</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>2nd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z2</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                    } else if (value === 24) {
                                      return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Top</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>2nd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z3</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                    } else if (value === 25) {
                                      return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Bot</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>3rd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z1</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                    } else if (value === 26) {
                                      return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Mid</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>3rd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z4</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                    } else if (value === 27) {
                                      return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Top</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>3rd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z2</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                    } else if (value === 28) {
                                      return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Bot</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>3rd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z4</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                    } else if (value === 29) {
                                      return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Mid</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>3rd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z4</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                    } else if (value === 30) {
                                      return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Top</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>3rd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z2</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                    } else if (value === 31) {
                                      return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Bot</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>3rd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z3</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                    } else if (value === 32) {
                                      return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Mid</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>3rd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z1</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                    } else if (value === 33) {
                                      return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Top</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z3</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                    } else if (value === 34) {
                                      return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Bot</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>3rd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z2</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                    } else if (value === 35) {
                                      return <div key={index}><div><Button className="black_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Blk</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Odd</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Mid</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>3rd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z4</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                    } else if (value === 36) {
                                      return <div key={index}><div><Button className="red_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{value}</Button></div><div className={!isRB ? "rbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Red</Button></div><div className={!isEO ? "eoBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Even</Button></div><div className={!isTMB ? "tmbBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Top</Button></div><div className={!isThreeG ? "threeGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>3rd</Button></div><div className={!isZone ? "zoneBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>Z2</Button></div><div className={!isTwoG ? "twoGBtn" : " "}><Button className="even_odd_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>19-36</Button></div><div className={!isAngle ? "angleBtn" : " "}><Button className="red_blk_btn" onClick={() => this.onCheckboxBtnClick(index)} active={cSelected.includes(index)}>{angle[index]}</Button></div></div>
                                    }
                                  }
                                })
                              }
                            </ButtonGroup>
                          </div>
                        </div>
                      )
                    }
                  </Col>
                </Row>
                <div ref="pie_group" id="pie_group">
                  <Row>
                    <Col xl={width_status ? "12" : "4"} lg="12" md="12" sm="12" xs="12" className="">
                      <Card className="flex-fill w-100 card-color">
                        <CardBody>
                          <Row>
                            <Col xl={width_status ? "6" : "12"} lg="6" md="12" sm="12" xs="12" className="p-0 pie-canvas" style={{height: 360}}>
                              <div>
                                <div className="text-center align-self-center w-100">
                                  <canvas ref="pie_canvas"  width="310" height="310" />
                                  <img ref="board_canvasImg1_0" src={board_0} alt={'roulette board'} style={{display: 'none'}} />
                                  <img ref="board_canvasImg1_90" src={board_90} alt={'roulette board'} style={{display: 'none'}} />
                                  <img ref="board_canvasImg1_180" src={board_180} alt={'roulette board'} style={{display: 'none'}} />
                                  <img ref="board_canvasImg1_270" src={board_270} alt={'roulette board'} style={{display: 'none'}} />
                                  
                                  <img ref="Wheel_1to12" src={Wheel_1to12} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="Wheel_13to24" src={Wheel_13to24} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="Wheel_25to36" src={Wheel_25to36} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="Wheel_1to18" src={Wheel_1to18} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="Wheel_19to36" src={Wheel_19to36} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="Wheel_Red" src={Wheel_Red} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="Wheel_Blk" src={Wheel_Blk} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="Wheel_Even" src={Wheel_Even} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="Wheel_Odd" src={Wheel_Odd} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="Wheel_Top" src={Wheel_Top} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="Wheel_Mid" src={Wheel_Mid} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="Wheel_Bottom" src={Wheel_Bottom} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="Wheel_Zone1" src={Wheel_Zone1} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="Wheel_Zone1to2" src={Wheel_Zone1to2} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="Wheel_Zone1to3" src={Wheel_Zone1to3} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="Wheel_Zone2" src={Wheel_Zone2} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="Wheel_Zone2to3" src={Wheel_Zone2to3} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="Wheel_Zone3" src={Wheel_Zone3} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="Wheel_Zone3to4" src={Wheel_Zone3to4} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="Wheel_Zone4" src={Wheel_Zone4} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="Wheel_Zone4to1" src={Wheel_Zone4to1} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="Wheel_Zone4to2" src={Wheel_Zone4to2} alt={'filter cover'} style={{display: 'none'}} />

                                  <img ref="Aboard_canvasImg1_0" src={Aboard_0} alt={'roulette board'} style={{display: 'none'}} />
                                  <img ref="Aboard_canvasImg1_90" src={Aboard_90} alt={'roulette board'} style={{display: 'none'}} />
                                  <img ref="Aboard_canvasImg1_180" src={Aboard_180} alt={'roulette board'} style={{display: 'none'}} />
                                  <img ref="aboard_canvasImg1_270" src={Aboard_270} alt={'roulette board'} style={{display: 'none'}} />
                                  
                                  <img ref="AWheel_1to12" src={AWheel_1to12} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="AWheel_13to24" src={AWheel_13to24} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="AWheel_25to36" src={AWheel_25to36} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="AWheel_1to18" src={AWheel_1to18} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="AWheel_19to36" src={AWheel_19to36} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="AWheel_Red" src={AWheel_Red} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="AWheel_Blk" src={AWheel_Blk} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="AWheel_Even" src={AWheel_Even} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="AWheel_Odd" src={AWheel_Odd} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="AWheel_Top" src={AWheel_Top} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="AWheel_Mid" src={AWheel_Mid} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="AWheel_Bottom" src={AWheel_Bottom} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="AWheel_Zone1" src={AWheel_Zone1} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="AWheel_Zone1to2" src={AWheel_Zone1to2} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="AWheel_Zone1to3" src={AWheel_Zone1to3} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="AWheel_Zone2" src={AWheel_Zone2} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="AWheel_Zone2to3" src={AWheel_Zone2to3} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="AWheel_Zone3" src={AWheel_Zone3} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="AWheel_Zone3to4" src={AWheel_Zone3to4} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="AWheel_Zone4" src={AWheel_Zone4} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="AWheel_Zone4to1" src={AWheel_Zone4to1} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="AWheel_Zone4to2" src={AWheel_Zone4to2} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="AAll0" src={AAll0} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="AAll1" src={AAll1} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="AAll2" src={AAll2} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="AAll3" src={AAll3} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="AAll4" src={AAll4} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="AAll5" src={AAll5} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="AAll6" src={AAll6} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="AAll7" src={AAll7} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="AAll8" src={AAll8} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="AAll9" src={AAll9} alt={'filter cover'} style={{display: 'none'}} />
                                  <img ref="Arotate_canvasImg_0" src={Arotate_board_0} alt={'roulette rotate board'} style={{display: 'none'}} />
                                  <img ref="Arotate_canvasImg_90" src={Arotate_board_90} alt={'roulette rotate board'} style={{display: 'none'}} />
                                  <img ref="Arotate_canvasImg_180" src={Arotate_board_180} alt={'roulette rotate board'} style={{display: 'none'}} />
                                  <img ref="Arotate_canvasImg_270" src={Arotate_board_270} alt={'roulette rotate board'} style={{display: 'none'}} />
                                </div>
                              </div>
                              <div className="float-right"  style={{marginTop: '-35px', zIndex: 10, cursor: 'pointer'}}>
                                <ZoomIn size={30} className="align-middle zoom_in" onClick={isPlay? this.none : this.toggle_in1} />
                              </div>
                              <Row className="pt-2 pb-2">
                                <Col lg="2" md="2" sm="2" xs="2" className="text-right"><b>1</b></Col>
                                <Col lg="8" md="8" sm="8" xs="8" className="text-center">
                                  <input type="range" className="custom-range" min="1" max="10" defaultValue={this.state.range_1} step="1" id="customRange1" onChange={(e) => {this.handleChange("range_1", e.target.value)}} disabled={isPlay} />
                                </Col>
                                <Col lg="2" md="2" sm="2" xs="2"><b>10</b></Col>
                              </Row>
                            </Col>
                            <Col xl={width_status ? "6" : "12"} lg="6" md="12" sm="12" xs="12" className="p-0 pie-canvas" style={{height: 380}}>
                              <Carousel
                                activeIndex={activeIndex1}
                                next={this.next1}
                                previous={this.previous1}
                                interval={false}
                                className="p-0"
                              >
                                {items1.map((item1) => {
                                  return (
                                    <CarouselItem
                                      tag="div"
                                      key={item1.id}
                                    >
                                        {item1.id === 1 && (
                                          <div className="w-100 d-flex">
                                            <div className="text-center" style={{width: '25%'}}>
                                              <div className="align-self-center w-100">
                                                <div className="chart chart-lg">
                                                  {
                                                    !bar_status && (
                                                      <Bar data={this.state.data1} options={options1} />
                                                    )
                                                  }
                                                </div>
                                                <div className="align-self-center w-100 d-flex">
                                                  <div className="w-50">
                                                    {
                                                      !this.state.isWRed ? (
                                                        <div className="filter-selector text-center" onClick={() => this.filter('wRed')}>
                                                          <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                        </div>
                                                      ) : (
                                                        <div className="filter-selector text-center" onClick={() => this.filter('wRed')}>
                                                          <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                        </div>
                                                      )
                                                    }
                                                  </div>
                                                  <div className="w-50">
                                                    {
                                                      !this.state.isWBlk ? (
                                                        <div className="filter-selector text-center" onClick={() => this.filter('wBlk')}>
                                                          <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                        </div>
                                                      ) : (
                                                        <div className="filter-selector text-center" onClick={() => this.filter('wBlk')}>
                                                          <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                        </div>
                                                      )
                                                    }
                                                  </div>
                                                </div>
                                              </div>
                                            </div>
                                            <div className="text-center" style={{width: '25%'}}>
                                              <div className="align-self-center w-100">
                                                <div className="chart chart-lg">
                                                {
                                                  !bar_status && (
                                                    <Bar data={this.state.data2} options={options1} />
                                                  )
                                                }
                                                </div>
                                                <div className="align-self-center w-100 d-flex">
                                                  <div className="w-50">
                                                    {
                                                      !this.state.isWEven ? (
                                                        <div className="filter-selector text-center" onClick={() => this.filter('wEven')}>
                                                          <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                        </div>
                                                      ) : (
                                                        <div className="filter-selector text-center" onClick={() => this.filter('wEven')}>
                                                          <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                        </div>
                                                      )
                                                    }
                                                  </div>
                                                  <div className="w-50">
                                                    {
                                                      !this.state.isWOdd ? (
                                                        <div className="filter-selector text-center" onClick={() => this.filter('wOdd')}>
                                                          <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                        </div>
                                                      ) : (
                                                        <div className="filter-selector text-center" onClick={() => this.filter('wOdd')}>
                                                          <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                        </div>
                                                      )
                                                    }
                                                  </div>
                                                </div>
                                              </div>
                                            </div>
                                            <div className="text-center" style={{width: '25%'}}>
                                              <div className="align-self-center w-100">
                                                <div className="chart chart-lg">
                                                {
                                                  !bar_status && (
                                                    <Bar data={this.state.data3} options={options1} />
                                                  )
                                                }
                                                </div>
                                                <div className="align-self-center w-100 d-flex">
                                                  <div className="w-50">
                                                    {
                                                      !this.state.isW1to18 ? (
                                                        <div className="filter-selector text-center" onClick={() => this.filter('w1to18')}>
                                                          <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                        </div>
                                                      ) : (
                                                        <div className="filter-selector text-center" onClick={() => this.filter('w1to18')}>
                                                          <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                        </div>
                                                      )
                                                    }
                                                  </div>
                                                  <div className="w-50">
                                                    {
                                                      !this.state.isW19to36 ? (
                                                        <div className="filter-selector text-center" onClick={() => this.filter('w19to36')}>
                                                          <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                        </div>
                                                      ) : (
                                                        <div className="filter-selector text-center" onClick={() => this.filter('w19to36')}>
                                                          <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                        </div>
                                                      )
                                                    }
                                                  </div>
                                                </div>
                                              </div>
                                            </div>
                                            <div className="text-center" style={{width: '25%'}}>
                                              <div className="align-self-center w-100">
                                                <div className="chart chart-lg">
                                                {
                                                  !bar_status && (
                                                    <Bar data={this.state.data4} options={options1} />
                                                  )
                                                }
                                                </div>
                                                <div className="align-self-center w-100 d-flex">
                                                  <div className="text-center" style={{width: '33.333%'}}>
                                                    {
                                                      !this.state.isW1to12 ? (
                                                        <div className="filter-selector text-center" onClick={() => this.filter('w1to12')}>
                                                          <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                        </div>
                                                      ) : (
                                                        <div className="filter-selector text-center" onClick={() => this.filter('w1to12')}>
                                                          <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                        </div>
                                                      )
                                                    }
                                                  </div>
                                                  <div className="text-center" style={{width: '33.333%'}}>
                                                    {
                                                      !this.state.isW13to24 ? (
                                                        <div className="filter-selector text-center" onClick={() => this.filter('w13to24')}>
                                                          <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                        </div>
                                                      ) : (
                                                        <div className="filter-selector text-center" onClick={() => this.filter('w13to24')}>
                                                          <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                        </div>
                                                      )
                                                    }
                                                  </div>
                                                  <div className="text-center" style={{width: '33.333%'}}>
                                                    {
                                                      !this.state.isW25to36 ? (
                                                        <div className="filter-selector text-center" onClick={() => this.filter('w25to36')}>
                                                          <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                        </div>
                                                      ) : (
                                                        <div className="filter-selector text-center" onClick={() => this.filter('w25to36')}>
                                                          <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                        </div>
                                                      )
                                                    }
                                                  </div>
                                                </div>
                                              </div>
                                            </div>
                                          </div>
                                          )
                                        }
                                        {item1.id === 2 && (
                                          <div className="w-100 d-flex">
                                            <div className="text-center" style={{width: '33.333%'}}>
                                              <div className="align-self-center w-100">
                                                <div className="chart chart-lg">
                                                  {
                                                    !bar_status && (
                                                      <Bar data={this.state.data1} options={options1} />
                                                    )
                                                  }
                                                </div>
                                                <div className="align-self-center w-100 d-flex">
                                                  <div className="w-50">
                                                    {
                                                      !this.state.isWRed ? (
                                                        <div className="filter-selector text-center" onClick={() => this.filter('wRed')}>
                                                          <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                        </div>
                                                      ) : (
                                                        <div className="filter-selector text-center" onClick={() => this.filter('wRed')}>
                                                          <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                        </div>
                                                      )
                                                    }
                                                  </div>
                                                  <div className="w-50">
                                                    {
                                                      !this.state.isWBlk ? (
                                                        <div className="filter-selector text-center" onClick={() => this.filter('wBlk')}>
                                                          <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                        </div>
                                                      ) : (
                                                        <div className="filter-selector text-center" onClick={() => this.filter('wBlk')}>
                                                          <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                        </div>
                                                      )
                                                    }
                                                  </div>
                                                </div>
                                              </div>
                                            </div>
                                            <div className="text-center" style={{width: '33.333%'}}>
                                              <div className="align-self-center w-100">
                                                <div className="chart chart-lg">
                                                {
                                                  !bar_status && (
                                                    <Bar data={this.state.data2} options={options1} />
                                                  )
                                                }
                                                </div>
                                                <div className="align-self-center w-100 d-flex">
                                                  <div className="w-50">
                                                    {
                                                      !this.state.isWEven ? (
                                                        <div className="filter-selector text-center" onClick={() => this.filter('wEven')}>
                                                          <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                        </div>
                                                      ) : (
                                                        <div className="filter-selector text-center" onClick={() => this.filter('wEven')}>
                                                          <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                        </div>
                                                      )
                                                    }
                                                  </div>
                                                  <div className="w-50">
                                                    {
                                                      !this.state.isWOdd ? (
                                                        <div className="filter-selector text-center" onClick={() => this.filter('wOdd')}>
                                                          <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                        </div>
                                                      ) : (
                                                        <div className="filter-selector text-center" onClick={() => this.filter('wOdd')}>
                                                          <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                        </div>
                                                      )
                                                    }
                                                  </div>
                                                </div>
                                              </div>
                                            </div>
                                            <div className="text-center" style={{width: '33.333%'}}>
                                              <div className="align-self-center w-100">
                                                <div className="chart chart-lg">
                                                {
                                                  !bar_status && (
                                                    <Bar data={this.state.data3} options={options1} />
                                                  )
                                                }
                                                </div>
                                                <div className="align-self-center w-100 d-flex">
                                                  <div className="text-center w-50">
                                                    {
                                                      !this.state.isW1to18 ? (
                                                        <div className="filter-selector text-center" onClick={() => this.filter('w1to18')}>
                                                          <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                        </div>
                                                      ) : (
                                                        <div className="filter-selector text-center" onClick={() => this.filter('w1to18')}>
                                                          <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                        </div>
                                                      )
                                                    }
                                                  </div>
                                                  <div className="w-50">
                                                    {
                                                      !this.state.isW19to36 ? (
                                                        <div className="filter-selector text-center" onClick={() => this.filter('w19to36')}>
                                                          <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                        </div>
                                                      ) : (
                                                        <div className="filter-selector text-center" onClick={() => this.filter('w19to36')}>
                                                          <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                        </div>
                                                      )
                                                    }
                                                  </div>
                                                </div>
                                              </div>
                                            </div>
                                          </div>
                                          )
                                        }
                                        {item1.id === 3 && (
                                          <div className="align-self-center w-100">
                                            <div className="chart chart-lg">
                                              {
                                                !bar_status && (
                                                  <Bar data={this.state.data5} options={options4} />
                                                )
                                              }
                                            </div>
                                            <div className="w-100" style={{display: 'flex'}}>
                                              <div className="text-center" style={{width: '25%'}}>
                                                {
                                                  !this.state.isWZone1 ? (
                                                    <div className="filter-selector text-center" onClick={() => this.filter('wZone1')}>
                                                      <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                    </div>
                                                  ) : (
                                                    <div className="filter-selector text-center" onClick={() => this.filter('wZone1')}>
                                                      <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                    </div>
                                                  )
                                                }
                                              </div>
                                              <div className="text-center" style={{width: '25%'}}>
                                                {
                                                  !this.state.isWZone2 ? (
                                                    <div className="filter-selector text-center" onClick={() => this.filter('wZone2')}>
                                                      <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                    </div>
                                                  ) : (
                                                    <div className="filter-selector text-center" onClick={() => this.filter('wZone2')}>
                                                      <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                    </div>
                                                  )
                                                }
                                              </div>
                                              <div className="text-center" style={{width: '25%'}}>
                                                {
                                                  !this.state.isWZone3 ? (
                                                    <div className="filter-selector text-center" onClick={() => this.filter('wZone3')}>
                                                      <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                    </div>
                                                  ) : (
                                                    <div className="filter-selector text-center" onClick={() => this.filter('wZone3')}>
                                                      <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                    </div>
                                                  )
                                                }
                                              </div>
                                              <div className="text-center" style={{width: '25%'}}>
                                                {
                                                  !this.state.isWZone4 ? (
                                                    <div className="filter-selector text-center" onClick={() => this.filter('wZone4')}>
                                                      <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                    </div>
                                                  ) : (
                                                    <div className="filter-selector text-center" onClick={() => this.filter('wZone4')}>
                                                      <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                    </div>
                                                  )
                                                }
                                              </div>
                                            </div>
                                          </div>
                                          )
                                        }
                                        {item1.id === 4 && (
                                          <div className="align-self-center w-100">
                                            <div className="chart chart-lg">
                                              {
                                                !bar_status && (
                                                  <Bar data={this.state.data4} options={options1} />
                                                )
                                              }
                                            </div>
                                            <div className="w-100" style={{display: 'flex'}}>
                                              <div className="text-center" style={{width: '33.333%'}}>
                                                {
                                                  !this.state.isW1to12 ? (
                                                    <div className="filter-selector text-center" onClick={() => this.filter('w1to12')}>
                                                      <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                    </div>
                                                  ) : (
                                                    <div className="filter-selector text-center" onClick={() => this.filter('w1to12')}>
                                                      <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                    </div>
                                                  )
                                                }
                                              </div>
                                              <div className="text-center" style={{width: '33.333%'}}>
                                                {
                                                  !this.state.isW13to24 ? (
                                                    <div className="filter-selector text-center" onClick={() => this.filter('w13to24')}>
                                                      <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                    </div>
                                                  ) : (
                                                    <div className="filter-selector text-center" onClick={() => this.filter('w13to24')}>
                                                      <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                    </div>
                                                  )
                                                }
                                              </div>
                                              <div className="text-center" style={{width: '33.333%'}}>
                                                {
                                                  !this.state.isW25to36 ? (
                                                    <div className="filter-selector text-center" onClick={() => this.filter('w25to36')}>
                                                      <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                    </div>
                                                  ) : (
                                                    <div className="filter-selector text-center" onClick={() => this.filter('w25to36')}>
                                                      <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                    </div>
                                                  )
                                                }
                                              </div>
                                            </div>
                                          </div>
                                          )
                                        }
                                        {item1.id === 5 && (
                                          <div className="align-self-center w-100">
                                            <div className="chart chart-lg">
                                              {
                                                !bar_status && (
                                                  <Bar data={this.state.data8} options={options1} />
                                                )
                                              }
                                            </div>
                                            <div className="w-100" style={{display: 'flex'}}>
                                              <div className="text-center" style={{width: '33.333%'}}>
                                                {
                                                  !this.state.isWTop ? (
                                                    <div className="filter-selector text-center" onClick={() => this.filter('wTop')}>
                                                      <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                    </div>
                                                  ) : (
                                                    <div className="filter-selector text-center" onClick={() => this.filter('wTop')}>
                                                      <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                    </div>
                                                  )
                                                }
                                              </div>
                                              <div className="text-center" style={{width: '33.333%'}}>
                                                {
                                                  !this.state.isWMid ? (
                                                    <div className="filter-selector text-center" onClick={() => this.filter('wMid')}>
                                                      <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                    </div>
                                                  ) : (
                                                    <div className="filter-selector text-center" onClick={() => this.filter('wMid')}>
                                                      <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                    </div>
                                                  )
                                                }
                                              </div>
                                              <div className="text-center" style={{width: '33.333%'}}>
                                                {
                                                  !this.state.isWBot ? (
                                                    <div className="filter-selector text-center" onClick={() => this.filter('wBot')}>
                                                      <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                    </div>
                                                  ) : (
                                                    <div className="filter-selector text-center" onClick={() => this.filter('wBot')}>
                                                      <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                    </div>
                                                  )
                                                }
                                              </div>
                                            </div>
                                          </div>
                                          )
                                        }
                                        {item1.id === 6 && (
                                          
                                          <div className="align-self-center w-100">
                                            <div className="chart chart-lg">
                                              {
                                                !bar_status && (
                                                  <Bar data={this.state.data7} options={options3} />
                                                )
                                              }
                                            </div>
                                          </div>
                                            
                                        )
                                      }
                                    </CarouselItem>
                                    )
                                  })
                                }
                                <CarouselControl direction="prev" directionText="Previous" onClickHandler={this.previous1} />
                                <CarouselControl direction="next" directionText="Next" onClickHandler={this.next1} />
                              </Carousel>
                            </Col>
                          </Row>
                        </CardBody>
                      </Card>
                    </Col>
                    <Col xl={width_status ? "12" : "4"} lg="12" md="12" sm="12" xs="12" className="">
                      <Card className="flex-fill w-100 card-color">
                        <CardBody>
                          <Row>
                            <Col xl={width_status ? "6" : "12"} lg="6" md="12" sm="12" xs="12" className="p-0 line-canvas" style={{height: 360}}>
                              <div>
                                <div className="text-center align-self-center w-100">
                                  <canvas ref="line_canvas"  width="310" height="310" />
                                  <img ref="board_canvasImg2_0" src={board_0} alt={'roulette board'} style={{display: 'none'}} />
                                  <img ref="board_canvasImg2_90" src={board_90} alt={'roulette board'} style={{display: 'none'}} />
                                  <img ref="board_canvasImg2_180" src={board_180} alt={'roulette board'} style={{display: 'none'}} />
                                  <img ref="board_canvasImg2_270" src={board_270} alt={'roulette board'} style={{display: 'none'}} />
                                </div>
                              </div>
                              <div className="float-right"  style={{marginTop: '-35px', zIndex: 10, cursor: 'pointer'}}>
                                <ZoomIn size={30} className="align-middle zoom_in" onClick={isPlay? this.none : this.toggle_in2} />
                              </div>
                            </Col>
                            <Col xl={width_status ? "6" : "12"} lg="6" md="12" sm="12" xs="12" className="p-0 line-canvas" style={{height: 380}}>
                              <Carousel
                                activeIndex={activeIndex2}
                                next={this.next2}
                                previous={this.previous2}
                                interval={false}
                                className="p-0"
                              >
                                {items2.map((item2) => {
                                  return (
                                    <CarouselItem
                                      tag="div"
                                      key={item2.id}
                                    >
                                      {item2.id === 1 && (
                                        
                                        <div className="align-self-center w-100">
                                          <div className="chart chart-lg">
                                            {
                                              !bar_status && (
                                                <Bar data={this.state.data7} options={options3} />
                                              )
                                            }
                                          </div>
                                        </div>
                                          
                                        )
                                      }
                                      {item2.id === 2 && (
                                        <div className="w-100 d-flex">
                                          <div className="text-center" style={{width: '33.333%'}}>
                                            <div className="align-self-center w-100">
                                              <div className="chart chart-lg">
                                                {
                                                  !bar_status && (
                                                    <Bar data={this.state.data1} options={options1} />
                                                  )
                                                }
                                              </div>
                                              <div className="align-self-center w-100 d-flex">
                                                <div className="w-50">
                                                  {
                                                    !this.state.isWRed ? (
                                                      <div className="filter-selector text-center" onClick={() => this.filter('wRed')}>
                                                        <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                      </div>
                                                    ) : (
                                                      <div className="filter-selector text-center" onClick={() => this.filter('wRed')}>
                                                        <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                      </div>
                                                    )
                                                  }
                                                </div>
                                                <div className="w-50">
                                                  {
                                                    !this.state.isWBlk ? (
                                                      <div className="filter-selector text-center" onClick={() => this.filter('wBlk')}>
                                                        <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                      </div>
                                                    ) : (
                                                      <div className="filter-selector text-center" onClick={() => this.filter('wBlk')}>
                                                        <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                      </div>
                                                    )
                                                  }
                                                </div>
                                              </div>
                                            </div>
                                          </div>
                                          <div className="text-center" style={{width: '33.333%'}}>
                                            <div className="align-self-center w-100">
                                              <div className="chart chart-lg">
                                              {
                                                !bar_status && (
                                                  <Bar data={this.state.data2} options={options1} />
                                                )
                                              }
                                              </div>
                                              <div className="align-self-center w-100 d-flex">
                                                <div className="w-50">
                                                  {
                                                    !this.state.isWEven ? (
                                                      <div className="filter-selector text-center" onClick={() => this.filter('wEven')}>
                                                        <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                      </div>
                                                    ) : (
                                                      <div className="filter-selector text-center" onClick={() => this.filter('wEven')}>
                                                        <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                      </div>
                                                    )
                                                  }
                                                </div>
                                                <div className="w-50">
                                                  {
                                                    !this.state.isWOdd ? (
                                                      <div className="filter-selector text-center" onClick={() => this.filter('wOdd')}>
                                                        <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                      </div>
                                                    ) : (
                                                      <div className="filter-selector text-center" onClick={() => this.filter('wOdd')}>
                                                        <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                      </div>
                                                    )
                                                  }
                                                </div>
                                              </div>
                                            </div>
                                          </div>
                                          <div className="text-center" style={{width: '33.333%'}}>
                                            <div className="align-self-center w-100">
                                              <div className="chart chart-lg">
                                              {
                                                !bar_status && (
                                                  <Bar data={this.state.data3} options={options1} />
                                                )
                                              }
                                              </div>
                                              <div className="align-self-center w-100 d-flex">
                                                <div className="text-center w-50">
                                                  {
                                                    !this.state.isW1to18 ? (
                                                      <div className="filter-selector text-center" onClick={() => this.filter('w1to18')}>
                                                        <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                      </div>
                                                    ) : (
                                                      <div className="filter-selector text-center" onClick={() => this.filter('w1to18')}>
                                                        <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                      </div>
                                                    )
                                                  }
                                                </div>
                                                <div className="w-50">
                                                  {
                                                    !this.state.isW19to36 ? (
                                                      <div className="filter-selector text-center" onClick={() => this.filter('w19to36')}>
                                                        <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                      </div>
                                                    ) : (
                                                      <div className="filter-selector text-center" onClick={() => this.filter('w19to36')}>
                                                        <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                      </div>
                                                    )
                                                  }
                                                </div>
                                              </div>
                                            </div>
                                          </div>
                                        </div>
                                        )
                                      }
                                      {item2.id === 3 && (
                                        <div className="align-self-center w-100">
                                          <div className="chart chart-lg">
                                            {
                                              !bar_status && (
                                                <Bar data={this.state.data5} options={options4} />
                                              )
                                            }
                                          </div>
                                          <div className="w-100" style={{display: 'flex'}}>
                                            <div className="text-center" style={{width: '25%'}}>
                                              {
                                                !this.state.isWZone1 ? (
                                                  <div className="filter-selector text-center" onClick={() => this.filter('wZone1')}>
                                                    <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                  </div>
                                                ) : (
                                                  <div className="filter-selector text-center" onClick={() => this.filter('wZone1')}>
                                                    <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                  </div>
                                                )
                                              }
                                            </div>
                                            <div className="text-center" style={{width: '25%'}}>
                                              {
                                                !this.state.isWZone2 ? (
                                                  <div className="filter-selector text-center" onClick={() => this.filter('wZone2')}>
                                                    <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                  </div>
                                                ) : (
                                                  <div className="filter-selector text-center" onClick={() => this.filter('wZone2')}>
                                                    <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                  </div>
                                                )
                                              }
                                            </div>
                                            <div className="text-center" style={{width: '25%'}}>
                                              {
                                                !this.state.isWZone3 ? (
                                                  <div className="filter-selector text-center" onClick={() => this.filter('wZone3')}>
                                                    <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                  </div>
                                                ) : (
                                                  <div className="filter-selector text-center" onClick={() => this.filter('wZone3')}>
                                                    <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                  </div>
                                                )
                                              }
                                            </div>
                                            <div className="text-center" style={{width: '25%'}}>
                                              {
                                                !this.state.isWZone4 ? (
                                                  <div className="filter-selector text-center" onClick={() => this.filter('wZone4')}>
                                                    <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                  </div>
                                                ) : (
                                                  <div className="filter-selector text-center" onClick={() => this.filter('wZone4')}>
                                                    <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                  </div>
                                                )
                                              }
                                            </div>
                                          </div>
                                        </div>
                                        )
                                      }
                                      {item2.id === 4 && (
                                        <div className="align-self-center w-100">
                                          <div className="chart chart-lg">
                                            {
                                              !bar_status && (
                                                <Bar data={this.state.data4} options={options1} />
                                              )
                                            }
                                          </div>
                                          <div className="w-100" style={{display: 'flex'}}>
                                            <div className="text-center" style={{width: '33.333%'}}>
                                              {
                                                !this.state.isW1to12 ? (
                                                  <div className="filter-selector text-center" onClick={() => this.filter('w1to12')}>
                                                    <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                  </div>
                                                ) : (
                                                  <div className="filter-selector text-center" onClick={() => this.filter('w1to12')}>
                                                    <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                  </div>
                                                )
                                              }
                                            </div>
                                            <div className="text-center" style={{width: '33.333%'}}>
                                              {
                                                !this.state.isW13to24 ? (
                                                  <div className="filter-selector text-center" onClick={() => this.filter('w13to24')}>
                                                    <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                  </div>
                                                ) : (
                                                  <div className="filter-selector text-center" onClick={() => this.filter('w13to24')}>
                                                    <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                  </div>
                                                )
                                              }
                                            </div>
                                            <div className="text-center" style={{width: '33.333%'}}>
                                              {
                                                !this.state.isW25to36 ? (
                                                  <div className="filter-selector text-center" onClick={() => this.filter('w25to36')}>
                                                    <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                  </div>
                                                ) : (
                                                  <div className="filter-selector text-center" onClick={() => this.filter('w25to36')}>
                                                    <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                  </div>
                                                )
                                              }
                                            </div>
                                          </div>
                                        </div>
                                        )
                                      }
                                      {item2.id === 5 && (
                                        <div className="align-self-center w-100">
                                          <div className="chart chart-lg">
                                            {
                                              !bar_status && (
                                                <Bar data={this.state.data8} options={options1} />
                                              )
                                            }
                                          </div>
                                          <div className="w-100" style={{display: 'flex'}}>
                                            <div className="text-center" style={{width: '33.333%'}}>
                                              {
                                                !this.state.isWTop ? (
                                                  <div className="filter-selector text-center" onClick={() => this.filter('wTop')}>
                                                    <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                  </div>
                                                ) : (
                                                  <div className="filter-selector text-center" onClick={() => this.filter('wTop')}>
                                                    <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                  </div>
                                                )
                                              }
                                            </div>
                                            <div className="text-center" style={{width: '33.333%'}}>
                                              {
                                                !this.state.isWMid ? (
                                                  <div className="filter-selector text-center" onClick={() => this.filter('wMid')}>
                                                    <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                  </div>
                                                ) : (
                                                  <div className="filter-selector text-center" onClick={() => this.filter('wMid')}>
                                                    <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                  </div>
                                                )
                                              }
                                            </div>
                                            <div className="text-center" style={{width: '33.333%'}}>
                                              {
                                                !this.state.isWBot ? (
                                                  <div className="filter-selector text-center" onClick={() => this.filter('wBot')}>
                                                    <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                  </div>
                                                ) : (
                                                  <div className="filter-selector text-center" onClick={() => this.filter('wBot')}>
                                                    <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                  </div>
                                                )
                                              }
                                            </div>
                                          </div>
                                        </div>
                                        )
                                      }
                                    </CarouselItem>
                                    )
                                  })
                                }
                                <CarouselControl direction="prev" directionText="Previous" onClickHandler={this.previous2} />
                                <CarouselControl direction="next" directionText="Next" onClickHandler={this.next2} />
                              </Carousel>
                            </Col>
                          </Row>
                        </CardBody>
                      </Card>
                    </Col>
                    <Col xl={width_status ? "12" : "4"} lg="12" md="12" sm="12" xs="12" className="">
                      <Card className="flex-fill w-100 card-color">
                        <CardBody>
                          <Row>
                            <Col xl={width_status ? "6" : "12"} lg="6" md="12" sm="12" xs="12" className="p-0 rotate_canvas" style={{height: 360}}>
                              <div className="text-center align-self-center w-100">
                                <canvas ref="rotate_canvas1"  width="310" height="310" style={{position: 'absolute'}} />
                                <canvas ref="rotate_canvas2"  width="310" height="310" />
                                <img ref="board_canvasImg3_0" src={board_0} alt={'roulette board'} style={{display: 'none'}} />
                                <img ref="board_canvasImg3_90" src={board_90} alt={'roulette board'} style={{display: 'none'}} />
                                <img ref="board_canvasImg3_180" src={board_180} alt={'roulette board'} style={{display: 'none'}} />
                                <img ref="board_canvasImg3_270" src={board_270} alt={'roulette board'} style={{display: 'none'}} />
                                <img ref="rotate_canvasImg_0" src={rotate_board_0} alt={'roulette rotate board'} style={{display: 'none'}} />
                                <img ref="rotate_canvasImg_90" src={rotate_board_90} alt={'roulette rotate board'} style={{display: 'none'}} />
                                <img ref="rotate_canvasImg_180" src={rotate_board_180} alt={'roulette rotate board'} style={{display: 'none'}} />
                                <img ref="rotate_canvasImg_270" src={rotate_board_270} alt={'roulette rotate board'} style={{display: 'none'}} />
                              </div>
                              <div className="float-right"  style={{marginTop: '-35px', zIndex: 10, cursor: 'pointer'}}>
                                <ZoomIn size={30} className="align-middle zoom_in" onClick={isPlay? this.none : this.toggle_in3} />
                              </div>
                            </Col>
                            <Col xl={width_status ? "6" : "12"} lg="6" md="12" sm="12" xs="12" className="p-0 rotate_canvas" style={{height: 380}}>
                              <Carousel
                                activeIndex={activeIndex3}
                                next={this.next3}
                                previous={this.previous3}
                                interval={false}
                                className="p-0"
                              >
                                {items3.map((item3) => {
                                  return (
                                    <CarouselItem
                                      tag="div"
                                      key={item3.id}
                                    >
                                      {item3.id === 1 && (
                                        
                                        <div className="align-self-center w-100">
                                          <div className="chart chart-lg">
                                            {
                                              !bar_status && (
                                                <Bar data={this.state.data5} options={options4} />
                                              )
                                            }
                                          </div>
                                          <div className="w-100" style={{display: 'flex'}}>
                                            <div className="text-center" style={{width: '25%'}}>
                                              {
                                                !this.state.isWZone1 ? (
                                                  <div className="filter-selector text-center" onClick={() => this.filter('wZone1')}>
                                                    <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                  </div>
                                                ) : (
                                                  <div className="filter-selector text-center" onClick={() => this.filter('wZone1')}>
                                                    <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                  </div>
                                                )
                                              }
                                            </div>
                                            <div className="text-center" style={{width: '25%'}}>
                                              {
                                                !this.state.isWZone2 ? (
                                                  <div className="filter-selector text-center" onClick={() => this.filter('wZone2')}>
                                                    <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                  </div>
                                                ) : (
                                                  <div className="filter-selector text-center" onClick={() => this.filter('wZone2')}>
                                                    <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                  </div>
                                                )
                                              }
                                            </div>
                                            <div className="text-center" style={{width: '25%'}}>
                                              {
                                                !this.state.isWZone3 ? (
                                                  <div className="filter-selector text-center" onClick={() => this.filter('wZone3')}>
                                                    <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                  </div>
                                                ) : (
                                                  <div className="filter-selector text-center" onClick={() => this.filter('wZone3')}>
                                                    <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                  </div>
                                                )
                                              }
                                            </div>
                                            <div className="text-center" style={{width: '25%'}}>
                                              {
                                                !this.state.isWZone4 ? (
                                                  <div className="filter-selector text-center" onClick={() => this.filter('wZone4')}>
                                                    <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                  </div>
                                                ) : (
                                                  <div className="filter-selector text-center" onClick={() => this.filter('wZone4')}>
                                                    <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                  </div>
                                                )
                                              }
                                            </div>
                                          </div>
                                        </div>
                                          
                                        )
                                      }
                                      {item3.id === 2 && (
                                        <div className="w-100 d-flex">
                                          <div className="text-center" style={{width: '33.333%'}}>
                                            <div className="align-self-center w-100">
                                              <div className="chart chart-lg">
                                                {
                                                  !bar_status && (
                                                    <Bar data={this.state.data1} options={options1} />
                                                  )
                                                }
                                              </div>
                                              <div className="align-self-center w-100 d-flex">
                                                <div className="w-50">
                                                  {
                                                    !this.state.isWRed ? (
                                                      <div className="filter-selector text-center" onClick={() => this.filter('wRed')}>
                                                        <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                      </div>
                                                    ) : (
                                                      <div className="filter-selector text-center" onClick={() => this.filter('wRed')}>
                                                        <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                      </div>
                                                    )
                                                  }
                                                </div>
                                                <div className="w-50">
                                                  {
                                                    !this.state.isWBlk ? (
                                                      <div className="filter-selector text-center" onClick={() => this.filter('wBlk')}>
                                                        <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                      </div>
                                                    ) : (
                                                      <div className="filter-selector text-center" onClick={() => this.filter('wBlk')}>
                                                        <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                      </div>
                                                    )
                                                  }
                                                </div>
                                              </div>
                                            </div>
                                          </div>
                                          <div className="text-center" style={{width: '33.333%'}}>
                                            <div className="align-self-center w-100">
                                              <div className="chart chart-lg">
                                              {
                                                !bar_status && (
                                                  <Bar data={this.state.data2} options={options1} />
                                                )
                                              }
                                              </div>
                                              <div className="align-self-center w-100 d-flex">
                                                <div className="w-50">
                                                  {
                                                    !this.state.isWEven ? (
                                                      <div className="filter-selector text-center" onClick={() => this.filter('wEven')}>
                                                        <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                      </div>
                                                    ) : (
                                                      <div className="filter-selector text-center" onClick={() => this.filter('wEven')}>
                                                        <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                      </div>
                                                    )
                                                  }
                                                </div>
                                                <div className="w-50">
                                                  {
                                                    !this.state.isWOdd ? (
                                                      <div className="filter-selector text-center" onClick={() => this.filter('wOdd')}>
                                                        <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                      </div>
                                                    ) : (
                                                      <div className="filter-selector text-center" onClick={() => this.filter('wOdd')}>
                                                        <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                      </div>
                                                    )
                                                  }
                                                </div>
                                              </div>
                                            </div>
                                          </div>
                                          <div className="text-center" style={{width: '33.333%'}}>
                                            <div className="align-self-center w-100">
                                              <div className="chart chart-lg">
                                              {
                                                !bar_status && (
                                                  <Bar data={this.state.data3} options={options1} />
                                                )
                                              }
                                              </div>
                                              <div className="align-self-center w-100 d-flex">
                                                <div className="text-center w-50">
                                                  {
                                                    !this.state.isW1to18 ? (
                                                      <div className="filter-selector text-center" onClick={() => this.filter('w1to18')}>
                                                        <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                      </div>
                                                    ) : (
                                                      <div className="filter-selector text-center" onClick={() => this.filter('w1to18')}>
                                                        <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                      </div>
                                                    )
                                                  }
                                                </div>
                                                <div className="w-50">
                                                  {
                                                    !this.state.isW19to36 ? (
                                                      <div className="filter-selector text-center" onClick={() => this.filter('w19to36')}>
                                                        <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                      </div>
                                                    ) : (
                                                      <div className="filter-selector text-center" onClick={() => this.filter('w19to36')}>
                                                        <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                      </div>
                                                    )
                                                  }
                                                </div>
                                              </div>
                                            </div>
                                          </div>
                                        </div>
                                        )
                                      }
                                      {item3.id === 3 && (
                                        
                                        <div className="align-self-center w-100">
                                          <div className="chart chart-lg">
                                            {
                                              !bar_status && (
                                                <Bar data={this.state.data4} options={options1} />
                                              )
                                            }
                                          </div>
                                          <div className="w-100" style={{display: 'flex'}}>
                                            <div className="text-center" style={{width: '33.333%'}}>
                                              {
                                                !this.state.isW1to12 ? (
                                                  <div className="filter-selector text-center" onClick={() => this.filter('w1to12')}>
                                                    <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                  </div>
                                                ) : (
                                                  <div className="filter-selector text-center" onClick={() => this.filter('w1to12')}>
                                                    <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                  </div>
                                                )
                                              }
                                            </div>
                                            <div className="text-center" style={{width: '33.333%'}}>
                                              {
                                                !this.state.isW13to24 ? (
                                                  <div className="filter-selector text-center" onClick={() => this.filter('w13to24')}>
                                                    <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                  </div>
                                                ) : (
                                                  <div className="filter-selector text-center" onClick={() => this.filter('w13to24')}>
                                                    <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                  </div>
                                                )
                                              }
                                            </div>
                                            <div className="text-center" style={{width: '33.333%'}}>
                                              {
                                                !this.state.isW25to36 ? (
                                                  <div className="filter-selector text-center" onClick={() => this.filter('w25to36')}>
                                                    <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                  </div>
                                                ) : (
                                                  <div className="filter-selector text-center" onClick={() => this.filter('w25to36')}>
                                                    <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                  </div>
                                                )
                                              }
                                            </div>
                                          </div>
                                        </div>
                                          
                                        )
                                      }
                                      {item3.id === 4 && (
                                        
                                        <div className="align-self-center w-100">
                                          <div className="chart chart-lg">
                                            {
                                              !bar_status && (
                                                <Bar data={this.state.data8} options={options1} />
                                              )
                                            }
                                          </div>
                                          <div className="w-100" style={{display: 'flex'}}>
                                            <div className="text-center" style={{width: '33.333%'}}>
                                              {
                                                !this.state.isWTop ? (
                                                  <div className="filter-selector text-center" onClick={() => this.filter('wTop')}>
                                                    <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                  </div>
                                                ) : (
                                                  <div className="filter-selector text-center" onClick={() => this.filter('wTop')}>
                                                    <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                  </div>
                                                )
                                              }
                                            </div>
                                            <div className="text-center" style={{width: '33.333%'}}>
                                              {
                                                !this.state.isWMid ? (
                                                  <div className="filter-selector text-center" onClick={() => this.filter('wMid')}>
                                                    <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                  </div>
                                                ) : (
                                                  <div className="filter-selector text-center" onClick={() => this.filter('wMid')}>
                                                    <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                  </div>
                                                )
                                              }
                                            </div>
                                            <div className="text-center" style={{width: '33.333%'}}>
                                              {
                                                !this.state.isWBot ? (
                                                  <div className="filter-selector text-center" onClick={() => this.filter('wBot')}>
                                                    <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                                                  </div>
                                                ) : (
                                                  <div className="filter-selector text-center" onClick={() => this.filter('wBot')}>
                                                    <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                                                  </div>
                                                )
                                              }
                                            </div>
                                          </div>
                                        </div>
                                          
                                        )
                                      }
                                      {item3.id === 5 && (
                                        
                                        <div className="align-self-center w-100">
                                          <div className="chart chart-lg">
                                            {
                                              !bar_status && (
                                                <Bar data={this.state.data7} options={options3} />
                                              )
                                            }
                                          </div>
                                        </div>
                                          
                                        )
                                      }
                                    </CarouselItem>
                                    )
                                  })
                                }
                                <CarouselControl direction="prev" directionText="Previous" onClickHandler={this.previous3} />
                                <CarouselControl direction="next" directionText="Next" onClickHandler={this.next3} />
                              </Carousel>
                            </Col>
                          </Row>
                        </CardBody>
                      </Card>
                    </Col>
                  </Row>
                </div>
                <Row >
                  <Col>
                    <div className="align-self-center w-100">
                      <div className="chart chart-xs">
                      {
                        !bar_status && (
                          <Bar data={this.state.data6} options={options5} />
                        )
                      }
                      </div>
                    </div>
                  </Col>
                </Row>
                <Row  className="text-center mt-3">
                  <Col lg="3" className="text-center">
                    <Progress value={this.state.zone_group[0]} className="mb-3 zone_progress" max={3000}>Zone 1</Progress>
                  </Col>
                  <Col lg="3" className="text-center">
                    <Progress value={this.state.zone_group[1]} className="mb-3 zone_progress" max={3000}>Zone 2</Progress>
                  </Col>
                  <Col lg="3" className="text-center">
                    <Progress value={this.state.zone_group[2]} className="mb-3 zone_progress" max={3000}>Zone 3</Progress>
                  </Col>
                  <Col lg="3" className="text-center">
                    <Progress value={this.state.zone_group[3]} className="mb-3 zone_progress" max={3000}>Zone 4</Progress>
                  </Col>
                </Row>
                <Row  className="pt-2 pb-2">
                  <Col lg="2" md="2" sm="2" xs="2" className="text-right"><b>1</b></Col>
                  <Col lg="8" md="8" sm="8" xs="8" className="text-center">
                    <input type="range" className="custom-range" min="1" max="90" defaultValue={this.state.range_2} step="1" id="customRange1" onChange={(e) => {this.handleChange("range_2", e.target.value)}} disabled={isPlay} />
                  </Col>
                  <Col lg="2" md="2" sm="2" xs="2"><b>90</b></Col>
                </Row>
              </div>
              <div className="tools">
                <p className={!isRB ? "hide-show-pattern" : "hide-show-pattern-active"} onClick={this.selectRedBlk}>Red<br/>Black</p>
                <p className={!isEO ? "hide-show-pattern" : "hide-show-pattern-active"} onClick={this.selectEvenOdd}>Even<br/>Odd</p>
                <p className={!isTMB ? "hide-show-pattern" : "hide-show-pattern-active"} onClick={this.selectTopBot}>Top<br/>Bot</p>
                <p className={!isThreeG ? "hide-show-pattern" : "hide-show-pattern-active"} onClick={this.selectThreeGroup}>1-12<br/>25-36</p>
                <p className={!isZone ? "hide-show-pattern" : "hide-show-pattern-active"} onClick={this.selectZone}>Z1 Z2<br/>Z3 Z4</p>
                <p className={!isTwoG ? "hide-show-pattern" : "hide-show-pattern-active"} onClick={this.selectTwoGroup}>1-18<br/>19-36</p>
                <p className={!isAngle ? "hide-show-pattern pt-1" : "hide-show-pattern-active pt-1"} onClick={this.selectAngle}>Angle</p>
                <hr className="mt-3 mb-0" style={{borderColor: '#091F36'}} />
                <p className="filter-add-dec" onClick={isPlay? this.none : this.addFilterNum}>+</p>
                {
                  !isSetFilter ? (
                    <p className="filter-text" onClick={isPlay? this.none : this.setFilterNum}>{this.state.filterNumber}</p>
                  ) : (
                    <Input
                      bsSize="sm"
                      type="text"
                      name="filter number"
                      placeholder="Input Filter Number"
                      value={this.state.filterNumber}
                      onChange={(e) => {this.handleChange("filter_number", e.target.value)}}
                      onKeyDown={isPlay? this.none : this.keyPress1}
                      onBlur={isPlay? this.none : this.save_filter_num}
                    />
                  )
                }
                <p className="filter-add-dec" onClick={isPlay? this.none : this.decFilterNum}>-</p>
                {
                  isFilter ? (
                    <div className="filter-selector mb-3" onClick={isPlay? this.none : this.filter_toggle}>
                      <FontAwesomeIcon
                        className="align-middle"
                        icon={faFilter}
                        fixedWidth
                        style={{color: '#0028ff'}}
                      />
                      <p className="filter-on">On</p>
                    </div>
                  ) : (
                    <div className="filter-selector mb-3" onClick={isPlay? this.none : this.filter_toggle}>
                      <FontAwesomeIcon
                        className="align-middle"
                        icon={faFilter}
                        fixedWidth
                      />
                      <p className="filter-off">Off</p>
                    </div>
                  )
                }
                {
                  !isCheckedAllData ? (
                    <div className="filter-selector mb-3" onClick={isPlay? this.none : this.checkAllData}>
                      <Square size={20} className="align-middle" style={{cursor: 'pointer'}} />
                      <p className="all-data-off">All data</p>
                    </div>
                  ) : (
                    <div className="filter-selector mb-3" onClick={isPlay? this.none : this.checkAllData}>
                      <CheckSquare size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} />
                      <p className="all-data-on">All data</p>
                    </div>
                  )
                }
                <hr style={{borderColor: '#091F36'}} />
                <div>
                  <RotateCcw size={20} className="align-middle rotate-style" onClick={this.rotateBoard} />
                </div>
                <hr style={{borderColor: '#091F36'}} />
                <div>
                  {
                    isArrow ? (
                      <ArrowLeftCircle size={20} className="align-middle" style={{color: '#0028ff', cursor: 'pointer'}} onClick={this.arrow_toggle} />
                    ) : (
                      <ArrowLeftCircle size={20} className="align-middle" style={{cursor: 'pointer'}} onClick={this.arrow_toggle} />
                    )
                  }
                </div>
              </div>
            </div>
          </Col>
          <Col xl="3" lg="4" md="4">
            <Card className="fill-flex w-100 mb-0 card-color">
              <CardBody>
                <div className="text-center" style={{fontSize: 30}}>
                  <StarRatingComponent 
                    name="star_rate" 
                    starCount={5}
                    value={this.state.rating}
                    onStarClick={isPlay? this.none : this.onStarClick.bind(this)}
                    editing={page_status}
                  />
                </div>
                <Row>
                  <Col lg="7" md="8" sm="8" xs="8" className={isDealerAvatar ? 'text-center' : 'text-center pl-0'}>
                    <Translation>{(t, { i18n }) => 
                      <>
                        <Input
                          type="text"
                          placeholder={t('CasinoName')}
                          className="md-1"
                          onChange={(e) => {this.handleChange("casino_name", e.target.value)}}
                          onKeyDown={this.keyPress}
                          disabled={!page_status}
                        />
                      </>}
                    </Translation>
                    <Translation>{(t, { i18n }) => 
                      <>
                        <Input
                          type="text"
                          placeholder={t('DealerName')}
                          className="mt-1"
                          onChange={(e) => {this.handleChange("dealer_name", e.target.value)}}
                          onKeyDown={this.keyPress}
                          disabled={!page_status}
                        />
                      </>}
                    </Translation>
                  </Col>
                  {
                    isDealerAvatar ? (
                      <Col lg="5" md="4" sm="4" xs="4" className="text-center">
                        <input type="file" id="avatar" onChange={this.onChange} />
                        <img alt="dealer avatar" src={dealer_avatar} className="rounded img-responsive w-100 dealer_avatar" onClick={isPlay? this.none : this.upload} />
                      </Col>
                    ) : (
                      <Col lg="5" md="4" sm="4" xs="4" className="text-center upload_area">
                        <input type="file" id="avatar" onChange={this.onChange} />
                        <Button size="md" className="primary_btn" onClick={this.upload} disabled={!page_status}>
                          <Upload size={20} className="align-middle" />
                        </Button>
                      </Col>
                    )
                  }
                </Row>
                <p className="p-3 m-0">{this.state.current_date}</p>
                {
                  !is_setTime ? (
                    <h2 className="text-center" onClick={isPlay? this.none : this.setTime}>{this.state.minutes}<sub><Translation>{(t, { i18n }) => <>{t('Min')}</>}</Translation></sub>: {this.state.seconds}<sub><Translation>{(t, { i18n }) => <>{t('Sec')}</>}</Translation></sub></h2>
                  ) : (
                    <Row className="text-center">
                      <Col xl="5" lg="5" md="5" sm="5" xs="5">
                        <Input
                          bsSize="xs"
                          type="number"
                          name="minutes"
                          min="0"
                          placeholder="Minutes"
                          value={this.state.minutes}
                          onChange={(e) => {this.handleChange("minutes", e.target.value)}}
                          disabled={!page_status}
                        />
                      </Col>
                      <Col xl="2" lg="2" md="2" sm="2" xs="2">
                        <span style={{fontSize: 20, fontWeight: Bold}}>:</span>
                      </Col>
                      <Col xl="5" lg="5" md="5" sm="5" xs="5">
                        <Input
                          bsSize="xs"
                          type="number"
                          name="seconds"
                          min="0"
                          placeholder="Seconds"
                          value={this.state.seconds}
                          onChange={(e) => {this.handleChange("seconds", e.target.value)}}
                          disabled={!page_status}
                        />
                      </Col>
                    </Row>
                  )
                }
                <Row>
                  {
                    !running ? (
                      <Col lg="6" md="6" sm="6" xs="6" className="text-center">
                        <Button size="lg" className="mt-2 primary_btn" onClick={this.startCountDown} disabled={!page_status}>
                          <Translation>{(t, { i18n }) => <>{t('Start')}</>}</Translation>
                        </Button>
                      </Col>
                    ) : (
                      <Col lg="6" md="6" sm="6" xs="6" className="text-center">
                        <Button color="danger" size="lg" className="mt-2" onClick={this.stopCountDown} disabled={!page_status}>
                          <Translation>{(t, { i18n }) => <>{t('Stop')}</>}</Translation>
                        </Button>
                      </Col>
                    )
                  }
                  <Col lg="6" md="6" sm="6" xs="6" className="text-center">
                    <Button color="info" size="lg" className="mt-2" onClick={this.resetCountDown} disabled={!page_status}>
                      <Translation>{(t, { i18n }) => <>{t('Reset')}</>}</Translation>
                    </Button>
                  </Col>
                </Row>
              </CardBody>
            </Card>
            <Card className="fill-flex w-100 mb-0" style={{ backgroundColor: '#333', borderColor: '#333' }}>
              <CardBody>
                <Row>
                  <Col xl={width_status ? "12" : "6"} lg="12" md="12" sm="6" className="align-self-center pt-1 pb-1">
                    <Row className="text-center">
                      <Col xl="6" lg="6" md="6" sm="6" xs="6">
                        <Button color="info" size="lg" onClick={this.deleteClick} disabled={!cSelected_status}>
                          <Translation>{(t, { i18n }) => <>{t('Delete')}</>}</Translation>
                        </Button>
                      </Col>
                      <Col xl="6" lg="6" md="6" sm="6" xs="6">
                        <Button color="info" size="lg" onClick={this.undoClick} disabled={!undo_status}>
                          <Translation>{(t, { i18n }) => <>{t('Undo')}</>}</Translation>
                        </Button>
                      </Col>
                    </Row>
                  </Col>
                  <Col xl={width_status ? "12" : "6"} lg="12" md="12" sm="6" className="align-self-center pt-1 pb-1">
                    <Row className="text-center">
                      <Col xl="9" lg="9" md="9" sm="9" xs="9" className="align-self-center mt-3">
                        <div className="p-0 m-0">
                          <input type="range" className="custom-range" min="500" max="1500" defaultValue={this.state.range_3} step="500" id="customRange1" onChange={(e) => {this.handleChange("range_3", e.target.value)}} disabled={!page_status} />
                          </div>
                        <Row>
                          <Col xl="6" md="6" sm="6" xs="6">
                            <span className="play-slow-text float-left"><Translation>{(t, { i18n }) => <>{t('Slow')}</>}</Translation></span></Col>
                          <Col xl="6" md="6" sm="6" xs="6">
                            <span className="play-fast-text float-right"><Translation>{(t, { i18n }) => <>{t('Fast')}</>}</Translation></span></Col>
                        </Row>
                      </Col>
                      <Col xl="3" lg="3" md="3" sm="3" xs="3" className="align-self-center">
                      {
                        !isPlay ? (
                          <PlayCircle size={30} className="align-middle" style={{color: '#FE6E00', cursor: 'pointer'}} onClick={this.play_toggle} />
                        ) : (
                          <StopCircle size={30} className="align-middle" style={{color: '#D7DEDC', cursor: 'pointer'}} onClick={this.stop_toggle} />
                        )
                      }
                      </Col>
                    </Row>
                  </Col>
                </Row>
              </CardBody>
            </Card>
            <div id="keyboard" ref="keyboard" className={scrollingLock ? "nav2-sticky" : ""}>
              <Card className="fill-flex w-100 mb-0" style={{backgroundColor: 'Grey'}}>
                <CardBody>
                  <Row>
                    <Col lg="3" md="3" sm="3" xs="3"></Col>
                    <Col lg="6" md="6" sm="6" xs="6" className="text-center">
                      <Button size="lg" className="w-100 green_keyboard" onClick={() => page_status ? this.btnClick(0) : this.onNewPageToggleIn()}>
                        0
                      </Button>
                    </Col>
                  </Row>
                  {
                    isSubscription ? (
                      <Row className="mt-2">
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 red_keyboard" onClick={() => page_status ? this.btnClick(1) : this.onNewPageToggleIn()}>
                            1
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 black_keyboard" onClick={() => page_status ? this.btnClick(2) : this.onNewPageToggleIn()}>
                            2
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 red_keyboard" onClick={() => page_status ? this.btnClick(3) : this.onNewPageToggleIn()}>
                            3
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 black_keyboard" onClick={() => page_status ? this.btnClick(4) : this.onNewPageToggleIn()}>
                            4
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 red_keyboard" onClick={() => page_status ? this.btnClick(5) : this.onNewPageToggleIn()}>
                            5
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 black_keyboard" onClick={() => page_status ? this.btnClick(6) : this.onNewPageToggleIn()}>
                            6
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 red_keyboard" onClick={() => page_status ? this.btnClick(7) : this.onNewPageToggleIn()}>
                            7
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 black_keyboard" onClick={() => page_status ? this.btnClick(8) : this.onNewPageToggleIn()}>
                            8
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 red_keyboard" onClick={() => page_status ? this.btnClick(9) : this.onNewPageToggleIn()}>
                            9
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 black_keyboard" onClick={() => page_status ? this.btnClick(10) : this.onNewPageToggleIn()}>
                            10
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 black_keyboard" onClick={() => page_status ? this.btnClick(11) : this.onNewPageToggleIn()}>
                            11
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 red_keyboard" onClick={() => page_status ? this.btnClick(12) : this.onNewPageToggleIn()}>
                            12
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 black_keyboard" onClick={() => page_status ? this.btnClick(13) : this.onNewPageToggleIn()}>
                            13
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 red_keyboard" onClick={() => page_status ? this.btnClick(14) : this.onNewPageToggleIn()}>
                            14
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 black_keyboard" onClick={() => page_status ? this.btnClick(15) : this.onNewPageToggleIn()}>
                            15
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 red_keyboard" onClick={() => page_status ? this.btnClick(16) : this.onNewPageToggleIn()}>
                            16
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 black_keyboard" onClick={() => page_status ? this.btnClick(17) : this.onNewPageToggleIn()}>
                            17
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 red_keyboard" onClick={() => page_status ? this.btnClick(18) : this.onNewPageToggleIn()}>
                            18
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 red_keyboard" onClick={() => page_status ? this.btnClick(19) : this.onNewPageToggleIn()}>
                            19
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 black_keyboard" onClick={() => page_status ? this.btnClick(20) : this.onNewPageToggleIn()}>
                            20
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 red_keyboard" onClick={() => page_status ? this.btnClick(21) : this.onNewPageToggleIn()}>
                            21
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 black_keyboard" onClick={() => page_status ? this.btnClick(22) : this.onNewPageToggleIn()}>
                            22
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 red_keyboard" onClick={() => page_status ? this.btnClick(23) : this.onNewPageToggleIn()}>
                            23
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 black_keyboard" onClick={() => page_status ? this.btnClick(24) : this.onNewPageToggleIn()}>
                            24
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 red_keyboard" onClick={() => page_status ? this.btnClick(25) : this.onNewPageToggleIn()}>
                            25
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 black_keyboard" onClick={() => page_status ? this.btnClick(26) : this.onNewPageToggleIn()}>
                            26
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 red_keyboard" onClick={() => page_status ? this.btnClick(27) : this.onNewPageToggleIn()}>
                            27
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 black_keyboard" onClick={() => page_status ? this.btnClick(28) : this.onNewPageToggleIn()}>
                            28
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 black_keyboard" onClick={() => page_status ? this.btnClick(29) : this.onNewPageToggleIn()}>
                            29
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 red_keyboard" onClick={() => page_status ? this.btnClick(30) : this.onNewPageToggleIn()}>
                            30
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 black_keyboard" onClick={() => page_status ? this.btnClick(31) : this.onNewPageToggleIn()}>
                            31
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 red_keyboard" onClick={() => page_status ? this.btnClick(32) : this.onNewPageToggleIn()}>
                            32
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 black_keyboard" onClick={() => page_status ? this.btnClick(33) : this.onNewPageToggleIn()}>
                            33
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 red_keyboard" onClick={() => page_status ? this.btnClick(34) : this.onNewPageToggleIn()}>
                            34
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 black_keyboard" onClick={() => page_status ? this.btnClick(35) : this.onNewPageToggleIn()}>
                            35
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 red_keyboard" onClick={() => page_status ? this.btnClick(36) : this.onNewPageToggleIn()}>
                            36
                          </Button>
                        </Col>
                      </Row>
                    ) : (
                      <Row className="mt-2">
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 red_keyboard" onClick={() => page_status ? this.btnClick(1) : this.onNewPageToggleIn()}>
                            1
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 black_keyboard" onClick={() => page_status ? this.btnClick(2) : this.onNewPageToggleIn()}>
                            2
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 red_keyboard" onClick={() => page_status ? this.btnClick(3) : this.onNewPageToggleIn()}>
                            3
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 black_keyboard" onClick={() => page_status ? this.btnClick(4) : this.onNewPageToggleIn()}>
                            4
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 red_keyboard" onClick={() => page_status ? this.btnClick(5) : this.onNewPageToggleIn()}>
                            5
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 black_keyboard" onClick={() => page_status ? this.btnClick(6) : this.onNewPageToggleIn()}>
                            6
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 red_keyboard" onClick={() => page_status ? this.btnClick(7) : this.onNewPageToggleIn()}>
                            7
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 black_keyboard" onClick={() => page_status ? this.btnClick(8) : this.onNewPageToggleIn()}>
                            8
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 red_keyboard" onClick={() => page_status ? this.btnClick(9) : this.onNewPageToggleIn()}>
                            9
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 black_keyboard" onClick={() => page_status ? this.btnClick(10) : this.onNewPageToggleIn()}>
                            10
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 black_keyboard" onClick={() => page_status ? this.btnClick(11) : this.onNewPageToggleIn()}>
                            11
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 red_keyboard" onClick={() => page_status ? this.btnClick(12) : this.onNewPageToggleIn()}>
                            12
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 locked_keyboard" onClick={this.toggle_in4}>
                            <FontAwesomeIcon
                              className="align-middle"
                              icon={faLock}
                              fixedWidth
                            />
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 locked_keyboard" onClick={this.toggle_in4}>
                            <FontAwesomeIcon
                              className="align-middle"
                              icon={faLock}
                              fixedWidth
                            />
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 locked_keyboard" onClick={this.toggle_in4}>
                            <FontAwesomeIcon
                              className="align-middle"
                              icon={faLock}
                              fixedWidth
                            />
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 locked_keyboard" onClick={this.toggle_in4}>
                            <FontAwesomeIcon
                              className="align-middle"
                              icon={faLock}
                              fixedWidth
                            />
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 locked_keyboard" onClick={this.toggle_in4}>
                            <FontAwesomeIcon
                              className="align-middle"
                              icon={faLock}
                              fixedWidth
                            />
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 locked_keyboard" onClick={this.toggle_in4}>
                            <FontAwesomeIcon
                              className="align-middle"
                              icon={faLock}
                              fixedWidth
                            />
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 locked_keyboard" onClick={this.toggle_in4}>
                            <FontAwesomeIcon
                              className="align-middle"
                              icon={faLock}
                              fixedWidth
                            />
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 locked_keyboard" onClick={this.toggle_in4}>
                            <FontAwesomeIcon
                              className="align-middle"
                              icon={faLock}
                              fixedWidth
                            />
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 locked_keyboard" onClick={this.toggle_in4}>
                            <FontAwesomeIcon
                              className="align-middle"
                              icon={faLock}
                              fixedWidth
                            />
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 locked_keyboard" onClick={this.toggle_in4}>
                            <FontAwesomeIcon
                              className="align-middle"
                              icon={faLock}
                              fixedWidth
                            />
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 locked_keyboard" onClick={this.toggle_in4}>
                            <FontAwesomeIcon
                              className="align-middle"
                              icon={faLock}
                              fixedWidth
                            />
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 locked_keyboard" onClick={this.toggle_in4}>
                            <FontAwesomeIcon
                              className="align-middle"
                              icon={faLock}
                              fixedWidth
                            />
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 locked_keyboard" onClick={this.toggle_in4}>
                            <FontAwesomeIcon
                              className="align-middle"
                              icon={faLock}
                              fixedWidth
                            />
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 locked_keyboard" onClick={this.toggle_in4}>
                            <FontAwesomeIcon
                              className="align-middle"
                              icon={faLock}
                              fixedWidth
                            />
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 locked_keyboard" onClick={this.toggle_in4}>
                            <FontAwesomeIcon
                              className="align-middle"
                              icon={faLock}
                              fixedWidth
                            />
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 locked_keyboard" onClick={this.toggle_in4}>
                            <FontAwesomeIcon
                              className="align-middle"
                              icon={faLock}
                              fixedWidth
                            />
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 locked_keyboard" onClick={this.toggle_in4}>
                            <FontAwesomeIcon
                              className="align-middle"
                              icon={faLock}
                              fixedWidth
                            />
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 locked_keyboard" onClick={this.toggle_in4}>
                            <FontAwesomeIcon
                              className="align-middle"
                              icon={faLock}
                              fixedWidth
                            />
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 locked_keyboard" onClick={this.toggle_in4}>
                            <FontAwesomeIcon
                              className="align-middle"
                              icon={faLock}
                              fixedWidth
                            />
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 locked_keyboard" onClick={this.toggle_in4}>
                            <FontAwesomeIcon
                              className="align-middle"
                              icon={faLock}
                              fixedWidth
                            />
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 locked_keyboard" onClick={this.toggle_in4}>
                            <FontAwesomeIcon
                              className="align-middle"
                              icon={faLock}
                              fixedWidth
                            />
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 locked_keyboard" onClick={this.toggle_in4}>
                            <FontAwesomeIcon
                              className="align-middle"
                              icon={faLock}
                              fixedWidth
                            />
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 locked_keyboard" onClick={this.toggle_in4}>
                            <FontAwesomeIcon
                              className="align-middle"
                              icon={faLock}
                              fixedWidth
                            />
                          </Button>
                        </Col>
                        <Col lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                          <Button size="lg" className="w-100 locked_keyboard" onClick={this.toggle_in4}>
                            <FontAwesomeIcon
                              className="align-middle"
                              icon={faLock}
                              fixedWidth
                            />
                          </Button>
                        </Col>
                      </Row>
                    )
                  }
                </CardBody>
              </Card>
              <div className="fill-flex w-100 p-3">
                <Row>
                  <Col xl="3" lg="3" md="3" sm="3" xs="3" className="text-center p-1">
                    <Button size="lg" className={!this.state.isWRed ? "w-100 keyboard" : "w-100 keyboard-active"} onClick={() => this.filter('wRed')} disabled={!page_status} outline>
                      <Translation>{(t, { i18n }) => <>{t('RED')}</>}</Translation>
                    </Button>
                  </Col>
                  <Col xl="3" lg="3" md="3" sm="3" xs="3" className="text-center p-1">
                    <Button size="lg" className={!this.state.isWBlk ? "w-100 keyboard" : "w-100 keyboard-active"} onClick={() => this.filter('wBlk')} disabled={!page_status} outline>
                      <Translation>{(t, { i18n }) => <>{t('BLACK')}</>}</Translation>
                    </Button>
                  </Col>
                  <Col xl="3" lg="3" md="3" sm="3" xs="3" className="text-center p-1">
                    <Button size="lg" className={!this.state.isWEven ? "w-100 keyboard" : "w-100 keyboard-active"} onClick={() => this.filter('wEven')} disabled={!page_status} outline>
                      <Translation>{(t, { i18n }) => <>{t('EVEN')}</>}</Translation>
                    </Button>
                  </Col>
                  <Col xl="3" lg="3" md="3" sm="3" xs="3" className="text-center p-1">
                    <Button size="lg" className={!this.state.isWOdd ? "w-100 keyboard" : "w-100 keyboard-active"} onClick={() => this.filter('wOdd')} disabled={!page_status} outline>
                      <Translation>{(t, { i18n }) => <>{t('ODD')}</>}</Translation>
                    </Button>
                  </Col>
                </Row>
                <br/>
                <Row>
                  <Col xl="3" lg="3" md="3" sm="3" xs="3" className="text-center p-1">
                    <Button size="lg" className={!this.state.isWZone1 ? "w-100 keyboard" : "w-100 keyboard-active"} onClick={() => this.filter('wZone1')} disabled={!page_status} outline>
                      <Translation>{(t, { i18n }) => <>{t('Zone1')}</>}</Translation>
                    </Button>
                  </Col>
                  <Col xl="3" lg="3" md="3" sm="3" xs="3" className="text-center p-1">
                    <Button size="lg" className={!this.state.isWZone2 ? "w-100 keyboard" : "w-100 keyboard-active"} onClick={() => this.filter('wZone2')} disabled={!page_status} outline>
                      <Translation>{(t, { i18n }) => <>{t('Zone2')}</>}</Translation>
                    </Button>
                  </Col>
                  <Col xl="3" lg="3" md="3" sm="3" xs="3" className="text-center p-1">
                    <Button size="lg" className={!this.state.isWZone3 ? "w-100 keyboard" : "w-100 keyboard-active"} onClick={() => this.filter('wZone3')} disabled={!page_status} outline>
                      <Translation>{(t, { i18n }) => <>{t('Zone3')}</>}</Translation>
                    </Button>
                  </Col>
                  <Col xl="3" lg="3" md="3" sm="3" xs="3" className="text-center p-1">
                    <Button size="lg" className={!this.state.isWZone4 ? "w-100 keyboard" : "w-100 keyboard-active"} onClick={() => this.filter('wZone4')} disabled={!page_status} outline>
                      <Translation>{(t, { i18n }) => <>{t('Zone4')}</>}</Translation>
                    </Button>
                  </Col>
                </Row>
                <Row>
                  <Col xl="3" lg="3" md="3" sm="3" xs="3" className="text-center p-1">
                    <Button size="lg" className={!this.state.isWZone1to2 ? "w-100 keyboard" : "w-100 keyboard-active"} onClick={() => this.filter('wZone1+2')} disabled={!page_status} outline>
                      <Translation>{(t, { i18n }) => <>{t('Zone1+2')}</>}</Translation>
                    </Button>
                  </Col>
                  <Col xl="3" lg="3" md="3" sm="3" xs="3" className="text-center p-1">
                    <Button size="lg" className={!this.state.isWZone2to3 ? "w-100 keyboard" : "w-100 keyboard-active"} onClick={() => this.filter('wZone2+3')} disabled={!page_status} outline>
                      <Translation>{(t, { i18n }) => <>{t('Zone2+3')}</>}</Translation>
                    </Button>
                  </Col>
                  <Col xl="3" lg="3" md="3" sm="3" xs="3" className="text-center p-1">
                    <Button size="lg" className={!this.state.isWZone3to4 ? "w-100 keyboard" : "w-100 keyboard-active"} onClick={() => this.filter('wZone3+4')} disabled={!page_status} outline>
                      <Translation>{(t, { i18n }) => <>{t('Zone3+4')}</>}</Translation>
                    </Button>
                  </Col>
                  <Col xl="3" lg="3" md="3" sm="3" xs="3" className="text-center p-1">
                    <Button size="lg" className={!this.state.isWZone4to1 ? "w-100 keyboard" : "w-100 keyboard-active"} onClick={() => this.filter('wZone4+1')} disabled={!page_status} outline>
                      <Translation>{(t, { i18n }) => <>{t('Zone4+1')}</>}</Translation>
                    </Button>
                  </Col>
                </Row>
                <Row>
                  <Col xl="6" lg="6" md="6" sm="6" xs="6" className="text-center p-1">
                    <Button size="lg" className={!this.state.isWZone4to2 ? "w-100 keyboard" : "w-100 keyboard-active"} onClick={() => this.filter('wZone4+2')} disabled={!page_status} outline>
                      <Translation>{(t, { i18n }) => <>{t('Zone4+2')}</>}</Translation>
                    </Button>
                  </Col>
                  <Col xl="6" lg="6" md="6" sm="6" xs="6" className="text-center p-1">
                    <Button size="lg" className={!this.state.isWZone1to3 ? "w-100 keyboard" : "w-100 keyboard-active"} onClick={() => this.filter('wZone1+3')} disabled={!page_status} outline>
                      <Translation>{(t, { i18n }) => <>{t('Zone1+3')}</>}</Translation>
                    </Button>
                  </Col>
                </Row>
                <br/>
                <Row>
                  <Col xl="4" lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                    <Button size="lg" className={!this.state.isW1to12 ? "w-100 keyboard" : "w-100 keyboard-active"} onClick={() => this.filter('w1to12')} disabled={!page_status} outline>
                      1-12
                    </Button>
                  </Col>
                  <Col xl="4" lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                    <Button size="lg" className={!this.state.isW13to24 ? "w-100 keyboard" : "w-100 keyboard-active"} onClick={() => this.filter('w13to24')} disabled={!page_status} outline>
                      13-24
                    </Button>
                  </Col>
                  <Col xl="4" lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                    <Button size="lg" className={!this.state.isW25to36 ? "w-100 keyboard" : "w-100 keyboard-active"} onClick={() => this.filter('w25to36')} disabled={!page_status} outline>
                      25-36
                    </Button>
                  </Col>
                </Row>
                <Row>
                  <Col lg="6" md="6" sm="6" xs="6" className="text-center p-1">
                    <Button size="lg" className={!this.state.isW1to18 ? "w-100 keyboard" : "w-100 keyboard-active"} onClick={() => this.filter('w1to18')} disabled={!page_status} outline>
                      1-18
                    </Button>
                  </Col>
                  <Col lg="6" md="6" sm="6" xs="6" className="text-center p-1">
                    <Button size="lg" className={!this.state.isW19to36 ? "w-100 keyboard" : "w-100 keyboard-active"} onClick={() => this.filter('w19to36')} disabled={!page_status} outline>
                      19-36
                    </Button>
                  </Col>
                </Row>
                <br/>
                <Row>
                  <Col xl="4" lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                    <Button size="lg" className={!this.state.isWTop ? "w-100 keyboard" : "w-100 keyboard-active"} onClick={() => this.filter('wTop')} disabled={!page_status} outline>
                      <Translation>{(t, { i18n }) => <>{t('TOP')}</>}</Translation>
                    </Button>
                  </Col>
                  <Col xl="4" lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                    <Button size="lg" className={!this.state.isWMid ? "w-100 keyboard" : "w-100 keyboard-active"} onClick={() => this.filter('wMid')} disabled={!page_status} outline>
                      <Translation>{(t, { i18n }) => <>{t('MID')}</>}</Translation>
                    </Button>
                  </Col>
                  <Col xl="4" lg="4" md="4" sm="4" xs="4" className="text-center p-1">
                    <Button size="lg" className={!this.state.isWBot ? "w-100 keyboard" : "w-100 keyboard-active"} onClick={() => this.filter('wBottom')} disabled={!page_status} outline>
                      <Translation>{(t, { i18n }) => <>{t('BOTM')}</>}</Translation>
                    </Button>
                  </Col>
                </Row>
              </div>
            </div>
          </Col>
        </Row>
        <div>
          <Modal isOpen={this.state.isPieModalOpen} toggle={this.toggle_out1} backdrop={'static'} size="lg">
            <ModalHeader toggle={this.toggle_out1}><Translation>{(t, { i18n }) => <>{t('Zoom')}</>}</Translation></ModalHeader>
            <ModalBody className="text-center">
              <div>
                <canvas ref="pie_canvas_zoom" id="pie_canvas_zoom" width="620" height="620" />
                <img ref="pie_canvasImg_zoom_0" src={board_0} alt={'roulette board'} style={{display: 'none'}} />
                <img ref="pie_canvasImg_zoom_90" src={board_90} alt={'roulette board'} style={{display: 'none'}} />
                <img ref="pie_canvasImg_zoom_180" src={board_180} alt={'roulette board'} style={{display: 'none'}} />
                <img ref="pie_canvasImg_zoom_270" src={board_270} alt={'roulette board'} style={{display: 'none'}} />
              </div>
            </ModalBody>
          </Modal>
        </div>
        <div>
          <Modal isOpen={this.state.isLineModalOpen} toggle={this.toggle_out2} backdrop={'static'} size="lg">
            <ModalHeader toggle={this.toggle_out2}><Translation>{(t, { i18n }) => <>{t('LineBoardZoom')}</>}</Translation></ModalHeader>
            <ModalBody className="text-center">
              <div>
                <canvas ref="line_canvas_zoom" id="line_canvas_zoom" width="620" height="620" />
                <img ref="line_canvasImg_zoom_0" src={board_0} alt={'roulette board'} style={{display: 'none'}} />
                <img ref="line_canvasImg_zoom_90" src={board_90} alt={'roulette board'} style={{display: 'none'}} />
                <img ref="line_canvasImg_zoom_180" src={board_180} alt={'roulette board'} style={{display: 'none'}} />
                <img ref="line_canvasImg_zoom_270" src={board_270} alt={'roulette board'} style={{display: 'none'}} />
              </div>
            </ModalBody>
          </Modal>
        </div>
        <div>
          <Modal isOpen={this.state.isRotateModalOpen} toggle={this.toggle_out3} backdrop={'static'} size="lg">
            <ModalHeader toggle={this.toggle_out3}><Translation>{(t, { i18n }) => <>{t('RotateBoardZoom')}</>}</Translation></ModalHeader>
            <ModalBody className="text-center">
              <div>
                <canvas ref="rotate_canvas_zoom1" id="rotate_canvas_zoom1" width="620" height="620" style={{position: 'absolute'}} />
                <canvas ref="rotate_canvas_zoom2"  width="620" height="620" />
                <img ref="rotate_canvasImg1_0" src={board_0} alt={'roulette board'} style={{display: 'none'}} />
                <img ref="rotate_canvasImg1_90" src={board_90} alt={'roulette board'} style={{display: 'none'}} />
                <img ref="rotate_canvasImg1_180" src={board_180} alt={'roulette board'} style={{display: 'none'}} />
                <img ref="rotate_canvasImg1_270" src={board_270} alt={'roulette board'} style={{display: 'none'}} />
                <img ref="rotate_canvasImg2_0" src={rotate_board_0} alt={'roulette rotate board'} style={{display: 'none'}} />
                <img ref="rotate_canvasImg2_90" src={rotate_board_90} alt={'roulette rotate board'} style={{display: 'none'}} />
                <img ref="rotate_canvasImg2_180" src={rotate_board_180} alt={'roulette rotate board'} style={{display: 'none'}} />
                <img ref="rotate_canvasImg2_270" src={rotate_board_270} alt={'roulette rotate board'} style={{display: 'none'}} />
              </div>
            </ModalBody>
          </Modal>
        </div>
        <div>
          <Modal isOpen={this.state.isTableModal} toggle={this.loadPage_out} backdrop={'static'} centered={true} size="lg">
            <ModalHeader toggle={this.loadPage_out}><Translation>{(t, { i18n }) => <>{t('SavedPages')}</>}</Translation></ModalHeader>
            <ModalBody style={{overflowY: 'auto', maxHeight: '700px'}}>
              <Container fluid className="p-0">
                {
                  !status ? (
                    <h1 className="h3 mb-3 text-center"><Translation>{(t, { i18n }) => <>{t('NoPages')}</>}</Translation></h1>
                  ) : (
                    <div></div>
                  )
                }
                {
                  Object.keys(pages).map((value, idex) => {
                    var date = new Date(value);
                    var current_date = months[date.getMonth()] + ' '  + date.getDate() + ' ' + date.getFullYear();
                    return (
                      <div key={idex}>
                        <h1 className="h3 mb-3 text-center">{current_date}</h1>
                        <Row>
                          {
                            pages[value].map((key, index) => {
                              return (
                                <Col xl="4" lg="4" md="6" sm="6" className="w-100" key={index}>
                                  <Card>
                                    <CardBody>
                                      <Row>
                                        <Col>
                                          <div style={{fontSize: 20}}>
                                            <StarRatingComponent 
                                              name="star_rate" 
                                              starCount={5}
                                              value={key.rating}
                                              editing={false}
                                            />
                                          </div>
                                          <div>
                                            <FontAwesomeIcon
                                              className="align-middle mr-3"
                                              icon={faHotel}
                                              fixedWidth
                                            />
                                            <span style={{fontSize: 15}} className="align-middle">{key.casino_name}</span>
                                          </div>
                                          <div>
                                            <FontAwesomeIcon
                                              className="align-middle mr-3"
                                              icon={faUserClock}
                                              fixedWidth
                                            />
                                            <span className="align-middle">{key.dealer_name}</span>
                                          </div>
                                        </Col>
                                        <Col>
                                          {
                                            !key.dealer_avatar ? (
                                              <img
                                                alt="dealer avatar"
                                                src={APIUrl + 'upload/head.svg'}
                                                className="rounded img-responsive float-right"
                                                width="70%"
                                              />
                                            ) : (
                                              <img
                                                alt="dealer avatar"
                                                src={APIUrl + key.dealer_avatar}
                                                className="rounded img-responsive float-right"
                                                width="70%"
                                              />
                                            )
                                          }
                                        </Col>
                                      </Row>
                                      <div className="mt-2">
                                        <FontAwesomeIcon
                                          className="align-middle mr-3"
                                          icon={faClock}
                                          fixedWidth
                                        />
                                        <span className="align-middle">{key.updated_at}</span>
                                      </div>
                                      <Row>
                                        <Col className="text-center">
                                          <Button color="primary" size="md" className="mt-2" onClick={() => this.load_page(value, index)}>
                                            <Translation>{(t, { i18n }) => <>{t('Load')}</>}</Translation>
                                          </Button>
                                        </Col>
                                      </Row>
                                    </CardBody>
                                  </Card>
                                </Col>
                              )
                            })
                          }
                        </Row>
                      </div>
                    )
                  })
                }
              </Container>
            </ModalBody>
          </Modal>
        </div>
        <div>
          <Modal isOpen={this.state.isBlockBtnModalOpen} toggle={this.toggle_out4} backdrop={'static'} centered={true} size="sm">
            <ModalHeader toggle={this.toggle_out4}><Translation>{(t, { i18n }) => <>{t('Warning')}</>}</Translation></ModalHeader>
            <ModalBody className="text-center">
              <div>
                <h3 className="mb-3"><Translation>{(t, { i18n }) => <>{t('NoPayNoGain')}</>}</Translation></h3>
                <h3 className="mb-3"><Translation>{(t, { i18n }) => <>{t('CheckOutPlansComment')}</>}</Translation></h3>
                <h3 className="mb-3"><Translation>{(t, { i18n }) => <>{t('GoTo')}</>}</Translation> <a href="/pricing" className="go-to-dashboard"><span className="go-to-dashboard"> <Translation>{(t, { i18n }) => <>{t('Subscribe')}</>}</Translation></span></a></h3>
              </div>
            </ModalBody>
          </Modal>
        </div>
        <div>
          <Modal isOpen={this.state.isPageRowModalOpen} toggle={this.onNewPageToggleOut} centered={true} size="sm">
            <ModalHeader toggle={this.onNewPageToggleOut}><strong><Translation>{(t, { i18n }) => <>{t('Alert')}</>}</Translation></strong></ModalHeader>
            <ModalBody className="text-center">
              <div className="text-center">
                <h3 className="mb-3"><Translation>{(t, { i18n }) => <>{t('ClickNewPageComment')}</>}</Translation></h3>
                <Button className="green_keyboard" onClick={() => this.newPage()}><Translation>{(t, { i18n }) => <>{t('NewPage')}</>}</Translation></Button>
              </div>
            </ModalBody>
          </Modal>
        </div>
      </Container>
    )
  }
}

export default Default;